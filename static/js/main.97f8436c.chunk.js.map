{"version":3,"sources":["pages/restaurant/restaurant_page.tsx","pages/management/management_page.tsx","pages/kitchen/kitchen_page.tsx","pages/waiter/components/swipeable_item.tsx","pages/waiter/components/table_card.tsx","pages/waiter/components/done_order_card.tsx","pages/waiter/waiter_page.tsx","util/constants.js","common/navigation/chakra_nav.tsx","common/navigation/Layout.tsx","common/navigation/common_navigator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RestaurantPage","ManagementPage","KitchenPage","SwipeableItem","props","fullSwipe","style","backgroundColor","type","ListType","ANDROID","threshold","list","map","order","key","trailingActions","orderAction","onClick","destructive","bg","justifyContent","display","d","px","icon","swipeChild","title","TableCard","maxW","w","boxShadow","rounded","overflow","m","_hover","transform","borderColor","p","spacing","children","id","table","pending","addToFinished","variant","finished","addToPending","mt","color","DoneOrderCard","my","fontSize","fontWeight","colorScheme","ActionTypes","WaiterPage","useReducer","produce","draft","action","idx","findIndex","x","mod","ADD_TO_PENDING","push","splice","ADD_TO_FINISHED","INITIAL","undefined","allOrders","forEach","value","index","tableOrders","tableOrdersDispatch","useState","allPendingOrder","setAllPendingOrders","useEffect","returnArray","concat","handleAddToPending","useCallback","handleAddToFinished","fetch","then","res","json","data","price","templateRows","templateColumns","gap","colSpan","item","Routes","LinkItems","name","RiRestaurantFill","link","GrUserManager","BiFoodMenu","GrRestaurant","SimpleSidebar","useDisclosure","isOpen","onOpen","onClose","minH","useColorModeValue","base","md","autoFocus","placement","returnFocusOnClose","onOverlayClick","size","ml","SidebarContent","rest","borderRight","borderRightColor","pos","h","alignItems","mx","fontFamily","NavItem","to","textDecoration","align","borderRadius","role","cursor","mr","_groupHover","as","MobileNav","height","borderBottomWidth","borderBottomColor","Layout","CommonNavigator","path","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97f8436c.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function RestaurantPage() {\n    return (\n        <div>\n            RESTAURANT NÉZET\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function ManagementPage() {\n    return (\n        <div>\n            MANAGEMENT NÉZET\n        </div>\n    )\n}\n","import React from \"react\";\n\nexport default function KitchenPage() {\n  return <div>KITCHEN NÉZET</div>;\n}\n","import { Box, Center, Flex } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nimport {\n  SwipeableList,\n  SwipeableListItem,\n  SwipeAction,\n  TrailingActions,\n  Type as ListType,\n} from \"react-swipeable-list\";\nimport \"react-swipeable-list/dist/styles.css\";\nimport { OrderModel } from \"../../../models/order\";\n\ninterface Props {\n  children: React.ReactNode;\n  swipeChild: React.ReactNode;\n  icon: React.ReactNode;\n  id: string;\n  list: OrderModel[];\n  onClick: (orderAction: OrderModel) => void;\n}\n\nexport default function SwipeableItem(props: Props) {\n\n  const trailingActions = (orderAction: OrderModel, onClick: (orderAction: OrderModel) => void) => (\n    <TrailingActions>\n      <SwipeAction\n        destructive={true}\n        onClick={() => {\n          onClick(orderAction);\n        }}\n      >\n        <Box bg=\"red.200\">\n          <Center justifyContent=\"justify-center\" display=\"row\" d=\"flex\" px=\"1\">\n            {props.icon}\n            {props.swipeChild}\n          </Center>\n        </Box>\n      </SwipeAction>\n    </TrailingActions>\n  );\n\n  return (\n    <Flex>\n        <SwipeableList\n          fullSwipe={true}\n          style={{ backgroundColor: \"orange.200\" }}\n          type={ListType.ANDROID}\n          threshold={0.5}\n        >\n        {props.list.map((order, key) => (\n          <SwipeableListItem key={order.title} trailingActions={trailingActions(order, props.onClick)}>\n            {order.title}\n          </SwipeableListItem>\n        ))}\n        </SwipeableList>\n    </Flex>\n  );\n};\n","import { Box, Button, Divider, Text, VStack } from \"@chakra-ui/react\";\nimport \"react-swipeable-list/dist/styles.css\";\n\nimport { FaArrowAltCircleDown, FaArrowAltCircleUp } from \"react-icons/fa\";\nimport SwipeableItem from \"./swipeable_item\";\nimport { OrderModel } from \"../../../models/order\";\nimport { TableOrderModel } from \"../../../models/tableorder\";\n\nimport React from \"react\";\n\ninterface Props {\n  table: TableOrderModel;\n  addToPending: (order: OrderModel) => void;\n  addToFinished: (order: OrderModel) => void;\n}\n\nexport default function TableCard(props: Props) {\n  return (\n    <Box\n      maxW={\"270px\"}\n      w={\"full\"}\n      bg=\"whiteAlpha.900\"\n      boxShadow={\"2xl\"}\n      rounded={\"md\"}\n      overflow={\"hidden\"}\n      m=\"3\"\n      _hover={{\n        transform: \"scale(1.2)\",\n        boxShadow: \"lg\",\n        borderColor: \"grey.900\",\n      }}\n    >\n      <Box p={6}>\n        <VStack spacing=\"2px\">\n          <Box\n            w=\"100%\"\n            bg=\"orange.200\"\n            d=\"flex\"\n            display=\"table-column\"\n            justifyContent=\"justify-start\"\n          >\n            <SwipeableItem\n              children={<Text>item</Text>}\n              swipeChild={<Text>DONE</Text>}\n              icon={<FaArrowAltCircleDown />}\n              id=\"1\"\n              list={props.table.pending}\n              onClick={function (orderAction: OrderModel): void {\n                props.addToFinished(orderAction);\n              }}\n            />\n          </Box>\n          <Divider variant=\"dashed\" />\n          <Box w=\"100%\" bg=\"green.200\">\n            <SwipeableItem\n              children={<Text>item</Text>}\n              swipeChild={<Text>BACK</Text>}\n              icon={<FaArrowAltCircleUp />}\n              id=\"1\"\n              list={props.table.finished}\n              onClick={function (orderAction: OrderModel): void {\n                props.addToPending(orderAction);\n              }}\n            />\n          </Box>\n        </VStack>\n\n        <Button\n          w={\"full\"}\n          mt={4}\n          bg=\"gray.900\"\n          color={\"white\"}\n          rounded={\"md\"}\n          _hover={{\n            transform: \"translateY(-2px)\",\n            boxShadow: \"lg\",\n          }}\n        >\n          PAY\n        </Button>\n      </Box>\n    </Box>\n  );\n};","import { Badge, Box, Divider, Flex, Spacer, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nexport default function DoneOrderCard() {\n  return (\n    <Box>\n      <Flex px=\"2\" my=\"2\">\n        <Text fontSize=\"xl\" fontWeight=\"bold\">\n          ORDER NUm\n        </Text>\n        <Spacer />\n        <Badge my=\"1\" fontSize=\"0.8em\" colorScheme=\"green\" variant=\"solid\">\n          TABLE1\n        </Badge>\n      </Flex>\n      <Divider />\n    </Box>\n  );\n}\n","import React, { useState, useEffect, useReducer, useCallback } from \"react\";\n\nimport \"react-multi-carousel/lib/styles.css\";\nimport {\n  Text,\n  Wrap,\n  Grid,\n  GridItem\n} from \"@chakra-ui/react\";\nimport TableCard from \"./components/table_card\";\nimport DoneOrderCard from \"./components/done_order_card\";\nimport { FaArrowAltCircleUp } from \"react-icons/fa\";\nimport SwipeableItem from \"./components/swipeable_item\";\nimport { OrderModel } from \"../../models/order\";\nimport { TableOrderModel } from \"../../models/tableorder\";\nimport produce from \"immer\";\n\nenum ActionTypes {\n  ADD_TO_FINISHED = \"AddToFinished\",\n  ADD_TO_PENDING = \"AddToPending\",\n  INITIAL = \"Initial\"\n}\n\ntype Action = {\n  type: ActionTypes;\n  order: OrderModel;\n  allOrders?: TableOrderModel[];\n}\n\nexport default function WaiterPage() {\n  const [tableOrders, tableOrdersDispatch] = useReducer(produce((draft: TableOrderModel[], action: Action) => {\n    const idx = draft.findIndex(x => x.table === action.order.table);\n    var mod = draft[idx];\n    switch (action.type) {\n      case ActionTypes.ADD_TO_PENDING: {\n        mod.pending.push(action.order);\n        mod.finished.splice(mod.finished.findIndex(x => x.id === action.order.id), 1);\n        break;\n      }\n      case ActionTypes.ADD_TO_FINISHED: {\n        mod.finished.push(action.order);\n        mod.pending.splice(mod.pending.findIndex(x => x.id === action.order.id), 1);\n        break;\n      }\n      case ActionTypes.INITIAL: {\n        if (action.allOrders !== undefined) {\n          action.allOrders.forEach((value, index) => (\n            draft.push(value)\n          ));\n        }\n        break;\n      }\n    }\n  }), [], undefined);\n\n  const [allPendingOrder, setAllPendingOrders] = useState<OrderModel[]>([]);\n\n  useEffect(() => {\n    var returnArray: OrderModel[] = [];\n    tableOrders.forEach((order, index) => (\n      returnArray = returnArray.concat(order.pending)\n    ));\n    setAllPendingOrders(returnArray);\n  }, [tableOrders]);\n\n  const handleAddToPending = useCallback((order: OrderModel) => {\n    tableOrdersDispatch({type: ActionTypes.ADD_TO_PENDING, order: order});\n  }, []);\n\n  const handleAddToFinished = useCallback((order: OrderModel) => {\n    tableOrdersDispatch({type: ActionTypes.ADD_TO_FINISHED, order: order});\n  }, []);\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/allTableOrders\")\n      .then((res) => res.json())\n      .then((data: TableOrderModel[]) => {\n        tableOrdersDispatch({type: ActionTypes.INITIAL, order: { title: \"\", price: -1, id: \"-1\", table: -1 }, allOrders: data})\n      });\n  }, []);\n\n  return (\n    <Grid\n      templateRows=\"repeat(1, 1fr)\"\n      templateColumns=\"repeat(5, 1fr)\"\n      gap={4}\n    >\n      <GridItem colSpan={4} bg=\"papayawhip\" p={2}>\n        <Wrap>\n          {tableOrders.map((item, index) => (\n            <TableCard\n              key={index}\n              table={item}\n              addToFinished={handleAddToFinished}\n              addToPending={handleAddToPending}\n            />\n          ))}\n        </Wrap>\n      </GridItem>\n      <GridItem colSpan={1} bg=\"tomato\">\n        <SwipeableItem\n              children={<DoneOrderCard />}\n              swipeChild={<Text>DONE</Text>}\n              icon={<FaArrowAltCircleUp />}\n              id=\"1\"\n              list={allPendingOrder}\n              onClick={function (orderAction: OrderModel): void {\n                handleAddToFinished(orderAction);\n              }}\n          />\n      </GridItem>\n    </Grid>\n  );\n}\n","const Routes = {\n  HOME: \"/\",\n  RESTAURANT: \"/restaurant\",\n  MANAGEMENT: \"/management\",\n  WAITER: \"/waiter\",\n  KITCHEN: \"/kitchen\",\n};\n\nexport { Routes };\n","import React, { ReactNode } from \"react\";\nimport {\n  IconButton,\n  Box,\n  CloseButton,\n  Flex,\n  Icon,\n  useColorModeValue,\n  Drawer,\n  DrawerContent,\n  Text,\n  useDisclosure,\n  BoxProps,\n  FlexProps,\n} from \"@chakra-ui/react\";\nimport { RiRestaurantFill } from \"react-icons/ri\";\nimport { FiMenu } from \"react-icons/fi\";\nimport { BiFoodMenu } from \"react-icons/bi\";\nimport { GrRestaurant, GrUserManager } from \"react-icons/gr\";\nimport { IconType } from \"react-icons\";\nimport { ReactText } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Routes } from \"../../util/constants\";\n\ninterface LinkItemProps {\n  name: string;\n  icon: IconType;\n  link: string;\n}\nconst LinkItems: Array<LinkItemProps> = [\n  { name: \"Home\", icon: RiRestaurantFill, link: Routes.RESTAURANT },\n  { name: \"Management\", icon: GrUserManager, link: Routes.MANAGEMENT },\n  { name: \"Waiter\", icon: BiFoodMenu, link: Routes.WAITER },\n  { name: \"Kitchen\", icon: GrRestaurant, link: Routes.KITCHEN },\n];\n\nexport default function SimpleSidebar({ children }: { children: ReactNode }) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <Box minH=\"100vh\" bg={useColorModeValue(\"gray.100\", \"gray.900\")}>\n      <SidebarContent\n        onClose={() => onClose}\n        display={{ base: \"none\", md: \"block\" }}\n      />\n      <Drawer\n        autoFocus={false}\n        isOpen={isOpen}\n        placement=\"left\"\n        onClose={onClose}\n        returnFocusOnClose={false}\n        onOverlayClick={onClose}\n        size=\"full\"\n      >\n        <DrawerContent>\n          <SidebarContent onClose={onClose} />\n        </DrawerContent>\n      </Drawer>\n      {/* mobilenav */}\n      <MobileNav display={{ base: \"flex\", md: \"none\" }} onOpen={onOpen} />\n      <Box ml={{ base: 0, md: 60 }} p=\"4\">\n        {children}\n      </Box>\n    </Box>\n  );\n}\n\ninterface SidebarProps extends BoxProps {\n  onClose: () => void;\n}\n\nconst SidebarContent = ({ onClose, ...rest }: SidebarProps) => {\n  return (\n    <Box\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderRight=\"1px\"\n      borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      w={{ base: \"full\", md: 60 }}\n      pos=\"fixed\"\n      h=\"full\"\n      {...rest}\n    >\n      <Flex h=\"20\" alignItems=\"center\" mx=\"8\" justifyContent=\"space-between\">\n        <Text fontSize=\"2xl\" fontFamily=\"monospace\" fontWeight=\"bold\">\n          Logo\n        </Text>\n        <CloseButton display={{ base: \"flex\", md: \"none\" }} onClick={onClose} />\n      </Flex>\n      {LinkItems.map((link) => (\n        <NavItem key={link.name} icon={link.icon} link={link.link}>\n          {link.name}\n        </NavItem>\n      ))}\n    </Box>\n  );\n};\n\ninterface NavItemProps extends FlexProps {\n  icon: IconType;\n  children: ReactText;\n  link: string;\n}\nconst NavItem = ({ icon, children, link, ...rest }: NavItemProps) => {\n  return (\n    <NavLink to={link} style={{ textDecoration: \"none\" }}>\n      <Flex\n        align=\"center\"\n        p=\"4\"\n        mx=\"4\"\n        borderRadius=\"lg\"\n        role=\"group\"\n        cursor=\"pointer\"\n        _hover={{\n          bg: \"cyan.400\",\n          color: \"white\",\n        }}\n        {...rest}\n      >\n        {icon && (\n          <Icon\n            mr=\"4\"\n            fontSize=\"16\"\n            _groupHover={{\n              color: \"white\",\n            }}\n            as={icon}\n          />\n        )}\n        {children}\n      </Flex>\n    </NavLink>\n  );\n};\n\ninterface MobileProps extends FlexProps {\n  onOpen: () => void;\n}\nconst MobileNav = ({ onOpen, ...rest }: MobileProps) => {\n  return (\n    <Flex\n      ml={{ base: 0, md: 60 }}\n      px={{ base: 4, md: 24 }}\n      height=\"20\"\n      alignItems=\"center\"\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderBottomWidth=\"1px\"\n      borderBottomColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      justifyContent=\"flex-start\"\n      {...rest}\n    >\n      <IconButton\n        variant=\"outline\"\n        onClick={onOpen}\n        aria-label=\"open menu\"\n        icon={<FiMenu />}\n      />\n\n      <Text fontSize=\"2xl\" ml=\"8\" fontFamily=\"monospace\" fontWeight=\"bold\">\n        Logo\n      </Text>\n    </Flex>\n  );\n};\n","import { Fragment } from \"react\";\nimport SimpleSidebar from \"./chakra_nav\";\n\ninterface ParentCompProps {\n  childComp?: React.ReactNode;\n}\n\nconst Layout: React.FC<ParentCompProps> = (props) => {\n  return (\n    <Fragment>\n      <SimpleSidebar children={props.children} />\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport RestaurantPage from \"../../pages/restaurant/restaurant_page\";\nimport ManagementPage from \"../../pages/management/management_page\";\nimport KitchenPage from \"../../pages/kitchen/kitchen_page\";\nimport WaiterPage from \"../../pages/waiter/waiter_page\";\nimport Layout from \"./Layout\";\nimport { Routes } from \"../../util/constants\";\n\nfunction CommonNavigator() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path={Routes.HOME} exact>\n          <Redirect to={Routes.RESTAURANT} />\n        </Route>\n        <Route path={Routes.RESTAURANT} exact>\n          <RestaurantPage />\n        </Route>\n        <Route path={Routes.MANAGEMENT}>\n          <ManagementPage />\n        </Route>\n        <Route path={Routes.KITCHEN}>\n          <KitchenPage />\n        </Route>\n        <Route path={Routes.WAITER}>\n          <WaiterPage />\n        </Route>\n        <Route path=\"*\">\n          <div>NOTHING TO SEE HERE PAGE</div>\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default CommonNavigator;\n","import React from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport CommonNavigator from \"./common/navigation/common_navigator\";\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <BrowserRouter>\n        <CommonNavigator />\n      </BrowserRouter>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}