{"version":3,"sources":["pages/restaurant/restaurant_page.tsx","pages/management/management_page.tsx","pages/kitchen/kitchen_page.tsx","pages/waiter/components/swipeable_item.tsx","pages/waiter/components/add_order_card.tsx","pages/waiter/components/done_order_card.tsx","pages/waiter/components/table_card.tsx","pages/waiter/waiter_page.tsx","util/constants.js","common/navigation/chakra_nav.tsx","common/navigation/Layout.tsx","common/navigation/common_navigator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RestaurantPage","ManagementPage","KitchenPage","SwipeableItem","props","fullSwipe","style","backgroundColor","type","ListType","ANDROID","threshold","list","map","order","trailingActions","orderAction","onClick","destructive","bg","justifyContent","display","d","px","icon","swipeChild","children","name","table","id","countries","value","label","AddOrderCard","React","useState","pickerItems","setPickerItems","selectedItems","setSelectedItems","colorScheme","size","placeholder","onCreateItem","item","curr","itemRenderer","selected","spacing","items","onSelectedItemsChange","changes","console","log","handleSelectedItemsChange","variant","forEach","addNewOrders","parseInt","tableNum","price","orderStatus","OrderStatus","InProgress","DoneOrderCard","flexGrow","mx","fontSize","fontWeight","orderName","showTable","my","TableCard","maxW","w","boxShadow","rounded","overflow","m","_hover","transform","borderColor","p","templateColumns","gap","mb","mr","tableNumber","addOrder","filter","x","Ready","changeStatus","Served","mt","color","ActionTypes","WaiterPage","useReducer","produce","draft","action","INITIAL","undefined","orders","get","push","set","ORDER_STATUS_CHANGED","idx","findIndex","ADD_ORDER","Map","tableOrdersRemastered","tableOrdersRemasteredDispatch","handleChangeStatus","useCallback","handleInitial","allOrders","handleAddOrder","connection","setConnection","useEffect","connect","HubConnectionBuilder","withUrl","withAutomaticReconnect","configureLogging","LogLevel","Debug","build","handleChangeStatusInvoke","status","invoke","Id","start","then","on","RestaurantId","catch","error","allPendingOrder","setAllPendingOrders","isDescending","setIsDescending","handleSortList","retValue","sortedList","sort","a","b","returnArray","index","concat","templateRows","colSpan","Array","from","Routes","LinkItems","RiRestaurantFill","link","GrUserManager","BiFoodMenu","GrRestaurant","SimpleSidebar","useDisclosure","isOpen","onOpen","onClose","minH","useColorModeValue","base","md","autoFocus","placement","returnFocusOnClose","onOverlayClick","ml","SidebarContent","rest","borderRight","borderRightColor","pos","h","alignItems","fontFamily","NavItem","to","textDecoration","align","borderRadius","role","cursor","_groupHover","as","MobileNav","height","borderBottomWidth","borderBottomColor","Layout","CommonNavigator","path","exact","enableMapSet","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b424e1b.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function RestaurantPage() {\n    return (\n        <div>\n            RESTAURANT NÉZET\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function ManagementPage() {\n    return (\n        <div>\n            MANAGEMENT NÉZET\n        </div>\n    )\n}\n","import React from \"react\";\n\nexport default function KitchenPage() {\n  return <div>KITCHEN NÉZET</div>;\n}\n","import { Box, Center, Flex } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nimport {\n  SwipeableList,\n  SwipeableListItem,\n  SwipeAction,\n  TrailingActions,\n  Type as ListType,\n} from \"react-swipeable-list\";\nimport \"react-swipeable-list/dist/styles.css\";\nimport { Order } from \"../waiter_page\";\n\ninterface Props {\n  children: (orderName: string, tableNum: number) => React.ReactNode;\n  swipeChild: React.ReactNode;\n  icon: React.ReactNode;\n  list: Order[];\n  onClick: (orderAction: Order) => void;\n}\n\nexport default function SwipeableItem(props: Props) {\n  const trailingActions = (orderAction: Order, onClick: (orderAction: Order) => void) => (\n    <TrailingActions>\n      <SwipeAction\n        destructive={true}\n        onClick={() => {\n          onClick(orderAction);\n        }}\n      >\n        <Box bg=\"red.200\">\n          <Center justifyContent=\"justify-center\" display=\"row\" d=\"flex\" px=\"1\">\n            {props.icon}\n            {props.swipeChild}\n          </Center>\n        </Box>\n      </SwipeAction>\n    </TrailingActions>\n  );\n\n  return (\n    <Flex>\n        <SwipeableList\n          fullSwipe={true}\n          style={{ backgroundColor: \"orange.200\" }}\n          type={ListType.ANDROID}\n          threshold={0.5}\n        >\n        {props.list.map((order) => (\n          <SwipeableListItem \n            key={order.id} \n            trailingActions={trailingActions(order, props.onClick)}>\n              {props.children(order.name, order.table)}\n          </SwipeableListItem>\n          ))}\n        </SwipeableList>\n    </Flex>\n  );\n}\n","import {\n  Box,\n  Button,\n  Text,\n  Center,\n  Flex,\n  Popover,\n  PopoverArrow,\n  PopoverBody,\n  PopoverCloseButton,\n  PopoverContent,\n  PopoverFooter,\n  Spacer,\n  PopoverTrigger,\n  Portal,\n} from \"@chakra-ui/react\";\nimport { CUIAutoComplete } from \"chakra-ui-autocomplete\";\nimport React from \"react\";\nimport { FaPlus } from \"react-icons/fa\";\nimport { Order, OrderStatus } from \"../waiter_page\";\n\nexport interface Item {\n  label: string;\n  value: string;\n}\nconst countries = [\n  { value: \"Order1\", label: \"Order1\" },\n  { value: \"Order2\", label: \"Order2\" },\n  { value: \"Order3\", label: \"Order3\" },\n  { value: \"Order4\", label: \"Order4\" },\n  { value: \"Order5\", label: \"Order5\" },\n  { value: \"Order6\", label: \"Order6\" },\n  { value: \"Order7\", label: \"Order7\" },\n  { value: \"Order8\", label: \"Order8\" },\n  { value: \"Order9\", label: \"Order9\" },\n  { value: \"Order10\", label: \"Order10\" },\n];\n\nexport interface AddOrderProps {\n  tableNum: number;\n  addNewOrders: (order: Order) => void;\n}\n\nconst AddOrderCard = (props: AddOrderProps) => {\n  const [pickerItems, setPickerItems] = React.useState(countries);\n  const [selectedItems, setSelectedItems] = React.useState<Item[]>([]);\n\n  const handleCreateItem = (item: Item) => {\n    setPickerItems((curr) => [...curr, item]);\n    setSelectedItems((curr) => [...curr, item]);\n  };\n\n  const handleSelectedItemsChange = (selectedItems?: Item[]) => {\n    if (selectedItems) {\n      console.log(selectedItems!);\n      setSelectedItems(selectedItems);\n    }\n  };\n\n  const handleOrderAdd = () => {\n    selectedItems.forEach((item) => {\n      props.addNewOrders({\n        id: parseInt(item.value),\n        table: props.tableNum,\n        name: item.label,\n        price: 12,\n        orderStatus: OrderStatus.InProgress\n      });\n    });\n\n    setSelectedItems([]);\n  };\n\n  const customRender = (selected: Item) => {\n    return (\n      <Flex spacing={5} justifyContent=\"space-between\">\n        <Text>{selected.label}</Text>\n        <Spacer />\n        <Box></Box>\n      </Flex>\n    );\n  };\n\n  return (\n    <Popover>\n      <PopoverTrigger>\n        <Button colorScheme=\"orange\" size=\"xs\">\n          <FaPlus />\n        </Button>\n      </PopoverTrigger>\n      <Portal>\n        <PopoverContent>\n          <PopoverArrow />\n          <PopoverCloseButton />\n          <PopoverBody>\n            <CUIAutoComplete\n              label=\"Search your order or click dropdown\"\n              placeholder=\"Order name\"\n              onCreateItem={handleCreateItem}\n              selectedItems={selectedItems}\n              itemRenderer={customRender}\n              items={pickerItems}\n              onSelectedItemsChange={(changes: any) => {\n                handleSelectedItemsChange(changes.selectedItems);\n              }}\n            />\n          </PopoverBody>\n          <PopoverFooter>\n            <Center>\n              <Button\n                colorScheme=\"teal\"\n                variant=\"outline\"\n                onClick={handleOrderAdd}\n              >\n                ADD ORDERS\n              </Button>\n            </Center>\n          </PopoverFooter>\n        </PopoverContent>\n      </Portal>\n    </Popover>\n  );\n};\n\nexport default AddOrderCard;\n","import { Badge, Box, Divider, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nexport interface Props {\n  orderName: string;\n  tableNum: number;\n  showTable: boolean;\n  fontSize: string;\n}\n\nexport default function DoneOrderCard(props: Props) {\n  return (\n    <Box flexGrow={1} mx={2}>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Text fontSize={props.fontSize} fontWeight=\"bold\">\n          {props.orderName}\n        </Text>\n        {props.showTable && (\n          <Badge my=\"1\" fontSize=\"0.8em\" colorScheme=\"green\" variant=\"solid\">\n            TABLE {props.tableNum}\n          </Badge>\n        )}\n      </Box>\n      <Divider />\n    </Box>\n  );\n}\n","import {\n  Badge,\n  Box,\n  Grid,\n  VStack,\n  Text,\n  Divider,\n  Button,\n} from \"@chakra-ui/react\";\n\nimport \"react-swipeable-list/dist/styles.css\";\n\nimport { FaArrowAltCircleDown, FaArrowAltCircleUp } from \"react-icons/fa\";\nimport SwipeableItem from \"./swipeable_item\";\n\nimport React from \"react\";\nimport { Order, OrderStatus } from \"../waiter_page\";\nimport AddOrderCard from \"./add_order_card\";\nimport DoneOrderCard from \"./done_order_card\";\n\ninterface Props {\n  table: Order[];\n  tableNumber: number;\n  addOrder: (order: Order) => void;\n  changeStatus: (order: Order, status: OrderStatus) => void;\n}\n\nexport default function TableCard(props: Props) {\n  return (\n    <Box\n      maxW={\"270px\"}\n      w={\"full\"}\n      bg=\"whiteAlpha.900\"\n      boxShadow={\"2xl\"}\n      rounded={\"md\"}\n      overflow={\"hidden\"}\n      m=\"3\"\n      _hover={{\n        transform: \"scale(1.2)\",\n        boxShadow: \"lg\",\n        borderColor: \"grey.900\",\n      }}\n    >\n      <Box p={6}>\n        <VStack spacing=\"2px\">\n          <Grid templateColumns=\"repeat(3, 1fr)\" gap={6}>\n            <Box />\n            <Badge fontSize=\"md\" mb={1} mr={3}>\n              Table {props.tableNumber}\n            </Badge>\n            <AddOrderCard\n              addNewOrders={props.addOrder}\n              tableNum={props.tableNumber}\n            />\n          </Grid>\n\n          <Box\n            w=\"100%\"\n            bg=\"orange.200\"\n            d=\"flex\"\n            display=\"table-column\"\n            justifyContent=\"justify-start\"\n          >\n            <SwipeableItem\n              children={(orderName, tableNum) => (\n                <DoneOrderCard\n                  fontSize={\"md\"}\n                  orderName={orderName}\n                  tableNum={tableNum}\n                  showTable={false}\n                />\n              )}\n              swipeChild={<Text>DONE</Text>}\n              icon={<FaArrowAltCircleDown />}\n              list={[...props.table.filter(x => x.orderStatus === OrderStatus.InProgress || x.orderStatus === OrderStatus.Ready)]}\n              onClick={function (orderAction: Order): void {\n                props.changeStatus(orderAction, OrderStatus.Served);\n              }}\n            />\n          </Box>\n          <Divider variant=\"dashed\" />\n          <Box w=\"100%\" bg=\"green.200\">\n            <SwipeableItem\n              children={(orderName, tableNum) => (\n                <DoneOrderCard\n                  orderName={orderName}\n                  tableNum={tableNum}\n                  showTable={false}\n                  fontSize={\"md\"}\n                />\n              )}\n              swipeChild={<Text>BACK</Text>}\n              icon={<FaArrowAltCircleUp />}\n              list={[...props.table.filter(x => x.orderStatus === OrderStatus.Served)]}\n              onClick={function (orderAction: Order): void {\n                props.changeStatus(orderAction, OrderStatus.Ready);\n              }}\n            />\n          </Box>\n        </VStack>\n\n        <Button\n          w={\"full\"}\n          mt={4}\n          bg=\"gray.900\"\n          color={\"white\"}\n          rounded={\"md\"}\n          _hover={{\n            transform: \"translateY(-2px)\",\n            boxShadow: \"lg\",\n          }}\n        >\n          PAY\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState, useEffect, useReducer, useCallback } from \"react\";\n\nimport \"react-multi-carousel/lib/styles.css\";\nimport {\n  Text,\n  Wrap,\n  Grid,\n  GridItem,\n  Center\n} from \"@chakra-ui/react\";\nimport TableCard from \"./components/table_card\";\nimport DoneOrderCard from \"./components/done_order_card\";\nimport { FaAngleDown, FaAngleUp, FaArrowAltCircleUp } from \"react-icons/fa\";\nimport SwipeableItem from \"./components/swipeable_item\";\nimport produce from \"immer\";\nimport { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\n\nexport enum ActionTypes {\n  INITIAL = \"Initial\",\n  ORDER_STATUS_CHANGED = \"OrderStatusChanged\",\n  ADD_ORDER = \"AddOrder\"\n}\n\nexport enum OrderStatus {\n  InProgress = 0,\n  Ready = 1,\n  Served = 2\n}\n\nexport interface Order {\n  id: number;\n  table: number;\n  name: string;\n  price: number;\n  orderStatus: OrderStatus;\n}\n\nexport type OrderAction = {\n  type: ActionTypes;\n  order?: Order;\n  orders?: Order[];\n}\n\nexport default function WaiterPage() {\n  const [tableOrdersRemastered, tableOrdersRemasteredDispatch] = useReducer(produce((draft: Map<number, Order[]>, action: OrderAction) => {\n    switch (action.type) {\n      case ActionTypes.INITIAL: {\n        if (action.orders !== undefined) {\n          action.orders.forEach((order: Order) => {\n            var table = draft.get(order.table);\n            if (table !== undefined) {\n              table.push(order);\n            } else {\n              draft.set(order.table, [order]);\n            }\n          });\n        }\n        break;\n      }\n      case ActionTypes.ORDER_STATUS_CHANGED: {\n        if (action.order !== undefined) {\n          var table = draft.get(action.order.table);\n          if (table !== undefined) {\n            var idx = table.findIndex(x => x.id === action.order?.id);\n            table[idx] = action.order;\n          }\n        }\n        break;\n      }\n      case ActionTypes.ADD_ORDER: {\n        if (action.order !== undefined) {\n          table = draft.get(action.order.table);\n          if (table !== undefined) {\n            table.push(action.order);\n          }\n        }\n        break;\n      }\n    }\n  }), new Map<number, Order[]>(), undefined);\n\n  const handleChangeStatus = useCallback((order: Order) => {\n    tableOrdersRemasteredDispatch({type: ActionTypes.ORDER_STATUS_CHANGED, order});\n  }, []);\n\n  const handleInitial = useCallback((allOrders: Order[]) => {\n    tableOrdersRemasteredDispatch({type: ActionTypes.INITIAL, orders: allOrders})\n  }, []);\n\n  const handleAddOrder = useCallback((order: Order) => {\n    tableOrdersRemasteredDispatch({type: ActionTypes.ADD_ORDER, order: order});\n  }, []);\n\n  const [connection, setConnection] = useState<null | HubConnection>(null);\n\n  useEffect(() => {\n    const connect = new HubConnectionBuilder()\n      .withUrl(\"http://localhost:5000/restauranthub\")\n      .withAutomaticReconnect()\n      .configureLogging(LogLevel.Debug)\n      .build();\n\n    setConnection(connect);\n  }, []);\n\n  const handleChangeStatusInvoke = useCallback((order: Order, status: OrderStatus) => {\n    connection?.invoke(\"UpdateOrderStatus\", { Id: order.id, OrderStatus: status });\n  }, [connection]);\n\n  useEffect(() => {\n    if (connection) {\n      connection.start().then(() => {\n        connection.on(\"AllOrders\", (orders: Order[]) => {\n          handleInitial(orders);\n        });\n        connection.on(\"OrderStatusUpdated\", (order: Order) => {\n          handleChangeStatus(order);\n        });\n\n        connection.invoke(\"GetAllOrders\", { RestaurantId: 1 });\n      }).catch((error) => console.log(error));\n    }\n  }, [connection, handleChangeStatus, handleInitial]);\n\n  const [allPendingOrder, setAllPendingOrders] = useState<Order[]>([]);\n  const [isDescending, setIsDescending] = useState<boolean>(true);\n\n  const handleSortList = () => {\n    const retValue = isDescending ? 1 : -1;\n\n    const sortedList = allPendingOrder.sort((a, b) =>\n      a.table > b.table ? retValue : -1 * retValue\n    );\n\n    console.log(isDescending);\n    setIsDescending(!isDescending);\n    setAllPendingOrders(sortedList);\n  };\n\n  useEffect(() => {\n    var returnArray: Order[] = [];\n    tableOrdersRemastered.forEach((order, index) => (\n      returnArray = returnArray.concat(order.filter(x => x.orderStatus === OrderStatus.InProgress || x.orderStatus === OrderStatus.Ready))\n    ));\n    setAllPendingOrders(returnArray);\n  }, [tableOrdersRemastered]);\n\n  \n\n  return (\n    <Grid\n      templateRows=\"repeat(1, 1fr)\"\n      templateColumns=\"repeat(5, 1fr)\"\n      gap={4}\n    >\n      <GridItem colSpan={4} bg=\"papayawhip\" p={2}>\n        <Wrap>\n          {Array.from(tableOrdersRemastered).map((orders) => (\n            <TableCard\n              key={orders[0]}\n              table={orders[1]}\n              tableNumber={orders[0]}\n              addOrder={handleAddOrder}\n              changeStatus={handleChangeStatusInvoke}\n            />\n          ))}\n        </Wrap>\n      </GridItem>\n      <GridItem colSpan={1} bg=\"tomato\">\n        <Center mx={1}>\n          <Text\n              my={3}\n              mx={3}\n              fontSize={\"2xl\"}\n              fontWeight={\"bold\"}\n              color={\"grey.700\"}\n            >\n              Finished orders\n            </Text>\n            {isDescending && <FaAngleUp onClick={handleSortList} />}\n            {!isDescending && <FaAngleDown onClick={handleSortList} />}\n        </Center>\n        <SwipeableItem\n              children={(orderName, tableNum) => (\n                <DoneOrderCard\n                  orderName={orderName}\n                  tableNum={tableNum}\n                  showTable={true}\n                  fontSize={\"xl\"}\n                />\n              )}\n              swipeChild={<Text>DONE</Text>}\n              icon={<FaArrowAltCircleUp />}\n              list={allPendingOrder}\n              onClick={function (orderAction: Order): void {\n                handleChangeStatusInvoke(orderAction, OrderStatus.Served);\n              }}\n        />\n      </GridItem>\n    </Grid>\n  );\n}\n","const Routes = {\n  HOME: \"/\",\n  RESTAURANT: \"/restaurant\",\n  MANAGEMENT: \"/management\",\n  WAITER: \"/waiter\",\n  KITCHEN: \"/kitchen\",\n};\n\nexport { Routes };\n","import React, { ReactNode } from \"react\";\nimport {\n  IconButton,\n  Box,\n  CloseButton,\n  Flex,\n  Icon,\n  useColorModeValue,\n  Drawer,\n  DrawerContent,\n  Text,\n  useDisclosure,\n  BoxProps,\n  FlexProps,\n} from \"@chakra-ui/react\";\nimport { RiRestaurantFill } from \"react-icons/ri\";\nimport { FiMenu } from \"react-icons/fi\";\nimport { BiFoodMenu } from \"react-icons/bi\";\nimport { GrRestaurant, GrUserManager } from \"react-icons/gr\";\nimport { IconType } from \"react-icons\";\nimport { ReactText } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Routes } from \"../../util/constants\";\n\ninterface LinkItemProps {\n  name: string;\n  icon: IconType;\n  link: string;\n}\nconst LinkItems: Array<LinkItemProps> = [\n  { name: \"Home\", icon: RiRestaurantFill, link: Routes.RESTAURANT },\n  { name: \"Management\", icon: GrUserManager, link: Routes.MANAGEMENT },\n  { name: \"Waiter\", icon: BiFoodMenu, link: Routes.WAITER },\n  { name: \"Kitchen\", icon: GrRestaurant, link: Routes.KITCHEN },\n];\n\nexport default function SimpleSidebar({ children }: { children: ReactNode }) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <Box minH=\"100vh\" bg={useColorModeValue(\"gray.100\", \"gray.900\")}>\n      <SidebarContent\n        onClose={() => onClose}\n        display={{ base: \"none\", md: \"block\" }}\n      />\n      <Drawer\n        autoFocus={false}\n        isOpen={isOpen}\n        placement=\"left\"\n        onClose={onClose}\n        returnFocusOnClose={false}\n        onOverlayClick={onClose}\n        size=\"full\"\n      >\n        <DrawerContent>\n          <SidebarContent onClose={onClose} />\n        </DrawerContent>\n      </Drawer>\n      {/* mobilenav */}\n      <MobileNav display={{ base: \"flex\", md: \"none\" }} onOpen={onOpen} />\n      <Box ml={{ base: 0, md: 60 }} p=\"4\">\n        {children}\n      </Box>\n    </Box>\n  );\n}\n\ninterface SidebarProps extends BoxProps {\n  onClose: () => void;\n}\n\nconst SidebarContent = ({ onClose, ...rest }: SidebarProps) => {\n  return (\n    <Box\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderRight=\"1px\"\n      borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      w={{ base: \"full\", md: 60 }}\n      pos=\"fixed\"\n      h=\"full\"\n      {...rest}\n    >\n      <Flex h=\"20\" alignItems=\"center\" mx=\"8\" justifyContent=\"space-between\">\n        <Text fontSize=\"2xl\" fontFamily=\"monospace\" fontWeight=\"bold\">\n          Logo\n        </Text>\n        <CloseButton display={{ base: \"flex\", md: \"none\" }} onClick={onClose} />\n      </Flex>\n      {LinkItems.map((link) => (\n        <NavItem key={link.name} icon={link.icon} link={link.link}>\n          {link.name}\n        </NavItem>\n      ))}\n    </Box>\n  );\n};\n\ninterface NavItemProps extends FlexProps {\n  icon: IconType;\n  children: ReactText;\n  link: string;\n}\nconst NavItem = ({ icon, children, link, ...rest }: NavItemProps) => {\n  return (\n    <NavLink to={link} style={{ textDecoration: \"none\" }}>\n      <Flex\n        align=\"center\"\n        p=\"4\"\n        mx=\"4\"\n        borderRadius=\"lg\"\n        role=\"group\"\n        cursor=\"pointer\"\n        _hover={{\n          bg: \"cyan.400\",\n          color: \"white\",\n        }}\n        {...rest}\n      >\n        {icon && (\n          <Icon\n            mr=\"4\"\n            fontSize=\"16\"\n            _groupHover={{\n              color: \"white\",\n            }}\n            as={icon}\n          />\n        )}\n        {children}\n      </Flex>\n    </NavLink>\n  );\n};\n\ninterface MobileProps extends FlexProps {\n  onOpen: () => void;\n}\nconst MobileNav = ({ onOpen, ...rest }: MobileProps) => {\n  return (\n    <Flex\n      ml={{ base: 0, md: 60 }}\n      px={{ base: 4, md: 24 }}\n      height=\"20\"\n      alignItems=\"center\"\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderBottomWidth=\"1px\"\n      borderBottomColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      justifyContent=\"flex-start\"\n      {...rest}\n    >\n      <IconButton\n        variant=\"outline\"\n        onClick={onOpen}\n        aria-label=\"open menu\"\n        icon={<FiMenu />}\n      />\n\n      <Text fontSize=\"2xl\" ml=\"8\" fontFamily=\"monospace\" fontWeight=\"bold\">\n        Logo\n      </Text>\n    </Flex>\n  );\n};\n","import { Fragment } from \"react\";\nimport SimpleSidebar from \"./chakra_nav\";\n\ninterface ParentCompProps {\n  childComp?: React.ReactNode;\n}\n\nconst Layout: React.FC<ParentCompProps> = (props) => {\n  return (\n    <Fragment>\n      <SimpleSidebar children={props.children} />\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport RestaurantPage from \"../../pages/restaurant/restaurant_page\";\nimport ManagementPage from \"../../pages/management/management_page\";\nimport KitchenPage from \"../../pages/kitchen/kitchen_page\";\nimport WaiterPage from \"../../pages/waiter/waiter_page\";\nimport Layout from \"./Layout\";\nimport { Routes } from \"../../util/constants\";\n\nfunction CommonNavigator() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path={Routes.HOME} exact>\n          <Redirect to={Routes.RESTAURANT} />\n        </Route>\n        <Route path={Routes.RESTAURANT} exact>\n          <RestaurantPage />\n        </Route>\n        <Route path={Routes.MANAGEMENT}>\n          <ManagementPage />\n        </Route>\n        <Route path={Routes.KITCHEN}>\n          <KitchenPage />\n        </Route>\n        <Route path={Routes.WAITER}>\n          <WaiterPage />\n        </Route>\n        <Route path=\"*\">\n          <div>NOTHING TO SEE HERE PAGE</div>\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default CommonNavigator;\n","import React from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport CommonNavigator from \"./common/navigation/common_navigator\";\n\nimport { enableMapSet } from \"immer\";\n\nenableMapSet();\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <BrowserRouter>\n        <CommonNavigator />\n      </BrowserRouter>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}