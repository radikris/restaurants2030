{"version":3,"sources":["pages/restaurant/restaurant_page.tsx","pages/management/management_page.tsx","pages/kitchen/kitchen_page.tsx","pages/waiter/components/swipeable_item.tsx","pages/waiter/components/added_order_item.tsx","pages/waiter/components/add_order_card.tsx","pages/waiter/components/done_order_card.tsx","pages/waiter/components/table_card.tsx","pages/waiter/waiter_page.tsx","util/constants.js","common/navigation/chakra_nav.tsx","common/navigation/Layout.tsx","common/navigation/common_navigator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RestaurantPage","ManagementPage","KitchenPage","SwipeableItem","props","fullSwipe","style","backgroundColor","type","ListType","ANDROID","threshold","list","map","order","trailingActions","orderAction","onClick","destructive","bg","justifyContent","display","d","px","icon","swipeChild","children","name","table","id","AddedOrderItem","spacing","size","borderRadius","variant","colorScheme","title","onClose","availableMenus","price","quantity","AddOrderCard","React","useState","selectedItems","setSelectedItems","sortedMenus","setSortedMenus","changeOrderQuantity","change","findAddedItem","findIndex","menu","currentStateOfItem","modifiedList","handleOrderRemove","findRemovedItem","filter","_","idx","item","my","pointerEvents","Search","color","placeholder","onChange","event","text","target","value","toLowerCase","includes","length","trim","w","alignItems","zIndex","position","handleOrderSelected","Add","top","right","forEach","addNewOrders","tableNum","orderStatus","OrderStatus","InProgress","DoneOrderCard","flexGrow","mx","fontSize","fontWeight","orderName","showTable","TableCard","maxW","boxShadow","rounded","overflow","m","_hover","transform","borderColor","p","templateColumns","gap","mb","mr","tableNumber","addOrder","x","Ready","changeStatus","Served","mt","ActionTypes","WaiterPage","useReducer","produce","draft","action","INITIAL","undefined","orders","get","push","set","ORDER_STATUS_CHANGED","ADD_ORDER","Map","tableOrdersRemastered","tableOrdersRemasteredDispatch","handleChangeStatus","useCallback","handleInitial","allOrders","handleAddOrder","connection","setConnection","useEffect","connect","HubConnectionBuilder","withUrl","withAutomaticReconnect","configureLogging","LogLevel","Debug","build","handleChangeStatusInvoke","status","invoke","Id","start","then","on","RestaurantId","catch","error","console","log","allPendingOrder","setAllPendingOrders","isDescending","setIsDescending","handleSortList","retValue","sortedList","sort","a","b","returnArray","index","concat","templateRows","colSpan","Array","from","Routes","LinkItems","RiRestaurantFill","link","GrUserManager","BiFoodMenu","GrRestaurant","SimpleSidebar","useDisclosure","isOpen","onOpen","minH","useColorModeValue","base","md","autoFocus","placement","returnFocusOnClose","onOverlayClick","ml","SidebarContent","rest","borderRight","borderRightColor","pos","h","fontFamily","NavItem","to","textDecoration","align","role","cursor","_groupHover","as","MobileNav","height","borderBottomWidth","borderBottomColor","Layout","CommonNavigator","path","exact","enableMapSet","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e16fb22e.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function RestaurantPage() {\n    return (\n        <div>\n            RESTAURANT NÉZET\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function ManagementPage() {\n    return (\n        <div>\n            MANAGEMENT NÉZET\n        </div>\n    )\n}\n","import React from \"react\";\n\nexport default function KitchenPage() {\n  return <div>KITCHEN NÉZET</div>;\n}\n","import { Box, Center, Flex } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nimport {\n  SwipeableList,\n  SwipeableListItem,\n  SwipeAction,\n  TrailingActions,\n  Type as ListType,\n} from \"react-swipeable-list\";\nimport \"react-swipeable-list/dist/styles.css\";\nimport { Order } from \"../waiter_page\";\n\ninterface Props {\n  children: (orderName: string, tableNum: number) => React.ReactNode;\n  swipeChild: React.ReactNode;\n  icon: React.ReactNode;\n  list: Order[];\n  onClick: (orderAction: Order) => void;\n}\n\nexport default function SwipeableItem(props: Props) {\n  const trailingActions = (orderAction: Order, onClick: (orderAction: Order) => void) => (\n    <TrailingActions>\n      <SwipeAction\n        destructive={true}\n        onClick={() => {\n          onClick(orderAction);\n        }}\n      >\n        <Box bg=\"red.200\">\n          <Center justifyContent=\"justify-center\" display=\"row\" d=\"flex\" px=\"1\">\n            {props.icon}\n            {props.swipeChild}\n          </Center>\n        </Box>\n      </SwipeAction>\n    </TrailingActions>\n  );\n\n  return (\n    <Flex>\n        <SwipeableList\n          fullSwipe={true}\n          style={{ backgroundColor: \"orange.200\" }}\n          type={ListType.ANDROID}\n          threshold={0.5}\n        >\n        {props.list.map((order) => (\n          <SwipeableListItem \n            key={order.id} \n            trailingActions={trailingActions(order, props.onClick)}>\n              {props.children(order.name, order.table)}\n          </SwipeableListItem>\n          ))}\n        </SwipeableList>\n    </Flex>\n  );\n}\n","import { HStack, Tag, TagCloseButton, TagLabel } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nexport interface Props {\n  onClose: (id: number) => void;\n  title: string;\n  id: number;\n}\n\nexport default function AddedOrderItem(props: Props) {\n  return (\n    <HStack spacing={4}>\n      <Tag\n        size={\"md\"}\n        key={props.id}\n        borderRadius=\"full\"\n        variant=\"solid\"\n        colorScheme=\"orange\"\n      >\n        <TagLabel>{props.title}</TagLabel>\n        <TagCloseButton onClick={() => props.onClose(props.id)} />\n      </Tag>\n    </HStack>\n  );\n}\n","import React, { ChangeEvent } from \"react\";\nimport { FaPlus } from \"react-icons/fa\";\nimport {\n  Box,\n  Button,\n  Text,\n  Center,\n  Popover,\n  PopoverArrow,\n  PopoverBody,\n  PopoverContent,\n  PopoverFooter,\n  PopoverTrigger,\n  Portal,\n  Divider,\n  VStack,\n  InputGroup,\n  InputLeftElement,\n  Input,\n  IconButton,\n  Wrap,\n  Badge,\n} from \"@chakra-ui/react\";\nimport { AddIcon, SearchIcon } from \"@chakra-ui/icons\";\n\nimport AddedOrderItem from \"./added_order_item\";\nimport { Order, OrderStatus } from \"../waiter_page\";\n\nexport interface AddOrderProps {\n  tableNum: number;\n  addNewOrders: (order: Order) => void;\n}\n\nexport interface FoodDrink {\n  id: number;\n  title: string;\n  price: number;\n  quantity: number;\n}\n\nconst availableMenus = [\n  {\n    id: 1,\n    title: \"Valami leves\",\n    price: 10,\n    quantity: 0,\n  },\n  {\n    id: 2,\n    title: \"Főzelék tes\",\n    price: 21,\n    quantity: 0,\n  },\n  {\n    id: 3,\n    title: \"Tésztaaaa is van\",\n    price: 32,\n    quantity: 0,\n  },\n  {\n    id: 4,\n    title: \"Csirke=chicken\",\n    price: 43,\n    quantity: 0,\n  },\n];\n\nconst AddOrderCard = (props: AddOrderProps) => {\n  const [selectedItems, setSelectedItems] = React.useState<FoodDrink[]>([]);\n  const [sortedMenus, setSortedMenus] =\n    React.useState<FoodDrink[]>(availableMenus);\n\n  const changeOrderQuantity = (id: number, change: number) => {\n    let findAddedItem = sortedMenus.findIndex((menu) => menu.id === id);\n\n    var currentStateOfItem = { ...sortedMenus[findAddedItem] };\n    currentStateOfItem.quantity = currentStateOfItem.quantity + change;\n    let modifiedList = sortedMenus;\n    modifiedList[findAddedItem] = currentStateOfItem;\n\n    setSortedMenus(modifiedList);\n  };\n\n  const handleOrderRemove = (id: number) => {\n    let findRemovedItem = selectedItems.findIndex((menu) => menu.id === id);\n    setSelectedItems(selectedItems.filter((_, idx) => idx !== findRemovedItem));\n\n    changeOrderQuantity(id, -1);\n  };\n\n  const handleOrderSelected = (item: FoodDrink) => {\n    setSelectedItems([...selectedItems, item]);\n\n    changeOrderQuantity(item.id, +1);\n  };\n\n  const handleOrderSearch = (event: ChangeEvent<HTMLInputElement>) => {\n    let text = event.target.value;\n    setSortedMenus(\n      sortedMenus.filter((item) =>\n        item.title.toLowerCase().includes(text.toLowerCase())\n      )\n    );\n\n    if (sortedMenus.length === 0 || text.trim().length === 0) {\n      setSortedMenus(availableMenus);\n    }\n  };\n\n  const clearOrders = () => {\n    setSelectedItems([]);\n    sortedMenus.map((menu) => (menu.quantity = +0));\n    setSortedMenus(sortedMenus);\n  };\n\n  const handleOrderAdd = () => {\n    selectedItems.forEach((item) => {\n      props.addNewOrders({\n        id: item.id,\n        table: props.tableNum,\n        name: item.title,\n        price: item.price,\n        orderStatus: OrderStatus.InProgress,\n      });\n    });\n\n    setSelectedItems([]);\n  };\n\n  return (\n    <Popover>\n      <PopoverTrigger>\n        <Button colorScheme=\"orange\" size=\"xs\">\n          <FaPlus />\n        </Button>\n      </PopoverTrigger>\n      <Portal>\n        <PopoverContent>\n          <PopoverArrow />\n          <PopoverBody>\n            <Wrap>\n              {selectedItems.map((item) => (\n                <AddedOrderItem\n                  title={item.title}\n                  id={item.id}\n                  onClose={handleOrderRemove}\n                />\n              ))}\n            </Wrap>\n            <Divider my={1} />\n            <Box>\n              <VStack>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    children={<SearchIcon color=\"gray.300\" />}\n                  />\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Search for orders...\"\n                    onChange={handleOrderSearch}\n                  />\n                </InputGroup>\n                <Button\n                  my={2}\n                  colorScheme={\"red\"}\n                  size={\"xs\"}\n                  onClick={clearOrders}\n                  variant={\"outline\"}\n                >\n                  REMOVE ALL ORDERS\n                </Button>\n                {sortedMenus.map((item) => (\n                  <Box\n                    w={\"full\"}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"space-between\"\n                  >\n                    <Text>{item.title}</Text>\n                    <Box zIndex={1}>\n                      <IconButton\n                        position=\"relative\"\n                        size={\"sm\"}\n                        onClick={() => handleOrderSelected(item)}\n                        aria-label=\"Add menu\"\n                        icon={\n                          <>\n                            <AddIcon />\n                            {item.quantity != null && item.quantity > 0 && (\n                              <Badge\n                                position={\"absolute\"}\n                                top={\"-5px\"}\n                                right={\"-5px\"}\n                                colorScheme=\"red\"\n                              >\n                                {item.quantity}\n                              </Badge>\n                            )}\n                          </>\n                        }\n                      />\n                    </Box>\n                  </Box>\n                ))}\n              </VStack>\n            </Box>\n          </PopoverBody>\n          <PopoverFooter>\n            <Center>\n              <Button\n                colorScheme=\"teal\"\n                variant=\"outline\"\n                onClick={handleOrderAdd}\n              >\n                ADD ORDERS\n              </Button>\n            </Center>\n          </PopoverFooter>\n        </PopoverContent>\n      </Portal>\n    </Popover>\n  );\n};\n\nexport default AddOrderCard;\n","import { Badge, Box, Divider, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nexport interface Props {\n  orderName: string;\n  tableNum: number;\n  showTable: boolean;\n  fontSize: string;\n}\n\nexport default function DoneOrderCard(props: Props) {\n  return (\n    <Box flexGrow={1} mx={2}>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Text fontSize={props.fontSize} fontWeight=\"bold\">\n          {props.orderName}\n        </Text>\n        {props.showTable && (\n          <Badge my=\"1\" fontSize=\"0.8em\" colorScheme=\"green\" variant=\"solid\">\n            TABLE {props.tableNum}\n          </Badge>\n        )}\n      </Box>\n      <Divider />\n    </Box>\n  );\n}\n","import {\n  Badge,\n  Box,\n  Grid,\n  VStack,\n  Text,\n  Divider,\n  Button,\n} from \"@chakra-ui/react\";\n\nimport \"react-swipeable-list/dist/styles.css\";\n\nimport { FaArrowAltCircleDown, FaArrowAltCircleUp } from \"react-icons/fa\";\nimport SwipeableItem from \"./swipeable_item\";\n\nimport React from \"react\";\nimport { Order, OrderStatus } from \"../waiter_page\";\nimport AddOrderCard from \"./add_order_card\";\nimport DoneOrderCard from \"./done_order_card\";\n\ninterface Props {\n  table: Order[];\n  tableNumber: number;\n  addOrder: (order: Order) => void;\n  changeStatus: (order: Order, status: OrderStatus) => void;\n}\n\nexport default function TableCard(props: Props) {\n  return (\n    <Box\n      maxW={\"270px\"}\n      w={\"full\"}\n      bg=\"whiteAlpha.900\"\n      boxShadow={\"2xl\"}\n      rounded={\"md\"}\n      overflow={\"hidden\"}\n      m=\"3\"\n      _hover={{\n        transform: \"scale(1.2)\",\n        boxShadow: \"lg\",\n        borderColor: \"grey.900\",\n      }}\n    >\n      <Box p={6}>\n        <VStack spacing=\"2px\">\n          <Grid templateColumns=\"repeat(3, 1fr)\" gap={6}>\n            <Box />\n            <Badge fontSize=\"md\" mb={1} mr={3}>\n              Table {props.tableNumber}\n            </Badge>\n            <AddOrderCard\n              addNewOrders={props.addOrder}\n              tableNum={props.tableNumber}\n            />\n          </Grid>\n\n          <Box\n            w=\"100%\"\n            bg=\"orange.200\"\n            d=\"flex\"\n            display=\"table-column\"\n            justifyContent=\"justify-start\"\n          >\n            <SwipeableItem\n              children={(orderName, tableNum) => (\n                <DoneOrderCard\n                  fontSize={\"md\"}\n                  orderName={orderName}\n                  tableNum={tableNum}\n                  showTable={false}\n                />\n              )}\n              swipeChild={<Text>DONE</Text>}\n              icon={<FaArrowAltCircleDown />}\n              list={[...props.table.filter(x => x.orderStatus === OrderStatus.InProgress || x.orderStatus === OrderStatus.Ready)]}\n              onClick={function (orderAction: Order): void {\n                props.changeStatus(orderAction, OrderStatus.Served);\n              }}\n            />\n          </Box>\n          <Divider variant=\"dashed\" />\n          <Box w=\"100%\" bg=\"green.200\">\n            <SwipeableItem\n              children={(orderName, tableNum) => (\n                <DoneOrderCard\n                  orderName={orderName}\n                  tableNum={tableNum}\n                  showTable={false}\n                  fontSize={\"md\"}\n                />\n              )}\n              swipeChild={<Text>BACK</Text>}\n              icon={<FaArrowAltCircleUp />}\n              list={[...props.table.filter(x => x.orderStatus === OrderStatus.Served)]}\n              onClick={function (orderAction: Order): void {\n                props.changeStatus(orderAction, OrderStatus.Ready);\n              }}\n            />\n          </Box>\n        </VStack>\n\n        <Button\n          w={\"full\"}\n          mt={4}\n          bg=\"gray.900\"\n          color={\"white\"}\n          rounded={\"md\"}\n          _hover={{\n            transform: \"translateY(-2px)\",\n            boxShadow: \"lg\",\n          }}\n        >\n          PAY\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState, useEffect, useReducer, useCallback } from \"react\";\n\nimport { Text, Wrap, Grid, GridItem, Center } from \"@chakra-ui/react\";\nimport TableCard from \"./components/table_card\";\nimport DoneOrderCard from \"./components/done_order_card\";\nimport { FaAngleDown, FaAngleUp, FaArrowAltCircleUp } from \"react-icons/fa\";\nimport SwipeableItem from \"./components/swipeable_item\";\nimport produce from \"immer\";\nimport {\n  HubConnection,\n  HubConnectionBuilder,\n  LogLevel,\n} from \"@microsoft/signalr\";\n\nexport enum ActionTypes {\n  INITIAL = \"Initial\",\n  ORDER_STATUS_CHANGED = \"OrderStatusChanged\",\n  ADD_ORDER = \"AddOrder\",\n}\n\nexport enum OrderStatus {\n  InProgress = 0,\n  Ready = 1,\n  Served = 2,\n}\n\nexport interface Order {\n  id: number;\n  table: number;\n  name: string;\n  price: number;\n  orderStatus: OrderStatus;\n}\n\nexport type OrderAction = {\n  type: ActionTypes;\n  order?: Order;\n  orders?: Order[];\n};\n\nexport default function WaiterPage() {\n  const [tableOrdersRemastered, tableOrdersRemasteredDispatch] = useReducer(\n    produce((draft: Map<number, Order[]>, action: OrderAction) => {\n      switch (action.type) {\n        case ActionTypes.INITIAL: {\n          if (action.orders !== undefined) {\n            action.orders.forEach((order: Order) => {\n              var table = draft.get(order.table);\n              if (table !== undefined) {\n                table.push(order);\n              } else {\n                draft.set(order.table, [order]);\n              }\n            });\n          }\n          break;\n        }\n        case ActionTypes.ORDER_STATUS_CHANGED: {\n          if (action.order !== undefined) {\n            var table = draft.get(action.order.table);\n            if (table !== undefined) {\n              var idx = table.findIndex((x) => x.id === action.order?.id);\n              table[idx] = action.order;\n            }\n          }\n          break;\n        }\n        case ActionTypes.ADD_ORDER: {\n          if (action.order !== undefined) {\n            table = draft.get(action.order.table);\n            if (table !== undefined) {\n              table.push(action.order);\n            }\n          }\n          break;\n        }\n      }\n    }),\n    new Map<number, Order[]>(),\n    undefined\n  );\n\n  const handleChangeStatus = useCallback((order: Order) => {\n    tableOrdersRemasteredDispatch({\n      type: ActionTypes.ORDER_STATUS_CHANGED,\n      order,\n    });\n  }, []);\n\n  const handleInitial = useCallback((allOrders: Order[]) => {\n    tableOrdersRemasteredDispatch({\n      type: ActionTypes.INITIAL,\n      orders: allOrders,\n    });\n  }, []);\n\n  const handleAddOrder = useCallback((order: Order) => {\n    tableOrdersRemasteredDispatch({\n      type: ActionTypes.ADD_ORDER,\n      order: order,\n    });\n  }, []);\n\n  const [connection, setConnection] = useState<null | HubConnection>(null);\n\n  useEffect(() => {\n    const connect = new HubConnectionBuilder()\n      .withUrl(\"http://localhost:5000/restauranthub\")\n      .withAutomaticReconnect()\n      .configureLogging(LogLevel.Debug)\n      .build();\n\n    setConnection(connect);\n  }, []);\n\n  const handleChangeStatusInvoke = useCallback(\n    (order: Order, status: OrderStatus) => {\n      connection?.invoke(\"UpdateOrderStatus\", {\n        Id: order.id,\n        OrderStatus: status,\n      });\n    },\n    [connection]\n  );\n\n  useEffect(() => {\n    if (connection) {\n      connection\n        .start()\n        .then(() => {\n          connection.on(\"AllOrders\", (orders: Order[]) => {\n            handleInitial(orders);\n          });\n          connection.on(\"OrderStatusUpdated\", (order: Order) => {\n            handleChangeStatus(order);\n          });\n\n          connection.invoke(\"GetAllOrders\", { RestaurantId: 1 });\n        })\n        .catch((error) => console.log(error));\n    }\n  }, [connection, handleChangeStatus, handleInitial]);\n\n  const [allPendingOrder, setAllPendingOrders] = useState<Order[]>([]);\n  const [isDescending, setIsDescending] = useState<boolean>(true);\n\n  const handleSortList = () => {\n    const retValue = isDescending ? 1 : -1;\n\n    const sortedList = allPendingOrder.sort((a, b) =>\n      a.table > b.table ? retValue : -1 * retValue\n    );\n\n    console.log(isDescending);\n    setIsDescending(!isDescending);\n    setAllPendingOrders(sortedList);\n  };\n\n  useEffect(() => {\n    var returnArray: Order[] = [];\n    tableOrdersRemastered.forEach(\n      (order, index) =>\n        (returnArray = returnArray.concat(\n          order.filter(\n            (x) =>\n              x.orderStatus === OrderStatus.InProgress ||\n              x.orderStatus === OrderStatus.Ready\n          )\n        ))\n    );\n    setAllPendingOrders(returnArray);\n  }, [tableOrdersRemastered]);\n\n  return (\n    <Grid\n      templateRows=\"repeat(1, 1fr)\"\n      templateColumns=\"repeat(5, 1fr)\"\n      gap={4}\n    >\n      <GridItem colSpan={4} bg=\"papayawhip\" p={2}>\n        <Wrap>\n          {Array.from(tableOrdersRemastered).map((orders) => (\n            <TableCard\n              key={orders[0]}\n              table={orders[1]}\n              tableNumber={orders[0]}\n              addOrder={handleAddOrder}\n              changeStatus={handleChangeStatusInvoke}\n            />\n          ))}\n        </Wrap>\n      </GridItem>\n      <GridItem colSpan={1} bg=\"tomato\">\n        <Center mx={1}>\n          <Text\n            my={3}\n            mx={3}\n            fontSize={\"2xl\"}\n            fontWeight={\"bold\"}\n            color={\"grey.700\"}\n          >\n            Finished orders\n          </Text>\n          {isDescending && <FaAngleUp onClick={handleSortList} />}\n          {!isDescending && <FaAngleDown onClick={handleSortList} />}\n        </Center>\n        <SwipeableItem\n          children={(orderName, tableNum) => (\n            <DoneOrderCard\n              orderName={orderName}\n              tableNum={tableNum}\n              showTable={true}\n              fontSize={\"xl\"}\n            />\n          )}\n          swipeChild={<Text>DONE</Text>}\n          icon={<FaArrowAltCircleUp />}\n          list={allPendingOrder}\n          onClick={function (orderAction: Order): void {\n            handleChangeStatusInvoke(orderAction, OrderStatus.Served);\n          }}\n        />\n      </GridItem>\n    </Grid>\n  );\n}\n","const Routes = {\n  HOME: \"/\",\n  RESTAURANT: \"/restaurant\",\n  MANAGEMENT: \"/management\",\n  WAITER: \"/waiter\",\n  KITCHEN: \"/kitchen\",\n};\n\nexport { Routes };\n","import React, { ReactNode } from \"react\";\nimport {\n  IconButton,\n  Box,\n  CloseButton,\n  Flex,\n  Icon,\n  useColorModeValue,\n  Drawer,\n  DrawerContent,\n  Text,\n  useDisclosure,\n  BoxProps,\n  FlexProps,\n} from \"@chakra-ui/react\";\nimport { RiRestaurantFill } from \"react-icons/ri\";\nimport { FiMenu } from \"react-icons/fi\";\nimport { BiFoodMenu } from \"react-icons/bi\";\nimport { GrRestaurant, GrUserManager } from \"react-icons/gr\";\nimport { IconType } from \"react-icons\";\nimport { ReactText } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Routes } from \"../../util/constants\";\n\ninterface LinkItemProps {\n  name: string;\n  icon: IconType;\n  link: string;\n}\nconst LinkItems: Array<LinkItemProps> = [\n  { name: \"Home\", icon: RiRestaurantFill, link: Routes.RESTAURANT },\n  { name: \"Management\", icon: GrUserManager, link: Routes.MANAGEMENT },\n  { name: \"Waiter\", icon: BiFoodMenu, link: Routes.WAITER },\n  { name: \"Kitchen\", icon: GrRestaurant, link: Routes.KITCHEN },\n];\n\nexport default function SimpleSidebar({ children }: { children: ReactNode }) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <Box minH=\"100vh\" bg={useColorModeValue(\"gray.100\", \"gray.900\")}>\n      <SidebarContent\n        onClose={() => onClose}\n        display={{ base: \"none\", md: \"block\" }}\n      />\n      <Drawer\n        autoFocus={false}\n        isOpen={isOpen}\n        placement=\"left\"\n        onClose={onClose}\n        returnFocusOnClose={false}\n        onOverlayClick={onClose}\n        size=\"full\"\n      >\n        <DrawerContent>\n          <SidebarContent onClose={onClose} />\n        </DrawerContent>\n      </Drawer>\n      {/* mobilenav */}\n      <MobileNav display={{ base: \"flex\", md: \"none\" }} onOpen={onOpen} />\n      <Box ml={{ base: 0, md: 60 }} p=\"4\">\n        {children}\n      </Box>\n    </Box>\n  );\n}\n\ninterface SidebarProps extends BoxProps {\n  onClose: () => void;\n}\n\nconst SidebarContent = ({ onClose, ...rest }: SidebarProps) => {\n  return (\n    <Box\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderRight=\"1px\"\n      borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      w={{ base: \"full\", md: 60 }}\n      pos=\"fixed\"\n      h=\"full\"\n      {...rest}\n    >\n      <Flex h=\"20\" alignItems=\"center\" mx=\"8\" justifyContent=\"space-between\">\n        <Text fontSize=\"2xl\" fontFamily=\"monospace\" fontWeight=\"bold\">\n          Logo\n        </Text>\n        <CloseButton display={{ base: \"flex\", md: \"none\" }} onClick={onClose} />\n      </Flex>\n      {LinkItems.map((link) => (\n        <NavItem key={link.name} icon={link.icon} link={link.link}>\n          {link.name}\n        </NavItem>\n      ))}\n    </Box>\n  );\n};\n\ninterface NavItemProps extends FlexProps {\n  icon: IconType;\n  children: ReactText;\n  link: string;\n}\nconst NavItem = ({ icon, children, link, ...rest }: NavItemProps) => {\n  return (\n    <NavLink to={link} style={{ textDecoration: \"none\" }}>\n      <Flex\n        align=\"center\"\n        p=\"4\"\n        mx=\"4\"\n        borderRadius=\"lg\"\n        role=\"group\"\n        cursor=\"pointer\"\n        _hover={{\n          bg: \"cyan.400\",\n          color: \"white\",\n        }}\n        {...rest}\n      >\n        {icon && (\n          <Icon\n            mr=\"4\"\n            fontSize=\"16\"\n            _groupHover={{\n              color: \"white\",\n            }}\n            as={icon}\n          />\n        )}\n        {children}\n      </Flex>\n    </NavLink>\n  );\n};\n\ninterface MobileProps extends FlexProps {\n  onOpen: () => void;\n}\nconst MobileNav = ({ onOpen, ...rest }: MobileProps) => {\n  return (\n    <Flex\n      ml={{ base: 0, md: 60 }}\n      px={{ base: 4, md: 24 }}\n      height=\"20\"\n      alignItems=\"center\"\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderBottomWidth=\"1px\"\n      borderBottomColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      justifyContent=\"flex-start\"\n      {...rest}\n    >\n      <IconButton\n        variant=\"outline\"\n        onClick={onOpen}\n        aria-label=\"open menu\"\n        icon={<FiMenu />}\n      />\n\n      <Text fontSize=\"2xl\" ml=\"8\" fontFamily=\"monospace\" fontWeight=\"bold\">\n        Logo\n      </Text>\n    </Flex>\n  );\n};\n","import { Fragment } from \"react\";\nimport SimpleSidebar from \"./chakra_nav\";\n\ninterface ParentCompProps {\n  childComp?: React.ReactNode;\n}\n\nconst Layout: React.FC<ParentCompProps> = (props) => {\n  return (\n    <Fragment>\n      <SimpleSidebar children={props.children} />\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport RestaurantPage from \"../../pages/restaurant/restaurant_page\";\nimport ManagementPage from \"../../pages/management/management_page\";\nimport KitchenPage from \"../../pages/kitchen/kitchen_page\";\nimport WaiterPage from \"../../pages/waiter/waiter_page\";\nimport Layout from \"./Layout\";\nimport { Routes } from \"../../util/constants\";\n\nfunction CommonNavigator() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path={Routes.HOME} exact>\n          <Redirect to={Routes.RESTAURANT} />\n        </Route>\n        <Route path={Routes.RESTAURANT} exact>\n          <RestaurantPage />\n        </Route>\n        <Route path={Routes.MANAGEMENT}>\n          <ManagementPage />\n        </Route>\n        <Route path={Routes.KITCHEN}>\n          <KitchenPage />\n        </Route>\n        <Route path={Routes.WAITER}>\n          <WaiterPage />\n        </Route>\n        <Route path=\"*\">\n          <div>NOTHING TO SEE HERE PAGE</div>\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default CommonNavigator;\n","import React from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport CommonNavigator from \"./common/navigation/common_navigator\";\n\nimport { enableMapSet } from \"immer\";\n\nenableMapSet();\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <BrowserRouter>\n        <CommonNavigator />\n      </BrowserRouter>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}