{"version":3,"sources":["pages/restaurant/restaurant_page.tsx","store/api_context.ts","util/agent.ts","pages/management/components/editable_card.tsx","pages/management/components/analytics_page.tsx","common/components/common_card.tsx","common/components/common_select_date.tsx","pages/management/components/chart_card.tsx","pages/management/components/horizontal_bar_chart.tsx","pages/management/components/pie_chart.tsx","pages/management/components/manager_page.tsx","pages/management/management_page.tsx","models/order_status.ts","pages/waiter/components/done_order_card.tsx","pages/kitchen/kitchen_page.tsx","pages/waiter/components/swipeable_item.tsx","pages/waiter/components/added_order_item.tsx","pages/waiter/components/add_order_card.tsx","pages/waiter/components/select_payment_option.tsx","util/app_util.js","pages/waiter/waiter_page.tsx","pages/waiter/components/table_bill_list.tsx","pages/waiter/components/table_pay_bill.tsx","pages/waiter/components/table_pay_modal.tsx","pages/waiter/components/table_card.tsx","pages/login/login_page.tsx","pages/registration/registration_page.tsx","util/constants.js","common/navigation/chakra_nav.tsx","common/navigation/Layout.tsx","common/navigation/common_navigator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RestaurantPage","ApiContext","React","createContext","formValues","a","axios","post","response","data","localStorage","setItem","JSON","stringify","history","push","getToken","user","getItem","parse","accessToken","getFoodDrink","get","id","console","log","put","delete","getWeeklyIncome","getPopularFoodDrinks","defaults","baseURL","interceptors","request","use","config","token","headers","Authorization","EditCard","props","useDisclosure","isOpen","onOpen","onClose","useState","foodDrink","name","editName","setEditName","price","editPrice","setEditPrice","flexDirection","my","padding","backgroundColor","rounded","fontSize","mb","fontWeight","fon","mx","onClick","color","deleteFoodDrink","onDelete","onChange","defaultValue","startWithEditView","valueString","min","variant","updateFoodDrink","onUpdate","AnalyticsPage","apiContext","useContext","useForm","register","handleSubmit","formState","errors","isSubmitting","useEffect","connection","state","HubConnectionState","Connected","start","value","setValue","foodDrinks","setFoodDrinks","handleNewFoodDrink","useCallback","newFoodDrink","on","val","updateItem","newList","map","item","deleteItem","filter","fetchFoodDrink","result","w","maxW","p","shadow","borderWidth","alignSelf","base","lg","borderColor","borderRadius","boxShadow","background","overflow","onSubmit","Promise","resolve","fd","invoke","NewFoodDrink","isInvalid","htmlFor","placeholder","required","minLength","message","replace","mt","colorScheme","isLoading","type","minChildWidth","spacing","fooddrink","CommonCard","textAlign","children","CommonSelectDate","width","bg","ChartCard","fontFamily","title","direction","flexGrow","showDateSelect","justifyContent","labels","datasets","label","options","indexAxis","elements","bar","responsive","plugins","legend","position","display","text","CustomHorizontalBarChart","weeklyIncome","setweeklyIncome","fetchAnalytics","dataName","dataValue","forEach","element","setDataSet","CustomPieChart","popularFoodDrink","setpopularFoodDrink","ManagerPage","columns","md","ManagementPage","isFitted","OrderStatus","DoneOrderCard","orderName","showTable","tableNum","ActionTypes","SwipeableItem","leadingActions","orderAction","destructive","d","px","leadingIcon","leadingChild","fullSwipe","style","ListType","ANDROID","threshold","list","order","trailingActions","trailingIcon","trailingChild","onUndo","table","KitchenPage","useReducer","produce","draft","action","INITIAL","undefined","orders","set","ORDER_STATUS_CHANGED","idx","findIndex","x","Map","tableOrdersRemastered","tableOrdersRemasteredDispatch","handleChangeStatus","handleInitial","allOrders","handleChangeStatusInvoke","status","Id","then","allPendingOrder","setAllPendingOrders","allPreparingOrder","setAllPreparingOrder","allFinishedOrder","setAllFinishedOrder","returnArrayPending","returnArrayPreparing","returnArrayFinished","index","orderStatus","InProgress","Preparing","Ready","templateRows","templateColumns","gap","colSpan","AddedOrderItem","size","availableMenus","AddOrderCard","waiterContext","WaiterContext","selectedItems","setSelectedItems","sortedMenus","setSortedMenus","changeOrderQuantity","change","findAddedItem","menu","currentStateOfItem","quantity","modifiedList","handleOrderRemove","findRemovedItem","_","clearOrders","pointerEvents","Search","event","target","toLowerCase","includes","length","trim","alignItems","zIndex","handleOrderSelected","icon","Add","top","right","TableNum","NewOrders","RadioCard","useRadio","getInputProps","getCheckboxProps","input","checkbox","as","cursor","_checked","_focus","py","SelectPaymentOption","useRadioGroup","getRootProps","getRadioProps","group","radio","formatter","Intl","NumberFormat","currency","TableBillList","alignContent","mr","isSplitBill","format","moveOrder","buttonText","border","reduce","b","TablePayBill","setIsSplitBill","normalBill","setNormalBill","splitBill","setSplitBill","payOrderInvoke","PaidOrders","CheckoutMethod","handlePayOrder","orderIdx","o","i","prevSplitBill","TablePayModal","toggleOpen","TableCard","isPayOpen","setIsPayOpen","prevPayOpen","m","_hover","transform","tableNumber","addNewOrders","addOrder","changeStatus","Served","WaiterPage","restaurantFoodDrinks","setRestaurantFoodDrinks","ADD_ORDER","handleAllFoodDrink","allFoodDrinks","handleAddOrder","handleAddNewOrders","isDescending","setIsDescending","handleSortList","retValue","sortedList","sort","returnArray","concat","Array","from","CFaUserAlt","chakra","FaUserAlt","CFaLock","FaLock","App","showPassword","setShowPassword","handleShowClick","height","initialValues","email","password","values","login","setSubmitting","flexDir","minW","field","h","href","restaurantName","Routes","LinkItems","RiRestaurantFill","link","GrUserManager","BiFoodMenu","GrRestaurant","SimpleSidebar","minH","useColorModeValue","autoFocus","placement","returnFocusOnClose","onOverlayClick","ml","SidebarContent","rest","borderRight","borderRightColor","pos","NavItem","to","textDecoration","align","role","_groupHover","MobileNav","borderBottomWidth","borderBottomColor","Layout","CommonNavigator","restaurantId","HubConnectionBuilder","withUrl","accessTokenFactory","toString","withAutomaticReconnect","configureLogging","LogLevel","Debug","build","Provider","path","exact","render","enableMapSet","createBrowserHistory","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43406134.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function RestaurantPage() {\n    return (\n        <div>\n            RESTAURANT NÉZET\n        </div>\n    )\n}\n","import { HubConnection } from \"@microsoft/signalr\";\nimport React from \"react\";\n\n\nexport interface ApiContextInterface {\n    connection: HubConnection | null;\n    restaurantId: number;\n}\n\nconst ApiContext = React.createContext<ApiContextInterface | null>(null);\n\nexport default ApiContext;","import { FoodDrink, FoodDrinkFormValues } from './../models/food_drink';\nimport axios from \"axios\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { history } from \"../App\";\nimport { Analytics } from '../models/analytics';\n\naxios.defaults.baseURL = \"http://localhost:5000/api\";\n\naxios.interceptors.request.use(config => {\n    const token = getToken();\n    if (token)\n        config!.headers!.Authorization = `Bearer ${token}`;\n\n    return config;\n});\n\nexport async function login(formValues: UserFormValues): Promise<User | null> {\n    const response = await axios.post<User>(\"/account/login\", formValues);\n    if (response.data) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        history.push(\"/\");\n        return response.data;\n    }\n\n    return null;\n}\n\nexport async function register(formValues: UserFormValues): Promise<User | null> {\n    const response = await axios.post<User>(\"/account/register\", formValues);\n    if (response.data) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        history.push(\"/\");\n        return response.data;\n    }\n\n    return null;\n}\n\nexport function logout(): void {\n    localStorage.removeItem(\"user\");\n}\n\nexport function getToken(): string | null {\n    const user = localStorage.getItem(\"user\");\n    if (user) {\n        const obj: User = JSON.parse(user)\n        return obj.accessToken;\n    }\n\n    return null;\n}\n\nexport async function getFoodDrink(): Promise<FoodDrink[]> {\n    const response = await axios.get<FoodDrink[]>(\"/fooddrink\");\n    if (response.data) {\n        return response.data;\n    }\n    return []\n}\n\nexport async function updateFoodDrink(id: number, formValues: FoodDrinkFormValues): Promise<null> {\n    console.log(\"update jon\");\n    await axios.put<FoodDrink>(`/fooddrink/${id}`, formValues);\n    history.push(\"/management\");\n\n    return null;\n}\n\nexport async function deleteFoodDrink(id: number): Promise<null> {\n    await axios.delete<FoodDrink[]>(`/fooddrink/${id}`);\n    history.push(\"/management\");\n\n    return null;\n}\n\nexport async function getWeeklyIncome(): Promise<Analytics[]> {\n    const response = await axios.get<Analytics[]>(\"/analytics/weekly\");\n    if (response.data) {\n        console.log(\"WEEKLY\")\n        console.log(response.data);\n        return response.data;\n    }\n    return []\n}\nexport async function getPopularFoodDrinks():  Promise<Analytics[]> {\n    const response = await axios.get<Analytics[]>(\"/analytics/popular\");\n    if (response.data) {\n        return response.data;\n    }\n    return []\n}\n\n","import React from \"react\";\nimport {\n  Box,\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  useDisclosure,\n  Editable,\n  EditableInput,\n  EditablePreview,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from \"@chakra-ui/react\";\nimport { deleteFoodDrink, updateFoodDrink } from \"../../../util/agent\";\nimport { FoodDrink } from \"../../../models/food_drink\";\nimport { MdEdit, MdDelete } from \"react-icons/md\";\n\ninterface IProps {\n  foodDrink: FoodDrink;\n  onUpdate: (id: number, name: string, price: number) => void;\n  onDelete: (id: number) => void;\n}\n\nexport default function EditCard(props: IProps) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [editName, setEditName] = React.useState(props.foodDrink.name);\n  const [editPrice, setEditPrice] = React.useState(props.foodDrink.price);\n\n  return (\n    <Box\n      flexDirection=\"row\"\n      my=\"5\"\n      padding=\"0.5em\"\n      backgroundColor=\"papayawhip\"\n      rounded=\"0.5em\"\n    >\n      <Box>\n        <Text fontSize=\"lg\" mb=\"5\" fontWeight=\"bold\">\n          {props.foodDrink.name}\n        </Text>\n        <Text fontSize=\"lg\" mb=\"5\" fon>\n          {props.foodDrink.price} $\n        </Text>\n      </Box>\n      <Button mx={1} onClick={onOpen} color=\"#41bb93\">\n        <MdEdit />\n      </Button>\n      <Button\n        mx={1}\n        onClick={() => {\n          deleteFoodDrink(props.foodDrink.id);\n          props.onDelete(props.foodDrink.id);\n        }}\n        color=\"#ff0000\"\n      >\n        <MdDelete />\n      </Button>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Update item</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            {/* onSubmit can be used to post the updated data to the server. */}\n            <Editable\n              onChange={setEditName}\n              defaultValue={props.foodDrink.name}\n              startWithEditView={true}\n            >\n              <EditablePreview />\n              <EditableInput />\n            </Editable>\n\n            <NumberInput\n              onChange={(valueString) => setEditPrice(+valueString)}\n              defaultValue={props.foodDrink.price}\n              min={0}\n            >\n              <NumberInputField />\n              <NumberInputStepper>\n                <NumberIncrementStepper />\n                <NumberDecrementStepper />\n              </NumberInputStepper>\n            </NumberInput>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button mx={3} onClick={onClose} variant=\"outline\">\n              Close\n            </Button>\n            <Button\n              onClick={() => {\n                updateFoodDrink(props.foodDrink.id, {\n                  name: editName,\n                  price: editPrice,\n                });\n                props.onUpdate(props.foodDrink.id, editName, editPrice);\n              }}\n              variant=\"solid\"\n            >\n              Update\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </Box>\n  );\n}\n","import {\n  Box,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  Center,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useCallback } from \"react\";\n\nimport { useForm } from \"react-hook-form\";\nimport {\n  FormErrorMessage,\n  FormLabel,\n  FormControl,\n  Input,\n  Button,\n} from \"@chakra-ui/react\";\n\nimport { FoodDrink } from \"../../../models/food_drink\";\nimport ApiContext from \"../../../store/api_context\";\nimport { HubConnectionState } from \"@microsoft/signalr\";\nimport { getFoodDrink } from \"../../../util/agent\";\nimport EditCard from \"./editable_card\";\n\ninterface IFormFoodDrink {\n  name: string;\n  price: number;\n}\n\nexport default function AnalyticsPage() {\n  const apiContext = React.useContext(ApiContext);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n  } = useForm();\n\n  useEffect(() => {\n    if (apiContext?.connection) {\n      if (apiContext?.connection.state !== HubConnectionState.Connected) {\n        apiContext?.connection.start();\n      }\n    }\n  }, [apiContext?.connection]);\n\n  function onSubmit(data: IFormFoodDrink) {\n    return new Promise((resolve) => {\n      const fd = {\n        name: data[\"name\"],\n        price: +value,\n      };\n\n      console.log(fd);\n      resolve(\n        apiContext?.connection?.invoke(\"AddNewFoodDrink\", {\n          NewFoodDrink: fd,\n        })\n      );\n    });\n  }\n\n  const format = (val: string) => `$` + val;\n  const parse = (val: string) => val.replace(/^\\$/, \"\");\n\n  const [value, setValue] = React.useState(\"0.0\");\n  const [foodDrinks, setFoodDrinks] = React.useState<FoodDrink[]>([]);\n\n  const handleNewFoodDrink = useCallback(\n    (newFoodDrink: FoodDrink) => {\n      console.log(newFoodDrink);\n      foodDrinks.push(newFoodDrink);\n      setFoodDrinks(foodDrinks); //TODO FIX DOUBLE ADD ISSUE\n    },\n    [foodDrinks]\n  );\n\n  useEffect(() => {\n    if (apiContext?.connection) {\n      apiContext?.connection.on(\n        \"AddNewFoodDrinkHandler\",\n        (foodDrink: FoodDrink) => {\n          handleNewFoodDrink(foodDrink);\n        }\n      );\n    }\n  }, [apiContext, handleNewFoodDrink]);\n\n  const updateItem = (id: number, name: string, price: number) => {\n    const newList = foodDrinks.map((item) => {\n      if (item.id === id) {\n        const updatedItem = {\n          ...item,\n          name: name,\n          price: price,\n        };\n\n        return updatedItem;\n      }\n\n      return item;\n    });\n\n    setFoodDrinks(newList);\n  };\n\n  const deleteItem = (id: number) => {\n    const newList = foodDrinks.filter((item) => item.id !== id);\n    setFoodDrinks(newList);\n  };\n\n  useEffect(() => {\n    const fetchFoodDrink = async () => {\n      const result = await getFoodDrink();\n      setFoodDrinks(result);\n    };\n    fetchFoodDrink();\n  }, []);\n\n  return (\n    <Box w={\"full\"}>\n      <Center>\n        <Box\n          maxW={\"400px\"}\n          w={\"full\"}\n          mb={4}\n          p={3}\n          shadow=\"base\"\n          borderWidth=\"1px\"\n          alignSelf={{ base: \"center\", lg: \"flex-start\" }}\n          borderColor=\"gray.200\"\n          borderRadius={\"xl\"}\n          boxShadow={\"2xl\"}\n          rounded={\"md\"}\n          background={\"white\"}\n          overflow={\"hidden\"}\n        >\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <FormControl isInvalid={errors.name}>\n              <FormLabel htmlFor=\"name\">\n                Please add your new food/drink\n              </FormLabel>\n              <Input\n                id=\"name\"\n                placeholder=\"Food or drink name\"\n                {...register(\"name\", {\n                  required: \"This is required\",\n                  minLength: {\n                    value: 4,\n                    message: \"Minimum length should be 4\",\n                  },\n                })}\n              />\n              <NumberInput\n                id=\"price\"\n                {...register(\"price\", {\n                  required: \"This is required\",\n                })}\n                onChange={(valueString) => setValue(parse(valueString))}\n                value={format(value)}\n                min={0}\n              >\n                <NumberInputField />\n                <NumberInputStepper>\n                  <NumberIncrementStepper />\n                  <NumberDecrementStepper />\n                </NumberInputStepper>\n              </NumberInput>\n              <FormErrorMessage>\n                {errors.name && errors.name.message}\n              </FormErrorMessage>\n            </FormControl>\n            <Center>\n              <Button\n                mt={4}\n                colorScheme=\"teal\"\n                isLoading={isSubmitting}\n                type=\"submit\"\n              >\n                Submit\n              </Button>\n            </Center>\n          </form>\n        </Box>\n      </Center>\n      <SimpleGrid minChildWidth=\"120px\" spacing=\"40px\">\n        {foodDrinks.map((fooddrink) => {\n          return (\n            <EditCard\n              foodDrink={fooddrink}\n              onUpdate={updateItem}\n              onDelete={deleteItem}\n            />\n          );\n        })}\n      </SimpleGrid>\n    </Box>\n  );\n}\n","import React from \"react\";\n\nimport { Box, Center } from \"@chakra-ui/react\";\n\nexport interface Props {\n  children: React.ReactNode;\n}\n\nexport default function CommonCard(props: Props) {\n  return (\n    <Box w={\"full\"} boxShadow={\"2xl\"} rounded={\"lg\"} p={6} textAlign={\"center\"}>\n      <Center>{props.children}</Center>\n    </Box>\n  );\n}\n","import { Select } from \"@chakra-ui/select\";\nimport React from \"react\";\n\nexport interface Props {\n  values: string;\n}\n\nexport default function CommonSelectDate() {\n  return (\n    <Select\n      width=\"150px\"\n      bg=\"yellow.50\"\n      borderColor=\"grey.800\"\n      color=\"black\"\n      placeholder=\"Date\"\n    >\n      <option value=\"option1\">Weekly</option>\n      <option value=\"option2\">Monthly</option>\n      <option value=\"option3\">Yearly</option>\n    </Select>\n  );\n}\n","import { Flex } from \"@chakra-ui/layout\";\nimport { Box, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport CommonCard from \"../../../common/components/common_card\";\nimport CommonSelectDate from \"../../../common/components/common_select_date\";\n\nexport interface Props {\n  children: React.ReactNode;\n  showDateSelect: boolean;\n  title: string;\n}\n\nexport default function ChartCard(props: Props) {\n  return (\n    <Box>\n      <Text\n        fontSize=\"2xl\"\n        fontFamily=\"monospace\"\n        fontWeight=\"bold\"\n        textAlign=\"center\"\n      >\n        {props.title}\n      </Text>\n      <CommonCard>\n        <Flex direction={\"column\"} flexGrow={1}>\n          {props.showDateSelect && (\n            <Flex justifyContent={\"right\"}>\n              {\" \"}\n              <CommonSelectDate />\n            </Flex>\n          )}\n          {props.children}\n        </Flex>\n      </CommonCard>\n    </Box>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { getWeeklyIncome } from \"../../../util/agent\";\n\nexport interface DataProps {\n  labels: string[];\n  datasets: {\n    label: string;\n    data: number[];\n    backgroundColor: string[];\n    borderColor: string[];\n    borderWidth: number;\n  }[];\n}\n\nvar data = {\n  labels: [\"Day1\", \"Day2\", \"Day3\", \"Day4\", \"Day5\", \"Day6\", \"Day7\"],\n  datasets: [\n    {\n      label: \"# of Votes\",\n      data: [12, 19, 3, 5, 2, 3, 1],\n      backgroundColor: [\n        \"rgba(255, 99, 132, 0.2)\",\n        \"rgba(54, 162, 235, 0.2)\",\n        \"rgba(255, 206, 86, 0.2)\",\n        \"rgba(75, 192, 192, 0.2)\",\n        \"rgba(153, 102, 255, 0.2)\",\n        \"rgba(255, 159, 64, 0.2)\",\n        \"rgba(255, 130, 24, 0.2)\",\n      ],\n      borderColor: [\n        \"rgba(255, 99, 132, 1)\",\n        \"rgba(54, 162, 235, 1)\",\n        \"rgba(255, 206, 86, 1)\",\n        \"rgba(75, 192, 192, 1)\",\n        \"rgba(153, 102, 255, 1)\",\n        \"rgba(255, 159, 64, 1)\",\n        \"rgba(255, 130, 24, 0.2)\",\n      ],\n      borderWidth: 1,\n    },\n  ],\n};\n\nconst options = {\n  indexAxis: \"y\",\n  // Elements options apply to all of the options unless overridden in a dataset\n  // In this case, we are setting the border of each horizontal bar to be 2px wide\n  elements: {\n    bar: {\n      borderWidth: 2,\n    },\n  },\n  responsive: true,\n  plugins: {\n    legend: {\n      position: \"right\",\n    },\n    title: {\n      display: true,\n      text: \"Chart.js Horizontal Bar Chart\",\n    },\n  },\n};\n\nexport default function CustomHorizontalBarChart() {\n  const [weeklyIncome, setweeklyIncome] = useState<DataProps>();\n  useEffect(() => {\n    const fetchAnalytics = async () => {\n      const result = await getWeeklyIncome();\n      console.log(result);\n      var dataName: string[];\n      var dataValue: number[];\n      dataName = [];\n      dataValue = [];\n      result.forEach((element) => {\n        dataName.push(element.dataName);\n        dataValue.push(element.dataValue);\n      });\n\n      var setDataSet: {\n        label: string;\n        data: number[];\n        backgroundColor: string[];\n        borderColor: string[];\n        borderWidth: number;\n      }[];\n      setDataSet = [];\n      setDataSet.push({ ...data.datasets[0], data: dataValue });\n\n      data = {\n        ...data,\n        labels: dataName,\n        datasets: setDataSet,\n      };\n\n      setweeklyIncome(data);\n    };\n    fetchAnalytics();\n  }, []);\n\n  console.log(weeklyIncome);\n\n  return (\n    <>\n      <Bar data={weeklyIncome} options={options} />\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { getPopularFoodDrinks } from \"../../../util/agent\";\n\nexport interface DataProps {\n  labels: string[];\n  datasets: {\n    label: string;\n    data: number[];\n    backgroundColor: string[];\n    borderColor: string[];\n    borderWidth: number;\n  }[];\n}\n\nvar data = {\n  labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\n  datasets: [\n    {\n      label: \"# of Votes\",\n      data: [12, 19, 3, 5, 2],\n      backgroundColor: [\n        \"rgba(255, 99, 132, 0.2)\",\n        \"rgba(54, 162, 235, 0.2)\",\n        \"rgba(255, 206, 86, 0.2)\",\n        \"rgba(75, 192, 192, 0.2)\",\n        \"rgba(153, 102, 255, 0.2)\",\n      ],\n      borderColor: [\n        \"rgba(255, 99, 132, 1)\",\n        \"rgba(54, 162, 235, 1)\",\n        \"rgba(255, 206, 86, 1)\",\n        \"rgba(75, 192, 192, 1)\",\n        \"rgba(153, 102, 255, 1)\",\n      ],\n      borderWidth: 1,\n    },\n  ],\n};\n\nexport default function CustomPieChart() {\n  const [popularFoodDrink, setpopularFoodDrink] = useState<DataProps>();\n  useEffect(() => {\n    const fetchAnalytics = async () => {\n      const result = await getPopularFoodDrinks();\n      var dataName: string[];\n      var dataValue: number[];\n      dataName = [];\n      dataValue = [];\n      result.forEach((element) => {\n        console.log(element);\n        dataName.push(element.dataName);\n        dataValue.push(element.dataValue);\n      });\n\n      var setDataSet: {\n        label: string;\n        data: number[];\n        backgroundColor: string[];\n        borderColor: string[];\n        borderWidth: number;\n      }[];\n      setDataSet = [];\n      setDataSet.push({ ...data.datasets[0], data: dataValue });\n\n      data = {\n        ...data,\n        labels: dataName,\n        datasets: setDataSet,\n      };\n      setpopularFoodDrink(data);\n    };\n    fetchAnalytics();\n  }, []);\n\n  return (\n    <>\n      <Doughnut data={popularFoodDrink} />\n    </>\n  );\n}\n","import { Box, SimpleGrid } from \"@chakra-ui/react\";\nimport ChartCard from \".././components/chart_card\";\nimport CustomHorizontalBarChart from \".././components/horizontal_bar_chart\";\nimport CustomPieChart from \".././components/pie_chart\";\n\nexport default function ManagerPage() {\n  return (\n    <Box>\n      <SimpleGrid\n        columns={{ base: 1, md: 2 }}\n        spacing={{ base: 5, lg: 8 }}\n        mb={5}\n      >\n        <ChartCard showDateSelect={true} title={\"Weekly income\"}>\n          <CustomHorizontalBarChart />\n        </ChartCard>\n\n        <ChartCard showDateSelect={false} title={\"Most popular foods\"}>\n          <CustomPieChart />\n        </ChartCard>\n      </SimpleGrid>\n    </Box>\n  );\n}\n","import { Tab, TabList, TabPanel, TabPanels, Tabs } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport AnalyticsPage from \"./components/analytics_page\";\nimport ManagerPage from \"./components/manager_page\";\n\nexport default function ManagementPage() {\n  return (\n    <Tabs isFitted variant=\"enclosed\">\n      <TabList mb=\"1em\" color=\"black\" background=\"papayawhip\">\n        <Tab>Management</Tab>\n        <Tab>Analytics</Tab>\n      </TabList>\n      <TabPanels>\n        <TabPanel>\n          <AnalyticsPage />\n        </TabPanel>\n        <TabPanel>\n          <ManagerPage />\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n}\n","export enum OrderStatus {\n    InProgress = 0,\n    Ready = 1,\n    Served = 2,\n    Preparing = 3\n  }","import { Badge, Box, Divider, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nexport interface Props {\n  orderName: string;\n  tableNum: number;\n  showTable: boolean;\n  fontSize: string;\n}\n\nexport default function DoneOrderCard(props: Props) {\n  return (\n    <Box flexGrow={1} mx={2}>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Text fontSize={props.fontSize} fontWeight=\"bold\">\n          {props.orderName}\n        </Text>\n        {props.showTable && (\n          <Badge my=\"1\" fontSize=\"0.8em\" colorScheme=\"green\" variant=\"solid\">\n            TABLE {props.tableNum}\n          </Badge>\n        )}\n      </Box>\n      <Divider />\n    </Box>\n  );\n}\n","import { Center, Grid, GridItem, Text } from \"@chakra-ui/react\";\nimport { HubConnectionState } from \"@microsoft/signalr\";\nimport produce from \"immer\";\nimport React, { useCallback, useEffect, useReducer, useState } from \"react\";\nimport { FaArrowRight, FaArrowLeft } from \"react-icons/fa\";\nimport { Order } from \"../../models/order\";\nimport { OrderStatus } from \"../../models/order_status\";\nimport ApiContext from \"../../store/api_context\";\nimport DoneOrderCard from \"../waiter/components/done_order_card\";\nimport SwipeableItem from \"../waiter/components/swipeable_item\";\n\nexport enum ActionTypes {\n  INITIAL = \"Initial\",\n  ORDER_STATUS_CHANGED = \"OrderStatusChanged\",\n}\n\nexport type OrderAction = {\n  type: ActionTypes;\n  order?: Order;\n  orders?: Order[];\n};\n\nexport default function KitchenPage() {\n  const [tableOrdersRemastered, tableOrdersRemasteredDispatch] = useReducer(\n    produce((draft: Map<number, Order[]>, action: OrderAction) => {\n      switch (action.type) {\n        case ActionTypes.INITIAL: {\n          if (action.orders !== undefined) {\n            action.orders.forEach((order: Order) => {\n              var table = draft.get(order.table);\n              if (table !== undefined) {\n                table.push(order);\n              } else {\n                draft.set(order.table, [order]);\n              }\n            });\n          }\n          break;\n        }\n        case ActionTypes.ORDER_STATUS_CHANGED: {\n          if (action.order !== undefined) {\n            var table = draft.get(action.order.table);\n            if (table !== undefined) {\n              var idx = table.findIndex((x) => x.id === action.order?.id);\n              table[idx] = action.order;\n            }\n          }\n          break;\n        }\n      }\n    }),\n    new Map<number, Order[]>(),\n    undefined\n  );\n\n  const handleChangeStatus = useCallback((order: Order) => {\n    tableOrdersRemasteredDispatch({\n      type: ActionTypes.ORDER_STATUS_CHANGED,\n      order,\n    });\n  }, []);\n\n  const handleInitial = useCallback((allOrders: Order[]) => {\n    tableOrdersRemasteredDispatch({\n      type: ActionTypes.INITIAL,\n      orders: allOrders,\n    });\n  }, []);\n\n  const apiContext = React.useContext(ApiContext);\n\n  const handleChangeStatusInvoke = useCallback(\n    (order: Order, status: OrderStatus) => {\n      apiContext?.connection?.invoke(\"UpdateOrderStatus\", {\n        Id: order.id,\n        OrderStatus: status,\n      });\n    },\n    [apiContext]\n  );\n  useEffect(() => {\n    if (apiContext?.connection) {\n      if (apiContext?.connection.state !== HubConnectionState.Connected) {\n        apiContext?.connection.start().then(() => {\n          apiContext?.connection?.invoke(\"GetAllOrders\");\n        });\n      } else {\n        apiContext?.connection?.invoke(\"GetAllOrders\");\n      }\n\n      apiContext?.connection.on(\"AllOrders\", (orders: Order[]) => {\n        handleInitial(orders);\n      });\n\n      apiContext?.connection.on(\"OrderStatusUpdated\", (order: Order) => {\n        handleChangeStatus(order);\n      });\n    }\n  }, [apiContext?.connection, handleChangeStatus, handleInitial]);\n\n  const [allPendingOrder, setAllPendingOrders] = useState<Order[]>([]);\n  const [allPreparingOrder, setAllPreparingOrder] = useState<Order[]>([]);\n  const [allFinishedOrder, setAllFinishedOrder] = useState<Order[]>([]);\n\n  useEffect(() => {\n    var returnArrayPending: Order[] = [];\n    var returnArrayPreparing: Order[] = [];\n    var returnArrayFinished: Order[] = [];\n    tableOrdersRemastered.forEach((order, index) => {\n      order.forEach((order) => {\n        if (order.orderStatus === OrderStatus.InProgress) {\n          returnArrayPending.push(order);\n        } else if (order.orderStatus === OrderStatus.Preparing) {\n          returnArrayPreparing.push(order);\n        } else if (order.orderStatus === OrderStatus.Ready) {\n          returnArrayFinished.push(order);\n        }\n      });\n    });\n    setAllPendingOrders(returnArrayPending);\n    setAllPreparingOrder(returnArrayPreparing);\n    setAllFinishedOrder(returnArrayFinished);\n    console.log(returnArrayPending);\n    console.log(returnArrayPreparing);\n    console.log(returnArrayFinished);\n  }, [tableOrdersRemastered]);\n\n  return (\n    <Grid\n      templateRows=\"repeat(1, 1fr)\"\n      templateColumns=\"repeat(3, 1fr)\"\n      gap={4}\n    >\n      <GridItem colSpan={1} bg=\"tomato\">\n        <Center mx={1}>\n          <Text\n            my={3}\n            mx={3}\n            fontSize={\"2xl\"}\n            fontWeight={\"bold\"}\n            color={\"grey.700\"}\n          >\n            Pending orders\n          </Text>\n        </Center>\n        <SwipeableItem\n          children={(orderName, tableNum) => (\n            <DoneOrderCard\n              orderName={orderName}\n              tableNum={tableNum}\n              showTable={true}\n              fontSize={\"xl\"}\n            />\n          )}\n          trailingChild={<Text>PREPARING</Text>}\n          trailingIcon={<FaArrowRight />}\n          list={allPendingOrder}\n          onClick={function (orderAction: Order): void {\n            handleChangeStatusInvoke(orderAction, OrderStatus.Preparing);\n          }}\n        />\n      </GridItem>\n      <GridItem colSpan={1} bg=\"papayawhip\">\n        <Center mx={1}>\n          <Text\n            my={3}\n            mx={3}\n            fontSize={\"2xl\"}\n            fontWeight={\"bold\"}\n            color={\"grey.700\"}\n          >\n            Preparing\n          </Text>\n        </Center>\n        <SwipeableItem\n          children={(orderName, tableNum) => (\n            <DoneOrderCard\n              orderName={orderName}\n              tableNum={tableNum}\n              showTable={true}\n              fontSize={\"xl\"}\n            />\n          )}\n          trailingChild={<Text>FINISHED</Text>}\n          trailingIcon={<FaArrowRight />}\n          list={allPreparingOrder}\n          leadingChild={<Text>IN PROGRESS</Text>}\n          leadingIcon={<FaArrowLeft />}\n          onClick={function (orderAction: Order): void {\n            handleChangeStatusInvoke(orderAction, OrderStatus.Ready);\n          }}\n          onUndo={function (orderAction: Order): void {\n            handleChangeStatusInvoke(orderAction, OrderStatus.InProgress);\n          }}\n        />\n      </GridItem>\n      <GridItem colSpan={1} bg=\"green.300\">\n        <Center mx={1}>\n          <Text\n            my={3}\n            mx={3}\n            fontSize={\"2xl\"}\n            fontWeight={\"bold\"}\n            color={\"grey.700\"}\n          >\n            Finished orders\n          </Text>\n        </Center>\n        <SwipeableItem\n          children={(orderName, tableNum) => (\n            <DoneOrderCard\n              orderName={orderName}\n              tableNum={tableNum}\n              showTable={true}\n              fontSize={\"xl\"}\n            />\n          )}\n          trailingChild={<Text>PREPARING</Text>}\n          trailingIcon={<FaArrowLeft />}\n          list={allFinishedOrder}\n          onClick={function (orderAction: Order): void {\n            handleChangeStatusInvoke(orderAction, OrderStatus.Preparing);\n          }}\n        />\n      </GridItem>\n    </Grid>\n  );\n}\n","import { Box, Center, Flex } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nimport {\n  LeadingActions,\n  SwipeableList,\n  SwipeableListItem,\n  SwipeAction,\n  TrailingActions,\n  Type as ListType,\n} from \"react-swipeable-list\";\nimport \"react-swipeable-list/dist/styles.css\";\nimport { Order } from \"../../../models/order\";\n\ninterface Props {\n  children: (orderName: string, tableNum: number) => React.ReactNode;\n  trailingChild: React.ReactNode;\n  leadingChild?: React.ReactNode;\n  trailingIcon: React.ReactNode;\n  leadingIcon?: React.ReactNode;\n  list: Order[];\n  onClick: (orderAction: Order) => void;\n  onUndo?: (orderAction: Order) => void;\n}\n\nexport default function SwipeableItem(props: Props) {\n  const trailingActions = (\n    orderAction: Order,\n    onClick: (orderAction: Order) => void\n  ) => (\n    <TrailingActions>\n      <SwipeAction\n        destructive={true}\n        onClick={() => {\n          onClick(orderAction);\n        }}\n      >\n        <Box bg=\"red.200\">\n          <Center justifyContent=\"justify-center\" display=\"row\" d=\"flex\" px=\"1\">\n            {props.trailingIcon}\n            {props.trailingChild}\n          </Center>\n        </Box>\n      </SwipeAction>\n    </TrailingActions>\n  );\n\n  const leadingActions = (\n    orderAction: Order,\n    onClick: (orderAction: Order) => void\n  ) => (\n    <LeadingActions>\n      <SwipeAction\n        destructive={true}\n        onClick={() => {\n          onClick(orderAction);\n        }}\n      >\n        <Box bg=\"red.200\">\n          <Center justifyContent=\"justify-center\" display=\"row\" d=\"flex\" px=\"1\">\n            {props.leadingIcon}\n            {props.leadingChild}\n          </Center>\n        </Box>\n      </SwipeAction>\n    </LeadingActions>\n  );\n\n  return (\n    <Flex>\n      <SwipeableList\n        fullSwipe={true}\n        style={{ backgroundColor: \"orange.200\" }}\n        type={ListType.ANDROID}\n        threshold={0.5}\n      >\n        {props.list.map((order) => (\n          <SwipeableListItem\n            key={order.id}\n            trailingActions={trailingActions(order, props.onClick)}\n            leadingActions={\n              props.onUndo != null ? leadingActions(order, props.onUndo!) : null //TODO FIX\n            }\n          >\n            {props.children(order.name, order.table)}\n          </SwipeableListItem>\n        ))}\n      </SwipeableList>\n    </Flex>\n  );\n}\n","import { HStack, Tag, TagCloseButton, TagLabel } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nexport interface Props {\n  onClose: (id: number) => void;\n  title: string;\n  id: number;\n}\n\nexport default function AddedOrderItem(props: Props) {\n  return (\n    <HStack spacing={4}>\n      <Tag\n        size={\"md\"}\n        key={props.id}\n        borderRadius=\"full\"\n        variant=\"solid\"\n        colorScheme=\"orange\"\n      >\n        <TagLabel>{props.title}</TagLabel>\n        <TagCloseButton onClick={() => props.onClose(props.id)} />\n      </Tag>\n    </HStack>\n  );\n}\n","import React, { ChangeEvent, useEffect } from \"react\";\nimport { FaPlus } from \"react-icons/fa\";\nimport {\n  Box,\n  Button,\n  Text,\n  Center,\n  Popover,\n  PopoverArrow,\n  PopoverBody,\n  PopoverContent,\n  PopoverFooter,\n  PopoverTrigger,\n  Portal,\n  Divider,\n  VStack,\n  InputGroup,\n  InputLeftElement,\n  Input,\n  IconButton,\n  Wrap,\n  Badge,\n} from \"@chakra-ui/react\";\nimport { AddIcon, SearchIcon } from \"@chakra-ui/icons\";\n\nimport AddedOrderItem from \"./added_order_item\";\nimport { Order } from \"../../../models/order\";\nimport { FoodDrink } from \"../../../models/food_drink\";\nimport WaiterContext from \"../../../store/api_context\";\n\nexport interface AddOrderProps {\n  tableNum: number;\n  foodDrinks: FoodDrink[];\n  addNewOrders: (order: Order) => void;\n}\n\nvar availableMenus: FoodDrink[] = [];\n\nconst AddOrderCard = (props: AddOrderProps) => {\n  const waiterContext = React.useContext(WaiterContext);\n\n  const [selectedItems, setSelectedItems] = React.useState<FoodDrink[]>([]);\n\n  const [sortedMenus, setSortedMenus] = React.useState<FoodDrink[]>([]);\n\n  useEffect(() => {\n    availableMenus = props.foodDrinks;\n    setSortedMenus(props.foodDrinks);\n  }, [props.foodDrinks]);\n\n  const changeOrderQuantity = (id: number, change: number) => {\n    let findAddedItem = sortedMenus.findIndex((menu) => menu.id === id);\n\n    var currentStateOfItem = { ...sortedMenus[findAddedItem] };\n    currentStateOfItem.quantity = currentStateOfItem.quantity + change;\n    let modifiedList = sortedMenus;\n    modifiedList[findAddedItem] = currentStateOfItem;\n\n    setSortedMenus(modifiedList);\n  };\n\n  const handleOrderRemove = (id: number) => {\n    let findRemovedItem = selectedItems.findIndex((menu) => menu.id === id);\n    setSelectedItems(selectedItems.filter((_, idx) => idx !== findRemovedItem));\n\n    changeOrderQuantity(id, -1);\n  };\n\n  const handleOrderSelected = (item: FoodDrink) => {\n    setSelectedItems([...selectedItems, item]);\n\n    changeOrderQuantity(item.id, +1);\n  };\n\n  const handleOrderSearch = (event: ChangeEvent<HTMLInputElement>) => {\n    let text = event.target.value;\n    setSortedMenus(\n      sortedMenus.filter((item) =>\n        item.name.toLowerCase().includes(text.toLowerCase())\n      )\n    );\n\n    if (sortedMenus.length === 0 || text.trim().length === 0) {\n      setSortedMenus(availableMenus);\n    }\n  };\n\n  const clearOrders = () => {\n    setSelectedItems([]);\n    sortedMenus.map((menu) => (menu.quantity = +0));\n    setSortedMenus(sortedMenus);\n  };\n\n  const handleOrderAdd = () => {\n    //ITT KELLENE SZÓLNI SINGNALR AddNewOrders, és selectedItems helyett azon végigmenni\n\n    //connectiont meg a restaurantid-t megkapni contextből, és a tablenumot átadni még a paraméternek\n    //      elején useeffecetben feliratkoztatni:\n    //      connection.on(\"AddNewOrdersHandler\", (orders: Order[]) => {\n    //          handleAddNewOrders(orders);\n    //      });\n    //         connection.invoke(\"AddNewOrders\", { RestaurantId: 1, TableNum: props.tableNum, NewOrders: selectedItems});\n\n    //console.log(selectedItems);\n    console.log(sortedMenus);\n    waiterContext?.connection?.invoke(\"AddNewOrders\", {\n      TableNum: props.tableNum,\n      NewOrders: sortedMenus,\n    });\n    clearOrders();\n  };\n\n  return (\n    <Popover>\n      <PopoverTrigger>\n        <Button colorScheme=\"orange\" size=\"xs\">\n          <FaPlus />\n        </Button>\n      </PopoverTrigger>\n      <Portal>\n        <PopoverContent>\n          <PopoverArrow />\n          <PopoverBody>\n            <Wrap>\n              {selectedItems.map((item) => (\n                <AddedOrderItem\n                  key={item.id}\n                  title={item.name}\n                  id={item.id}\n                  onClose={handleOrderRemove}\n                />\n              ))}\n            </Wrap>\n            <Divider my={1} />\n            <Box>\n              <VStack>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    children={<SearchIcon color=\"gray.300\" />}\n                  />\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Search for orders...\"\n                    onChange={handleOrderSearch}\n                  />\n                </InputGroup>\n                <Button\n                  my={2}\n                  colorScheme={\"red\"}\n                  size={\"xs\"}\n                  onClick={clearOrders}\n                  variant={\"outline\"}\n                >\n                  REMOVE ALL ORDERS\n                </Button>\n                {sortedMenus.map((item) => (\n                  <Box\n                    key={item.id}\n                    w={\"full\"}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"space-between\"\n                  >\n                    <Text>{item.name}</Text>\n                    <Box zIndex={1}>\n                      <IconButton\n                        position=\"relative\"\n                        size={\"sm\"}\n                        onClick={() => handleOrderSelected(item)}\n                        aria-label=\"Add menu\"\n                        icon={\n                          <>\n                            <AddIcon />\n                            {item.quantity != null && item.quantity > 0 && (\n                              <Badge\n                                position={\"absolute\"}\n                                top={\"-5px\"}\n                                right={\"-5px\"}\n                                colorScheme=\"red\"\n                              >\n                                {item.quantity}\n                              </Badge>\n                            )}\n                          </>\n                        }\n                      />\n                    </Box>\n                  </Box>\n                ))}\n              </VStack>\n            </Box>\n          </PopoverBody>\n          <PopoverFooter>\n            <Center>\n              <Button\n                colorScheme=\"teal\"\n                variant=\"outline\"\n                onClick={handleOrderAdd}\n              >\n                ADD ORDERS\n              </Button>\n            </Center>\n          </PopoverFooter>\n        </PopoverContent>\n      </Portal>\n    </Popover>\n  );\n};\n\nexport default AddOrderCard;\n","import { Box } from \"@chakra-ui/layout\";\nimport {\n  HStack,\n  useRadio,\n  useRadioGroup,\n  UseRadioProps,\n} from \"@chakra-ui/react\";\nimport React, { FC } from \"react\";\n\ninterface RadioCardProps extends UseRadioProps {\n  label: string;\n  children: React.ReactNode;\n}\n// 1. Create a component that consumes the `useRadio` hook\nconst RadioCard: FC<RadioCardProps> = (props) => {\n  const { getInputProps, getCheckboxProps } = useRadio(props);\n\n  const input = getInputProps();\n  const checkbox = getCheckboxProps();\n\n  //TODO SAVE RADIOBUTTON VALUE TO STATE\n  return (\n    <Box as=\"label\">\n      <input {...input} onClick={() => console.log(props.label)} />\n      <Box\n        {...checkbox}\n        cursor=\"pointer\"\n        borderWidth=\"1px\"\n        borderRadius=\"md\"\n        boxShadow=\"md\"\n        _checked={{\n          bg: \"teal.600\",\n          color: \"white\",\n          borderColor: \"teal.600\",\n        }}\n        _focus={{\n          boxShadow: \"outline\",\n        }}\n        px={5}\n        py={3}\n      >\n        {props.children}\n      </Box>\n    </Box>\n  );\n};\n\n// Step 2: Use the `useRadioGroup` hook to control a group of custom radios.\n//        {$enum(PaymentOption).map((paymentOpt) => {\n\nexport default function SelectPaymentOption() {\n  const options = [\"Cash\", \"BankCard\"];\n\n  const { getRootProps, getRadioProps } = useRadioGroup({\n    name: \"framework\",\n    defaultValue: \"react\",\n    onChange: console.log,\n  });\n\n  const group = getRootProps();\n\n  return (\n    <HStack {...group}>\n      {options.map((value) => {\n        const radio = getRadioProps({ value });\n        return (\n          <RadioCard label={value} key={value} {...radio}>\n            {value}\n          </RadioCard>\n        );\n      })}\n    </HStack>\n  );\n}\n","const formatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\n\nexport { formatter };\n","import React, { useState, useEffect, useReducer, useCallback } from \"react\";\n\nimport { Text, Wrap, Grid, GridItem, Center } from \"@chakra-ui/react\";\nimport TableCard from \"./components/table_card\";\nimport DoneOrderCard from \"./components/done_order_card\";\nimport { FaAngleDown, FaAngleUp, FaArrowAltCircleUp } from \"react-icons/fa\";\nimport SwipeableItem from \"./components/swipeable_item\";\nimport produce from \"immer\";\nimport { OrderStatus } from \"../../models/order_status\";\nimport { Order } from \"../../models/order\";\nimport { FoodDrink } from \"../../models/food_drink\";\nimport ApiContext from \"../../store/api_context\";\nimport { HubConnectionState } from \"@microsoft/signalr\";\n\nexport enum ActionTypes {\n  INITIAL = \"Initial\",\n  ORDER_STATUS_CHANGED = \"OrderStatusChanged\",\n  ADD_ORDER = \"AddOrder\",\n}\n\nexport type OrderAction = {\n  type: ActionTypes;\n  order?: Order;\n  orders?: Order[];\n};\n\nexport default function WaiterPage() {\n  const [restaurantFoodDrinks, setRestaurantFoodDrinks] = useState<FoodDrink[]>(\n    []\n  );\n\n  const [tableOrdersRemastered, tableOrdersRemasteredDispatch] = useReducer(\n    produce((draft: Map<number, Order[]>, action: OrderAction) => {\n      switch (action.type) {\n        case ActionTypes.INITIAL: {\n          if (action.orders !== undefined) {\n            action.orders.forEach((order: Order) => {\n              var table = draft.get(order.table);\n              if (table !== undefined) {\n                table.push(order);\n              } else {\n                draft.set(order.table, [order]);\n              }\n            });\n          }\n          break;\n        }\n        case ActionTypes.ORDER_STATUS_CHANGED: {\n          if (action.order !== undefined) {\n            var table = draft.get(action.order.table);\n            if (table !== undefined) {\n              var idx = table.findIndex((x) => x.id === action.order?.id);\n              table[idx] = action.order;\n            }\n          }\n          break;\n        }\n        case ActionTypes.ADD_ORDER: {\n          if (action.order !== undefined) {\n            table = draft.get(action.order.table);\n            if (table !== undefined) {\n              table.push(action.order);\n            }\n          }\n          break;\n        }\n      }\n    }),\n    new Map<number, Order[]>(),\n    undefined\n  );\n\n  const handleChangeStatus = useCallback((order: Order) => {\n    tableOrdersRemasteredDispatch({\n      type: ActionTypes.ORDER_STATUS_CHANGED,\n      order,\n    });\n  }, []);\n\n  const handleInitial = useCallback((allOrders: Order[]) => {\n    tableOrdersRemasteredDispatch({\n      type: ActionTypes.INITIAL,\n      orders: allOrders,\n    });\n  }, []);\n\n  const handleAllFoodDrink = useCallback((allFoodDrinks: FoodDrink[]) => {\n    setRestaurantFoodDrinks(allFoodDrinks);\n    console.log(allFoodDrinks);\n  }, []);\n\n  const handleAddOrder = useCallback((order: Order) => {\n    tableOrdersRemasteredDispatch({\n      type: ActionTypes.ADD_ORDER,\n      order: order,\n    });\n  }, []);\n\n  const handleAddNewOrders = useCallback(\n    (orders: Order[]) => {\n      console.log(\"visszajott a letrehozott\");\n      console.log(orders);\n\n      orders.forEach((item) => {\n        handleAddOrder(item);\n      });\n    },\n    [handleAddOrder]\n  );\n\n  const apiContext = React.useContext(ApiContext);\n\n  const handleChangeStatusInvoke = useCallback(\n    (order: Order, status: OrderStatus) => {\n      apiContext?.connection?.invoke(\"UpdateOrderStatus\", {\n        Id: order.id,\n        OrderStatus: status,\n      });\n    },\n    [apiContext]\n  );\n\n  useEffect(() => {\n    if (apiContext?.connection) {\n      if (apiContext?.connection.state !== HubConnectionState.Connected)\n        apiContext?.connection.start().then(() => {\n          apiContext?.connection?.invoke(\"GetAllOrders\");\n          apiContext?.connection?.invoke(\"GetAllFoodDrink\");\n        });\n\n      apiContext?.connection.on(\"AllOrders\", (orders: Order[]) => {\n        handleInitial(orders);\n      });\n\n      apiContext?.connection.on(\"OrderStatusUpdated\", (order: Order) => {\n        handleChangeStatus(order);\n      });\n\n      apiContext?.connection.on(\n        \"AllFoodDrinksHandler\",\n        (foodDrinks: FoodDrink[]) => {\n          handleAllFoodDrink(foodDrinks);\n        }\n      );\n\n      apiContext?.connection.on(\"AddNewOrdersHandler\", (orders: Order[]) => {\n        handleAddNewOrders(orders);\n      });\n\n      if (apiContext?.connection.state === HubConnectionState.Connected) {\n        apiContext?.connection.invoke(\"GetAllOrders\");\n        apiContext?.connection.invoke(\"GetAllFoodDrink\");\n      }\n    }\n  }, [\n    apiContext?.connection,\n    handleChangeStatus,\n    handleInitial,\n    handleAllFoodDrink,\n    handleAddNewOrders,\n  ]);\n\n  const [allPendingOrder, setAllPendingOrders] = useState<Order[]>([]);\n  const [isDescending, setIsDescending] = useState<boolean>(true);\n\n  const handleSortList = () => {\n    const retValue = isDescending ? 1 : -1;\n\n    const sortedList = allPendingOrder.sort((a, b) =>\n      a.table > b.table ? retValue : -1 * retValue\n    );\n\n    setIsDescending(!isDescending);\n    setAllPendingOrders(sortedList);\n  };\n\n  useEffect(() => {\n    var returnArray: Order[] = [];\n    tableOrdersRemastered.forEach(\n      (order, index) =>\n        (returnArray = returnArray.concat(\n          order.filter((x) => x.orderStatus === OrderStatus.Ready)\n        ))\n    );\n    setAllPendingOrders(returnArray);\n  }, [tableOrdersRemastered]);\n\n  return (\n    <Grid\n      templateRows=\"repeat(1, 1fr)\"\n      templateColumns=\"repeat(5, 1fr)\"\n      gap={4}\n    >\n      <GridItem colSpan={4} bg=\"papayawhip\" p={2}>\n        <Wrap>\n          {Array.from(tableOrdersRemastered).map((orders) => (\n            <TableCard\n              key={orders[0]}\n              table={orders[1]}\n              tableNumber={orders[0]}\n              foodDrinks={restaurantFoodDrinks}\n              addOrder={handleAddOrder}\n              changeStatus={handleChangeStatusInvoke}\n            />\n          ))}\n        </Wrap>\n      </GridItem>\n      <GridItem colSpan={1} bg=\"tomato\">\n        <Center mx={1}>\n          <Text\n            my={3}\n            mx={3}\n            fontSize={\"2xl\"}\n            fontWeight={\"bold\"}\n            color={\"grey.700\"}\n          >\n            Finished orders\n          </Text>\n          {isDescending && <FaAngleUp onClick={handleSortList} />}\n          {!isDescending && <FaAngleDown onClick={handleSortList} />}\n        </Center>\n        <SwipeableItem\n          children={(orderName, tableNum) => (\n            <DoneOrderCard\n              orderName={orderName}\n              tableNum={tableNum}\n              showTable={true}\n              fontSize={\"xl\"}\n            />\n          )}\n          trailingChild={<Text>DONE</Text>}\n          trailingIcon={<FaArrowAltCircleUp />}\n          list={allPendingOrder}\n          onClick={function (orderAction: Order): void {\n            handleChangeStatusInvoke(orderAction, OrderStatus.Served);\n          }}\n        />\n      </GridItem>\n    </Grid>\n  );\n}\n","import { Box, Text, Button } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Order } from \"../../../models/order\";\nimport { formatter } from \"../../../util/app_util\";\n\nexport interface Props {\n  orders: Order[];\n  moveOrder: (id: number) => void;\n  buttonText: string;\n  isSplitBill: boolean;\n}\n\nexport default function TableBillList(props: Props) {\n  return (\n    <Box>\n      {props.orders.map((table) => {\n        return (\n          <Box\n            key={table.id}\n            display={\"flex\"}\n            w={\"full\"}\n            justifyContent={\"space-between\"}\n            alignContent={\"center\"}\n            alignItems={\"center\"}\n            my={1}\n          >\n            <Box\n              display={\"flex\"}\n              w={\"full\"}\n              justifyContent={\"space-between\"}\n              mr={props.isSplitBill ? 3 : 0}\n            >\n              <Text>{table.name}</Text>\n              <Text>{formatter.format(table.price)}</Text>\n            </Box>\n            {props.isSplitBill && (\n              <Button\n                onClick={() => props.moveOrder(table.id)}\n                colorScheme={\"orange\"}\n                variant={\"outline\"}\n                size={\"sm\"}\n              >\n                {props.buttonText}\n              </Button>\n            )}\n          </Box>\n        );\n      })}\n      <Box\n        w={\"full\"}\n        border={1}\n        display={\"flex\"}\n        bg={\"green.300\"}\n        justifyContent={\"space-between\"}\n      >\n        <Text fontWeight={\"bold\"}>Total amount:</Text>\n        <Text fontWeight={\"extrabold\"}>\n          {formatter.format(props.orders.reduce((a, b) => +a + b.price, 0))}\n        </Text>\n      </Box>\n    </Box>\n  );\n}\n","import { Button, Text } from \"@chakra-ui/react\";\nimport { Box, Center, Grid, GridItem, VStack } from \"@chakra-ui/layout\";\nimport React, { useState } from \"react\";\nimport { FaPlus } from \"react-icons/fa\";\nimport SelectPaymentOption from \"./select_payment_option\";\nimport TableBillList from \"./table_bill_list\";\nimport { Order } from \"../../../models/order\";\nimport ApiContext from \"../../../store/api_context\";\nimport { HubConnectionState } from \"@microsoft/signalr\";\n\nexport interface IProps {\n  table: Order[];\n}\n\nexport default function TablePayBill(props: IProps) {\n  const [isSplitBill, setIsSplitBill] = useState(false);\n  console.log(isSplitBill);\n\n  const [normalBill, setNormalBill] = useState(props.table);\n  const [splitBill, setSplitBill] = useState<Order[]>([]);\n\n  const toggleSplitBill = () => {\n    setIsSplitBill((prevSplitBill) => !prevSplitBill);\n\n    setNormalBill([...normalBill, ...splitBill]);\n    setSplitBill([]);\n  };\n\n  const moveOrderToSplit = (id: number) => {\n    const orderIdx = normalBill.findIndex((o) => o.id === id);\n    const order = normalBill[orderIdx];\n\n    setNormalBill(normalBill.filter((_, i) => i !== orderIdx));\n    setSplitBill([...splitBill, order]);\n  };\n  const moveOrderToNormalBill = (id: number) => {\n    const orderIdx = splitBill.findIndex((o) => o.id === id);\n    const order = splitBill[orderIdx];\n    setSplitBill(splitBill.filter((_, i) => i !== orderIdx));\n    setNormalBill([...normalBill, order]);\n  };\n\n  const apiContext = React.useContext(ApiContext);\n\n  // useEffect(() => {  //TODO CALLBACK METHOD SHOULD CALL HANDLEPAYORDER BUT WITH CORRECT ISSPLITBALL STATE\n  //   if (apiContext?.connection) {\n  //     apiContext?.connection.on(\"PayOrdersHandler\", (orders: Order[]) => {\n  //       console.log(\"useeffect handler\");\n  //       console.log(isSplitBill);\n  //       handlePayOrder(orders);\n  //     });\n  //   }\n  // }, [apiContext?.connection]);\n\n  const payOrderInvoke = () => {\n    console.log(\"payorderinvoke\");\n    console.log(isSplitBill);\n\n    if (apiContext?.connection?.state === HubConnectionState.Connected) {\n      apiContext?.connection.invoke(\"PayOrder\", {\n        PaidOrders: isSplitBill ? splitBill : normalBill,\n        CheckoutMethod: 1, //TODO GET IT FROM RADIOBUTTON\n      });\n      //apiContext?.connection?.invoke(\"GetAllOrders\");\n      handlePayOrder();\n    }\n  };\n\n  const handlePayOrder = () => {\n    console.log(\"handlepay called\");\n    console.log(isSplitBill);\n    if (isSplitBill) {\n      console.log(\"splitbillt torlom\");\n      setSplitBill([]);\n    } else {\n      console.log(\"normalbillt torlom\");\n      setNormalBill([]);\n    }\n  };\n\n  return (\n    <Grid\n      templateRows=\"repeat(1, 1fr)\"\n      templateColumns=\"repeat(3, 1fr)\"\n      gap={4}\n    >\n      <GridItem colSpan={1} bg=\"papayawhip\" p={2}>\n        <TableBillList\n          orders={normalBill}\n          moveOrder={moveOrderToSplit}\n          isSplitBill={isSplitBill}\n          buttonText={\"SPLIT\"}\n        />\n        {!isSplitBill && (\n          <Center>\n            <Button onClick={payOrderInvoke}>PAY</Button>\n          </Center>\n        )}\n      </GridItem>\n      <GridItem colSpan={1} bg=\"papayawhip\" p={2}>\n        <Center>\n          <VStack display={\"flex\"} w={\"full\"}>\n            <Button\n              colorScheme=\"orange\"\n              size=\"xl\"\n              onClick={toggleSplitBill}\n              p={1}\n            >\n              {!isSplitBill && (\n                <Text mx={1}>Do you want to split the bill?</Text>\n              )}\n              {isSplitBill && <Text mx={1}>Back to only normal bill</Text>}\n              <FaPlus />\n            </Button>\n\n            {isSplitBill && (\n              <Box w={\"full\"} color={\"blue.800\"}>\n                <TableBillList\n                  orders={splitBill}\n                  moveOrder={moveOrderToNormalBill}\n                  isSplitBill={isSplitBill}\n                  buttonText={\"UNDO\"}\n                />\n                <Center>\n                  <Button onClick={payOrderInvoke}>PAY</Button>\n                </Center>\n              </Box>\n            )}\n          </VStack>\n        </Center>\n      </GridItem>\n      <GridItem colSpan={1}>\n        <SelectPaymentOption />\n      </GridItem>\n    </Grid>\n  );\n}\n","import {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Order } from \"../../../models/order\";\nimport TablePayBill from \"./table_pay_bill\";\n\nexport interface IProps {\n  isOpen: boolean;\n  toggleOpen: () => void;\n  table: Order[];\n  tableNum: number;\n}\n\nexport default function TablePayModal(props: IProps) {\n  return (\n    <Modal onClose={props.toggleOpen} size={\"full\"} isOpen={props.isOpen}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Payment for TABLE{props.tableNum} </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <TablePayBill table={props.table} />\n        </ModalBody>\n        <ModalFooter>\n          <Button onClick={props.toggleOpen}>Close</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import {\n  Badge,\n  Box,\n  Grid,\n  VStack,\n  Text,\n  Divider,\n  Button,\n} from \"@chakra-ui/react\";\n\nimport \"react-swipeable-list/dist/styles.css\";\n\nimport { FaArrowAltCircleDown, FaArrowAltCircleUp } from \"react-icons/fa\";\nimport SwipeableItem from \"./swipeable_item\";\n\nimport React from \"react\";\nimport AddOrderCard from \"./add_order_card\";\nimport DoneOrderCard from \"./done_order_card\";\nimport TablePayModal from \"./table_pay_modal\";\nimport { OrderStatus } from \"../../../models/order_status\";\nimport { Order } from \"../../../models/order\";\nimport { FoodDrink } from \"../../../models/food_drink\";\n\ninterface Props {\n  table: Order[];\n  foodDrinks: FoodDrink[];\n  tableNumber: number;\n  addOrder: (order: Order) => void;\n  changeStatus: (order: Order, status: OrderStatus) => void;\n}\n\nexport default function TableCard(props: Props) {\n  const [isPayOpen, setIsPayOpen] = React.useState(false);\n\n  const toggleOpen = () => {\n    setIsPayOpen((prevPayOpen) => !prevPayOpen);\n  };\n\n  return (\n    <Box\n      maxW={\"270px\"}\n      w={\"full\"}\n      bg=\"whiteAlpha.900\"\n      boxShadow={\"2xl\"}\n      rounded={\"md\"}\n      overflow={\"hidden\"}\n      m=\"3\"\n      _hover={{\n        transform: \"scale(1.2)\",\n        boxShadow: \"lg\",\n        borderColor: \"grey.900\",\n      }}\n    >\n      <Box p={6}>\n        <VStack spacing=\"2px\">\n          <Grid templateColumns=\"repeat(3, 1fr)\" gap={6}>\n            <Box />\n            <Badge fontSize=\"md\" mb={1} mr={3}>\n              Table {props.tableNumber}\n            </Badge>\n            <AddOrderCard\n              addNewOrders={props.addOrder}\n              foodDrinks={props.foodDrinks}\n              tableNum={props.tableNumber}\n            />\n          </Grid>\n\n          <Box\n            w=\"100%\"\n            bg=\"orange.200\"\n            d=\"flex\"\n            display=\"table-column\"\n            justifyContent=\"justify-start\"\n          >\n            <SwipeableItem\n              children={(orderName, tableNum) => (\n                <DoneOrderCard\n                  fontSize={\"md\"}\n                  orderName={orderName}\n                  tableNum={tableNum}\n                  showTable={false}\n                />\n              )}\n              trailingChild={<Text>DONE</Text>}\n              trailingIcon={<FaArrowAltCircleDown />}\n              list={[\n                ...props.table.filter(\n                  (x) =>\n                    x.orderStatus === OrderStatus.InProgress ||\n                    x.orderStatus === OrderStatus.Preparing ||\n                    x.orderStatus === OrderStatus.Ready\n                ),\n              ]}\n              onClick={function (orderAction: Order): void {\n                props.changeStatus(orderAction, OrderStatus.Served);\n              }}\n            />\n          </Box>\n          <Divider variant=\"dashed\" />\n          <Box w=\"100%\" bg=\"green.200\">\n            <SwipeableItem\n              children={(orderName, tableNum) => (\n                <DoneOrderCard\n                  orderName={orderName}\n                  tableNum={tableNum}\n                  showTable={false}\n                  fontSize={\"md\"}\n                />\n              )}\n              trailingChild={<Text>BACK</Text>}\n              trailingIcon={<FaArrowAltCircleUp />}\n              list={[\n                ...props.table.filter(\n                  (x) => x.orderStatus === OrderStatus.Served\n                ),\n              ]}\n              onClick={function (orderAction: Order): void {\n                props.changeStatus(orderAction, OrderStatus.Ready);\n              }}\n            />\n          </Box>\n        </VStack>\n\n        <Button\n          w={\"full\"}\n          mt={4}\n          bg=\"gray.900\"\n          color={\"white\"}\n          onClick={toggleOpen}\n          rounded={\"md\"}\n          _hover={{\n            transform: \"translateY(-2px)\",\n            boxShadow: \"lg\",\n          }}\n        >\n          PAY\n        </Button>\n        <TablePayModal\n          isOpen={isPayOpen}\n          table={props.table}\n          toggleOpen={toggleOpen}\n          tableNum={props.tableNumber}\n        />\n      </Box>\n    </Box>\n  );\n}\n","import { useState } from \"react\";\nimport {\n  Flex,\n  Heading,\n  Input,\n  Button,\n  InputGroup,\n  Stack,\n  InputLeftElement,\n  chakra,\n  Box,\n  Link,\n  Avatar,\n  FormControl,\n  FormHelperText,\n  InputRightElement\n} from \"@chakra-ui/react\";\nimport { Formik, Form, Field, FieldProps } from \"formik\";\nimport { FaUserAlt, FaLock } from \"react-icons/fa\";\n\nimport { login } from '../../util/agent';\n\nconst CFaUserAlt = chakra(FaUserAlt);\nconst CFaLock = chakra(FaLock);\n\nconst App = () => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleShowClick = () => setShowPassword(!showPassword);\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      width=\"100wh\"\n      height=\"100vh\"\n      backgroundColor=\"gray.200\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Formik\n        initialValues={{email: '', password: ''}}\n        onSubmit={(values, action) => {\n          login(values);\n          action.setSubmitting(false);\n        }}\n      >\n        {({isSubmitting}) => (\n      <Stack\n        flexDir=\"column\"\n        mb=\"2\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Avatar bg=\"teal.500\" />\n        <Heading color=\"teal.400\">Welcome</Heading>\n        <Box minW={{ base: \"90%\", md: \"468px\" }}>\n          <Form>\n            <Stack\n              spacing={4}\n              p=\"1rem\"\n              backgroundColor=\"whiteAlpha.900\"\n              boxShadow=\"md\"\n            >\n              <Field name=\"email\">\n                {({ field }: FieldProps) => (\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    children={<CFaUserAlt color=\"gray.300\" />}\n                  />\n                  <Input {...field} type=\"email\" placeholder=\"email address\" />\n                </InputGroup>\n              </FormControl>\n              )}\n              </Field>\n              <Field name=\"password\">\n              {({ field }: FieldProps) => (\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    color=\"gray.300\"\n                    children={<CFaLock color=\"gray.300\" />}\n                  />\n                  <Input\n                    {...field}\n                    name=\"password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    placeholder=\"Password\"\n                  />\n                  <InputRightElement width=\"4.5rem\">\n                    <Button h=\"1.75rem\" size=\"sm\" onClick={handleShowClick}>\n                      {showPassword ? \"Hide\" : \"Show\"}\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n                <FormHelperText textAlign=\"right\">\n                  <Link>forgot password?</Link>\n                </FormHelperText>\n              </FormControl>\n              )}\n              </Field>\n              <Button\n                borderRadius={0}\n                type=\"submit\"\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                width=\"full\"\n                isLoading={isSubmitting}\n              >\n                Login\n              </Button>\n            </Stack>\n          </Form>\n        </Box>\n      </Stack>\n      )}\n      </Formik>\n      <Box>\n        New to us?{\" \"}\n        <Link color=\"teal.500\" href=\"/registration\">\n          Sign Up\n        </Link>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default App;\n","import { useState } from \"react\";\nimport {\n  Flex,\n  Heading,\n  Input,\n  Button,\n  InputGroup,\n  Stack,\n  InputLeftElement,\n  chakra,\n  Box,\n  Link,\n  Avatar,\n  FormControl,\n  InputRightElement\n} from \"@chakra-ui/react\";\nimport { BiRestaurant } from \"react-icons/bi\";\nimport { FaUserAlt, FaLock } from \"react-icons/fa\";\nimport { Formik, Form, Field, FieldProps } from \"formik\";\nimport { register } from '../../util/agent';\n\nconst CFaUserAlt = chakra(FaUserAlt);\nconst CFaLock = chakra(FaLock);\n\nconst App = () => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleShowClick = () => setShowPassword(!showPassword);\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      width=\"100wh\"\n      height=\"100vh\"\n      backgroundColor=\"gray.200\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Formik\n        initialValues={{restaurantName: '', email: '', password: ''}}\n        onSubmit={(values, action) => {\n          register(values);\n          console.log(values);\n          action.setSubmitting(false);\n        }}\n      >\n        {({isSubmitting}) => (\n      <Stack\n        flexDir=\"column\"\n        mb=\"2\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Avatar bg=\"teal.500\" />\n        <Heading color=\"teal.400\">Welcome</Heading>\n        <Box minW={{ base: \"90%\", md: \"468px\" }}>\n          <Form>\n            <Stack\n              spacing={4}\n              p=\"1rem\"\n              backgroundColor=\"whiteAlpha.900\"\n              boxShadow=\"md\"\n            >\n              <Field name=\"restaurantName\">\n              {({ field }: FieldProps) => (\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    color=\"gray.300\"\n                    children={<BiRestaurant color=\"gray.300\" />}\n                  />\n                  <Input {...field} type=\"text\" placeholder=\"Restaurant name\"/>\n                </InputGroup>\n              </FormControl>\n              )}\n              </Field>\n              <Field name=\"email\">\n              {({ field }: FieldProps) => (\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    children={<CFaUserAlt color=\"gray.300\" />}\n                  />\n                  <Input {...field} type=\"email\" placeholder=\"email address\" />\n                </InputGroup>\n              </FormControl>\n              )}\n              </Field>\n              <Field name=\"password\">\n              {({ field }: FieldProps) => (\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    color=\"gray.300\"\n                    children={<CFaLock color=\"gray.300\" />}\n                  />\n                  <Input\n                    {...field}\n                    type={showPassword ? \"text\" : \"password\"}\n                    placeholder=\"Password\"\n                  />\n                  <InputRightElement width=\"4.5rem\">\n                    <Button h=\"1.75rem\" size=\"sm\" onClick={handleShowClick}>\n                      {showPassword ? \"Hide\" : \"Show\"}\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n              </FormControl>\n              )}\n              </Field>\n              <Button\n                borderRadius={0}\n                type=\"submit\"\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                width=\"full\"\n                isLoading={isSubmitting}\n              >\n                Registration\n              </Button>\n            </Stack>\n          </Form>\n        </Box>\n      </Stack>\n      )}\n      </Formik>\n      <Box>\n        Already have an account?{\" \"}\n        <Link color=\"teal.500\" href=\"/login\">\n          Login\n        </Link>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default App;\n","const Routes = {\n  HOME: \"/\",\n  RESTAURANT: \"/restaurant\",\n  MANAGEMENT: \"/management\",\n  WAITER: \"/waiter\",\n  KITCHEN: \"/kitchen\",\n  LOGIN: \"/login\",\n  REGISTRATION: \"/registration\"\n};\n\nexport { Routes };\n","import React, { ReactNode } from \"react\";\nimport {\n  IconButton,\n  Box,\n  CloseButton,\n  Flex,\n  Icon,\n  useColorModeValue,\n  Drawer,\n  DrawerContent,\n  Text,\n  useDisclosure,\n  BoxProps,\n  FlexProps,\n} from \"@chakra-ui/react\";\nimport { RiRestaurantFill } from \"react-icons/ri\";\nimport { FiMenu } from \"react-icons/fi\";\nimport { BiFoodMenu } from \"react-icons/bi\";\nimport { GrRestaurant, GrUserManager } from \"react-icons/gr\";\nimport { IconType } from \"react-icons\";\nimport { ReactText } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Routes } from \"../../util/constants\";\n\ninterface LinkItemProps {\n  name: string;\n  icon: IconType;\n  link: string;\n}\nconst LinkItems: Array<LinkItemProps> = [\n  { name: \"Home\", icon: RiRestaurantFill, link: Routes.RESTAURANT },\n  { name: \"Management\", icon: GrUserManager, link: Routes.MANAGEMENT },\n  { name: \"Waiter\", icon: BiFoodMenu, link: Routes.WAITER },\n  { name: \"Kitchen\", icon: GrRestaurant, link: Routes.KITCHEN },\n];\n\nexport default function SimpleSidebar({ children }: { children: ReactNode }) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <Box minH=\"100vh\" bg={useColorModeValue(\"gray.100\", \"gray.900\")}>\n      <SidebarContent\n        onClose={() => onClose}\n        display={{ base: \"none\", md: \"block\" }}\n      />\n      <Drawer\n        autoFocus={false}\n        isOpen={isOpen}\n        placement=\"left\"\n        onClose={onClose}\n        returnFocusOnClose={false}\n        onOverlayClick={onClose}\n        size=\"full\"\n      >\n        <DrawerContent>\n          <SidebarContent onClose={onClose} />\n        </DrawerContent>\n      </Drawer>\n      {/* mobilenav */}\n      <MobileNav display={{ base: \"flex\", md: \"none\" }} onOpen={onOpen} />\n      <Box ml={{ base: 0, md: 60 }} p=\"4\">\n        {children}\n      </Box>\n    </Box>\n  );\n}\n\ninterface SidebarProps extends BoxProps {\n  onClose: () => void;\n}\n\nconst SidebarContent = ({ onClose, ...rest }: SidebarProps) => {\n  return (\n    <Box\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderRight=\"1px\"\n      borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      w={{ base: \"full\", md: 60 }}\n      pos=\"fixed\"\n      h=\"full\"\n      {...rest}\n    >\n      <Flex h=\"20\" alignItems=\"center\" mx=\"8\" justifyContent=\"space-between\">\n        <Text fontSize=\"2xl\" fontFamily=\"monospace\" fontWeight=\"bold\">\n          Logo\n        </Text>\n        <CloseButton display={{ base: \"flex\", md: \"none\" }} onClick={onClose} />\n      </Flex>\n      {LinkItems.map((link) => (\n        <NavItem key={link.name} icon={link.icon} link={link.link}>\n          {link.name}\n        </NavItem>\n      ))}\n    </Box>\n  );\n};\n\ninterface NavItemProps extends FlexProps {\n  icon: IconType;\n  children: ReactText;\n  link: string;\n}\nconst NavItem = ({ icon, children, link, ...rest }: NavItemProps) => {\n  return (\n    <NavLink to={link} style={{ textDecoration: \"none\" }}>\n      <Flex\n        align=\"center\"\n        p=\"4\"\n        mx=\"4\"\n        borderRadius=\"lg\"\n        role=\"group\"\n        cursor=\"pointer\"\n        _hover={{\n          bg: \"cyan.400\",\n          color: \"white\",\n        }}\n        {...rest}\n      >\n        {icon && (\n          <Icon\n            mr=\"4\"\n            fontSize=\"16\"\n            _groupHover={{\n              color: \"white\",\n            }}\n            as={icon}\n          />\n        )}\n        {children}\n      </Flex>\n    </NavLink>\n  );\n};\n\ninterface MobileProps extends FlexProps {\n  onOpen: () => void;\n}\nconst MobileNav = ({ onOpen, ...rest }: MobileProps) => {\n  return (\n    <Flex\n      ml={{ base: 0, md: 60 }}\n      px={{ base: 4, md: 24 }}\n      height=\"20\"\n      alignItems=\"center\"\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderBottomWidth=\"1px\"\n      borderBottomColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      justifyContent=\"flex-start\"\n      {...rest}\n    >\n      <IconButton\n        variant=\"outline\"\n        onClick={onOpen}\n        aria-label=\"open menu\"\n        icon={<FiMenu />}\n      />\n\n      <Text fontSize=\"2xl\" ml=\"8\" fontFamily=\"monospace\" fontWeight=\"bold\">\n        Logo\n      </Text>\n    </Flex>\n  );\n};\n","import { Fragment } from \"react\";\nimport SimpleSidebar from \"./chakra_nav\";\n\ninterface ParentCompProps {\n  childComp?: React.ReactNode;\n}\n\nconst Layout: React.FC<ParentCompProps> = (props) => {\n  return (\n    <Fragment>\n      <SimpleSidebar children={props.children} />\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport RestaurantPage from \"../../pages/restaurant/restaurant_page\";\nimport ManagementPage from \"../../pages/management/management_page\";\nimport KitchenPage from \"../../pages/kitchen/kitchen_page\";\nimport WaiterPage from \"../../pages/waiter/waiter_page\";\nimport LoginPage from \"../../pages/login/login_page\";\nimport RegistrationPage from \"../../pages/registration/registration_page\";\nimport Layout from \"./Layout\";\nimport { Routes } from \"../../util/constants\";\nimport { HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\nimport ApiContext, { ApiContextInterface } from \"../../store/api_context\";\nimport { getToken } from \"../../util/agent\";\n\nfunction CommonNavigator() {\n  const apiContext: ApiContextInterface = {\n    restaurantId: 1,\n    connection: new HubConnectionBuilder()\n      .withUrl(\"http://localhost:5000/restauranthub\", {\n        accessTokenFactory: () => getToken()!.toString(),\n      })\n      .withAutomaticReconnect()\n      .configureLogging(LogLevel.Debug)\n      .build(),\n  };\n\n  return (\n    <ApiContext.Provider value={apiContext}>\n      <Layout>\n        <Switch>\n          <Route path={Routes.HOME} exact>\n            <Redirect to={Routes.RESTAURANT} />\n          </Route>\n          <Route path={Routes.RESTAURANT} exact>\n            <RestaurantPage />\n          </Route>\n          <Route\n            path={Routes.MANAGEMENT}\n            render={(props) =>\n              getToken() !== null ? (\n                <ManagementPage />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route\n            path={Routes.KITCHEN}\n            render={(props) =>\n              getToken() !== null ? <KitchenPage /> : <Redirect to=\"/login\" />\n            }\n          />\n          <Route\n            path={Routes.WAITER}\n            render={(props) =>\n              getToken() !== null ? <WaiterPage /> : <Redirect to=\"/login\" />\n            }\n          />\n          <Route path={Routes.LOGIN}>\n            <LoginPage />\n          </Route>\n          <Route path={Routes.REGISTRATION}>\n            <RegistrationPage />\n          </Route>\n          <Route path=\"*\">\n            <div>NOTHING TO SEE HERE PAGE</div>\n          </Route>\n        </Switch>\n      </Layout>\n    </ApiContext.Provider>\n  );\n}\n\nexport default CommonNavigator;\n","import React from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { Router } from \"react-router-dom\";\nimport {createBrowserHistory} from 'history';\nimport CommonNavigator from \"./common/navigation/common_navigator\";\n\nimport { enableMapSet } from \"immer\";\n\nenableMapSet();\n\nexport const history = createBrowserHistory();\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <Router history={history}>\n        <CommonNavigator />\n      </Router>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}