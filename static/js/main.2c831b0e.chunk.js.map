{"version":3,"sources":["pages/restaurant/restaurant_page.tsx","store/api_context.ts","util/agent.ts","pages/management/components/editable_card.tsx","pages/management/components/analytics_page.tsx","pages/management/components/manager_page.tsx","pages/management/management_page.tsx","models/order_status.ts","pages/waiter/components/done_order_card.tsx","pages/kitchen/kitchen_page.tsx","pages/waiter/components/swipeable_item.tsx","pages/waiter/components/added_order_item.tsx","pages/waiter/components/add_order_card.tsx","pages/waiter/components/select_payment_option.tsx","util/app_util.js","pages/waiter/waiter_page.tsx","pages/waiter/components/table_bill_list.tsx","pages/waiter/components/table_pay_bill.tsx","pages/waiter/components/table_pay_modal.tsx","pages/waiter/components/table_card.tsx","pages/login/login_page.tsx","pages/registration/registration_page.tsx","util/constants.js","common/navigation/chakra_nav.tsx","common/navigation/Layout.tsx","common/navigation/common_navigator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RestaurantPage","ApiContext","React","createContext","formValues","a","axios","post","response","data","localStorage","setItem","JSON","stringify","history","push","getToken","user","getItem","parse","accessToken","getFoodDrink","get","id","console","log","put","delete","defaults","baseURL","interceptors","request","use","config","token","headers","Authorization","EditCard","props","useDisclosure","isOpen","onOpen","onClose","useState","foodDrink","name","editName","setEditName","price","editPrice","setEditPrice","flexDirection","my","padding","backgroundColor","rounded","fontSize","mb","fontWeight","fon","mx","onClick","color","deleteFoodDrink","onDelete","onChange","defaultValue","startWithEditView","valueString","min","variant","updateFoodDrink","onUpdate","AnalyticsPage","apiContext","useContext","useForm","register","handleSubmit","formState","errors","isSubmitting","useEffect","connection","state","HubConnectionState","Connected","start","value","setValue","foodDrinks","setFoodDrinks","handleNewFoodDrink","useCallback","newFoodDrink","on","val","updateItem","newList","map","item","deleteItem","filter","fetchFoodDrink","result","w","maxW","p","shadow","borderWidth","alignSelf","base","lg","borderColor","borderRadius","boxShadow","background","overflow","onSubmit","Promise","resolve","fd","invoke","NewFoodDrink","isInvalid","htmlFor","placeholder","required","minLength","message","replace","mt","colorScheme","isLoading","type","minChildWidth","spacing","fooddrink","ManagerPage","ManagementPage","isFitted","OrderStatus","DoneOrderCard","flexGrow","display","justifyContent","orderName","showTable","tableNum","ActionTypes","SwipeableItem","leadingActions","orderAction","destructive","bg","d","px","leadingIcon","leadingChild","fullSwipe","style","ListType","ANDROID","threshold","list","order","trailingActions","trailingIcon","trailingChild","onUndo","children","table","KitchenPage","useReducer","produce","draft","action","INITIAL","undefined","orders","forEach","set","ORDER_STATUS_CHANGED","idx","findIndex","x","Map","tableOrdersRemastered","tableOrdersRemasteredDispatch","handleChangeStatus","handleInitial","allOrders","handleChangeStatusInvoke","status","Id","then","allPendingOrder","setAllPendingOrders","allPreparingOrder","setAllPreparingOrder","allFinishedOrder","setAllFinishedOrder","returnArrayPending","returnArrayPreparing","returnArrayFinished","index","orderStatus","InProgress","Preparing","Ready","templateRows","templateColumns","gap","colSpan","AddedOrderItem","size","title","availableMenus","AddOrderCard","waiterContext","WaiterContext","selectedItems","setSelectedItems","sortedMenus","setSortedMenus","changeOrderQuantity","change","findAddedItem","menu","currentStateOfItem","quantity","modifiedList","handleOrderRemove","findRemovedItem","_","clearOrders","pointerEvents","Search","event","text","target","toLowerCase","includes","length","trim","alignItems","zIndex","position","handleOrderSelected","icon","Add","top","right","TableNum","NewOrders","RadioCard","useRadio","getInputProps","getCheckboxProps","input","checkbox","as","label","cursor","_checked","_focus","py","SelectPaymentOption","useRadioGroup","getRootProps","getRadioProps","group","radio","formatter","Intl","NumberFormat","currency","TableBillList","alignContent","mr","isSplitBill","format","moveOrder","buttonText","border","reduce","b","TablePayBill","setIsSplitBill","normalBill","setNormalBill","splitBill","setSplitBill","orderIdx","o","i","prevSplitBill","TablePayModal","toggleOpen","TableCard","isPayOpen","setIsPayOpen","prevPayOpen","m","_hover","transform","tableNumber","addNewOrders","addOrder","changeStatus","Served","WaiterPage","restaurantFoodDrinks","setRestaurantFoodDrinks","ADD_ORDER","handleAllFoodDrink","allFoodDrinks","handleAddOrder","handleAddNewOrders","isDescending","setIsDescending","handleSortList","retValue","sortedList","sort","returnArray","concat","Array","from","CFaUserAlt","chakra","FaUserAlt","CFaLock","FaLock","App","showPassword","setShowPassword","handleShowClick","width","height","initialValues","email","password","values","login","setSubmitting","flexDir","minW","md","field","h","textAlign","href","restaurantName","Routes","LinkItems","RiRestaurantFill","link","GrUserManager","BiFoodMenu","GrRestaurant","SimpleSidebar","minH","useColorModeValue","autoFocus","placement","returnFocusOnClose","onOverlayClick","ml","SidebarContent","rest","borderRight","borderRightColor","pos","fontFamily","NavItem","to","textDecoration","align","role","_groupHover","MobileNav","borderBottomWidth","borderBottomColor","Layout","CommonNavigator","restaurantId","HubConnectionBuilder","withUrl","accessTokenFactory","toString","withAutomaticReconnect","configureLogging","LogLevel","Debug","build","Provider","path","exact","render","enableMapSet","createBrowserHistory","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c831b0e.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function RestaurantPage() {\n    return (\n        <div>\n            RESTAURANT NÉZET\n        </div>\n    )\n}\n","import { HubConnection } from \"@microsoft/signalr\";\nimport React from \"react\";\n\n\nexport interface ApiContextInterface {\n    connection: HubConnection | null;\n    restaurantId: number;\n}\n\nconst ApiContext = React.createContext<ApiContextInterface | null>(null);\n\nexport default ApiContext;","import { FoodDrink, FoodDrinkFormValues } from './../models/food_drink';\nimport axios from \"axios\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { history } from \"../App\";\n\naxios.defaults.baseURL = \"http://localhost:5000/api\";\n\naxios.interceptors.request.use(config => {\n    const token = getToken();\n    if (token)\n        config!.headers!.Authorization = `Bearer ${token}`;\n\n    return config;\n});\n\nexport async function login(formValues: UserFormValues): Promise<User | null> {\n    const response = await axios.post<User>(\"/account/login\", formValues);\n    if (response.data) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        history.push(\"/\");\n        return response.data;\n    }\n\n    return null;\n}\n\nexport async function register(formValues: UserFormValues): Promise<User | null> {\n    const response = await axios.post<User>(\"/account/register\", formValues);\n    if (response.data) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        history.push(\"/\");\n        return response.data;\n    }\n\n    return null;\n}\n\nexport function logout(): void {\n    localStorage.removeItem(\"user\");\n}\n\nexport function getToken(): string | null {\n    const user = localStorage.getItem(\"user\");\n    if (user) {\n        const obj: User = JSON.parse(user)\n        return obj.accessToken;\n    }\n\n    return null;\n}\n\nexport async function getFoodDrink(): Promise<FoodDrink[]> {\n    const response = await axios.get<FoodDrink[]>(\"/fooddrink\");\n    if (response.data) {\n        return response.data;\n    }\n    return []\n}\n\nexport async function updateFoodDrink(id: number, formValues: FoodDrinkFormValues): Promise<null> {\n    console.log(\"update jon\");\n    await axios.put<FoodDrink>(`/fooddrink/${id}`, formValues);\n    history.push(\"/management\");\n\n    return null;\n}\n\nexport async function deleteFoodDrink(id: number): Promise<null> {\n    await axios.delete<FoodDrink[]>(`/fooddrink/${id}`);\n    history.push(\"/management\");\n\n    return null;\n}","import React from \"react\";\nimport {\n  Box,\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  useDisclosure,\n  Editable,\n  EditableInput,\n  EditablePreview,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from \"@chakra-ui/react\";\nimport { deleteFoodDrink, updateFoodDrink } from \"../../../util/agent\";\nimport { FoodDrink } from \"../../../models/food_drink\";\nimport { MdEdit, MdDelete } from \"react-icons/md\";\n\ninterface IProps {\n  foodDrink: FoodDrink;\n  onUpdate: (id: number, name: string, price: number) => void;\n  onDelete: (id: number) => void;\n}\n\nexport default function EditCard(props: IProps) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [editName, setEditName] = React.useState(props.foodDrink.name);\n  const [editPrice, setEditPrice] = React.useState(props.foodDrink.price);\n\n  return (\n    <Box\n      flexDirection=\"row\"\n      my=\"5\"\n      padding=\"0.5em\"\n      backgroundColor=\"papayawhip\"\n      rounded=\"0.5em\"\n    >\n      <Box>\n        <Text fontSize=\"lg\" mb=\"5\" fontWeight=\"bold\">\n          {props.foodDrink.name}\n        </Text>\n        <Text fontSize=\"lg\" mb=\"5\" fon>\n          {props.foodDrink.price} $\n        </Text>\n      </Box>\n      <Button mx={1} onClick={onOpen} color=\"#41bb93\">\n        <MdEdit />\n      </Button>\n      <Button\n        mx={1}\n        onClick={() => {\n          deleteFoodDrink(props.foodDrink.id);\n          props.onDelete(props.foodDrink.id);\n        }}\n        color=\"#ff0000\"\n      >\n        <MdDelete />\n      </Button>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Update item</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            {/* onSubmit can be used to post the updated data to the server. */}\n            <Editable\n              onChange={setEditName}\n              defaultValue={props.foodDrink.name}\n              startWithEditView={true}\n            >\n              <EditablePreview />\n              <EditableInput />\n            </Editable>\n\n            <NumberInput\n              onChange={(valueString) => setEditPrice(+valueString)}\n              defaultValue={props.foodDrink.price}\n              min={0}\n            >\n              <NumberInputField />\n              <NumberInputStepper>\n                <NumberIncrementStepper />\n                <NumberDecrementStepper />\n              </NumberInputStepper>\n            </NumberInput>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button mx={3} onClick={onClose} variant=\"outline\">\n              Close\n            </Button>\n            <Button\n              onClick={() => {\n                updateFoodDrink(props.foodDrink.id, {\n                  name: editName,\n                  price: editPrice,\n                });\n                props.onUpdate(props.foodDrink.id, editName, editPrice);\n              }}\n              variant=\"solid\"\n            >\n              Update\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </Box>\n  );\n}\n","import {\n  Box,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  Center,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useCallback } from \"react\";\n\nimport { useForm } from \"react-hook-form\";\nimport {\n  FormErrorMessage,\n  FormLabel,\n  FormControl,\n  Input,\n  Button,\n} from \"@chakra-ui/react\";\n\nimport { FoodDrink } from \"../../../models/food_drink\";\nimport ApiContext from \"../../../store/api_context\";\nimport { HubConnectionState } from \"@microsoft/signalr\";\nimport { getFoodDrink } from \"../../../util/agent\";\nimport EditCard from \"./editable_card\";\n\ninterface IFormFoodDrink {\n  name: string;\n  price: number;\n}\n\nexport default function AnalyticsPage() {\n  const apiContext = React.useContext(ApiContext);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n  } = useForm();\n\n  useEffect(() => {\n    if (apiContext?.connection) {\n      if (apiContext?.connection.state !== HubConnectionState.Connected) {\n        apiContext?.connection.start();\n      }\n    }\n  }, [apiContext?.connection]);\n\n  function onSubmit(data: IFormFoodDrink) {\n    return new Promise((resolve) => {\n      const fd = {\n        name: data[\"name\"],\n        price: +value,\n      };\n\n      console.log(fd);\n      resolve(\n        apiContext?.connection?.invoke(\"AddNewFoodDrink\", {\n          NewFoodDrink: fd,\n        })\n      );\n    });\n  }\n\n  const format = (val: string) => `$` + val;\n  const parse = (val: string) => val.replace(/^\\$/, \"\");\n\n  const [value, setValue] = React.useState(\"0.0\");\n  const [foodDrinks, setFoodDrinks] = React.useState<FoodDrink[]>([]);\n\n  const handleNewFoodDrink = useCallback(\n    (newFoodDrink: FoodDrink) => {\n      console.log(newFoodDrink);\n      foodDrinks.push(newFoodDrink);\n      setFoodDrinks(foodDrinks); //TODO FIX DOUBLE ADD ISSUE\n    },\n    [foodDrinks]\n  );\n\n  useEffect(() => {\n    if (apiContext?.connection) {\n      apiContext?.connection.on(\n        \"AddNewFoodDrinkHandler\",\n        (foodDrink: FoodDrink) => {\n          handleNewFoodDrink(foodDrink);\n        }\n      );\n    }\n  }, [apiContext, handleNewFoodDrink]);\n\n  const updateItem = (id: number, name: string, price: number) => {\n    const newList = foodDrinks.map((item) => {\n      if (item.id === id) {\n        const updatedItem = {\n          ...item,\n          name: name,\n          price: price,\n        };\n\n        return updatedItem;\n      }\n\n      return item;\n    });\n\n    setFoodDrinks(newList);\n  };\n\n  const deleteItem = (id: number) => {\n    const newList = foodDrinks.filter((item) => item.id !== id);\n    setFoodDrinks(newList);\n  };\n\n  useEffect(() => {\n    const fetchFoodDrink = async () => {\n      const result = await getFoodDrink();\n      setFoodDrinks(result);\n    };\n    fetchFoodDrink();\n  }, []);\n\n  return (\n    <Box w={\"full\"}>\n      <Center>\n        <Box\n          maxW={\"400px\"}\n          w={\"full\"}\n          mb={4}\n          p={3}\n          shadow=\"base\"\n          borderWidth=\"1px\"\n          alignSelf={{ base: \"center\", lg: \"flex-start\" }}\n          borderColor=\"gray.200\"\n          borderRadius={\"xl\"}\n          boxShadow={\"2xl\"}\n          rounded={\"md\"}\n          background={\"white\"}\n          overflow={\"hidden\"}\n        >\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <FormControl isInvalid={errors.name}>\n              <FormLabel htmlFor=\"name\">\n                Please add your new food/drink\n              </FormLabel>\n              <Input\n                id=\"name\"\n                placeholder=\"Food or drink name\"\n                {...register(\"name\", {\n                  required: \"This is required\",\n                  minLength: {\n                    value: 4,\n                    message: \"Minimum length should be 4\",\n                  },\n                })}\n              />\n              <NumberInput\n                id=\"price\"\n                {...register(\"price\", {\n                  required: \"This is required\",\n                })}\n                onChange={(valueString) => setValue(parse(valueString))}\n                value={format(value)}\n                min={0}\n              >\n                <NumberInputField />\n                <NumberInputStepper>\n                  <NumberIncrementStepper />\n                  <NumberDecrementStepper />\n                </NumberInputStepper>\n              </NumberInput>\n              <FormErrorMessage>\n                {errors.name && errors.name.message}\n              </FormErrorMessage>\n            </FormControl>\n            <Center>\n              <Button\n                mt={4}\n                colorScheme=\"teal\"\n                isLoading={isSubmitting}\n                type=\"submit\"\n              >\n                Submit\n              </Button>\n            </Center>\n          </form>\n        </Box>\n      </Center>\n      <SimpleGrid minChildWidth=\"120px\" spacing=\"40px\">\n        {foodDrinks.map((fooddrink) => {\n          return (\n            <EditCard\n              foodDrink={fooddrink}\n              onUpdate={updateItem}\n              onDelete={deleteItem}\n            />\n          );\n        })}\n      </SimpleGrid>\n    </Box>\n  );\n}\n","import { Box, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nexport default function ManagerPage() {\n  return (\n    <Box>\n      <Text>ANALYTICS CHARTS</Text>\n    </Box>\n  );\n}\n","import { Tab, TabList, TabPanel, TabPanels, Tabs } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport AnalyticsPage from \"./components/analytics_page\";\nimport ManagerPage from \"./components/manager_page\";\n\nexport default function ManagementPage() {\n  return (\n    <Tabs isFitted variant=\"enclosed\">\n      <TabList mb=\"1em\" color=\"black\" background=\"papayawhip\">\n        <Tab>Management</Tab>\n        <Tab>Analytics</Tab>\n      </TabList>\n      <TabPanels>\n        <TabPanel>\n          <AnalyticsPage />\n        </TabPanel>\n        <TabPanel>\n          <ManagerPage />\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n}\n","export enum OrderStatus {\n    InProgress = 0,\n    Ready = 1,\n    Served = 2,\n    Preparing = 3\n  }","import { Badge, Box, Divider, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nexport interface Props {\n  orderName: string;\n  tableNum: number;\n  showTable: boolean;\n  fontSize: string;\n}\n\nexport default function DoneOrderCard(props: Props) {\n  return (\n    <Box flexGrow={1} mx={2}>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Text fontSize={props.fontSize} fontWeight=\"bold\">\n          {props.orderName}\n        </Text>\n        {props.showTable && (\n          <Badge my=\"1\" fontSize=\"0.8em\" colorScheme=\"green\" variant=\"solid\">\n            TABLE {props.tableNum}\n          </Badge>\n        )}\n      </Box>\n      <Divider />\n    </Box>\n  );\n}\n","import { Center, Grid, GridItem, Text } from \"@chakra-ui/react\";\nimport { HubConnectionState } from \"@microsoft/signalr\";\nimport produce from \"immer\";\nimport React, { useCallback, useEffect, useReducer, useState } from \"react\";\nimport { FaArrowRight, FaArrowLeft } from \"react-icons/fa\";\nimport { Order } from \"../../models/order\";\nimport { OrderStatus } from \"../../models/order_status\";\nimport ApiContext from \"../../store/api_context\";\nimport DoneOrderCard from \"../waiter/components/done_order_card\";\nimport SwipeableItem from \"../waiter/components/swipeable_item\";\n\nexport enum ActionTypes {\n  INITIAL = \"Initial\",\n  ORDER_STATUS_CHANGED = \"OrderStatusChanged\",\n}\n\nexport type OrderAction = {\n  type: ActionTypes;\n  order?: Order;\n  orders?: Order[];\n};\n\nexport default function KitchenPage() {\n  const [tableOrdersRemastered, tableOrdersRemasteredDispatch] = useReducer(\n    produce((draft: Map<number, Order[]>, action: OrderAction) => {\n      switch (action.type) {\n        case ActionTypes.INITIAL: {\n          if (action.orders !== undefined) {\n            action.orders.forEach((order: Order) => {\n              var table = draft.get(order.table);\n              if (table !== undefined) {\n                table.push(order);\n              } else {\n                draft.set(order.table, [order]);\n              }\n            });\n          }\n          break;\n        }\n        case ActionTypes.ORDER_STATUS_CHANGED: {\n          if (action.order !== undefined) {\n            var table = draft.get(action.order.table);\n            if (table !== undefined) {\n              var idx = table.findIndex((x) => x.id === action.order?.id);\n              table[idx] = action.order;\n            }\n          }\n          break;\n        }\n      }\n    }),\n    new Map<number, Order[]>(),\n    undefined\n  );\n\n  const handleChangeStatus = useCallback((order: Order) => {\n    tableOrdersRemasteredDispatch({\n      type: ActionTypes.ORDER_STATUS_CHANGED,\n      order,\n    });\n  }, []);\n\n  const handleInitial = useCallback((allOrders: Order[]) => {\n    tableOrdersRemasteredDispatch({\n      type: ActionTypes.INITIAL,\n      orders: allOrders,\n    });\n  }, []);\n\n  const apiContext = React.useContext(ApiContext);\n\n  const handleChangeStatusInvoke = useCallback(\n    (order: Order, status: OrderStatus) => {\n      apiContext?.connection?.invoke(\"UpdateOrderStatus\", {\n        Id: order.id,\n        OrderStatus: status,\n      });\n    },\n    [apiContext]\n  );\n  useEffect(() => {\n    if (apiContext?.connection) {\n      if (apiContext?.connection.state !== HubConnectionState.Connected) {\n        apiContext?.connection.start().then(() => {\n          apiContext?.connection?.invoke(\"GetAllOrders\");\n        });\n      } else {\n        apiContext?.connection?.invoke(\"GetAllOrders\");\n      }\n\n      apiContext?.connection.on(\"AllOrders\", (orders: Order[]) => {\n        handleInitial(orders);\n      });\n\n      apiContext?.connection.on(\"OrderStatusUpdated\", (order: Order) => {\n        handleChangeStatus(order);\n      });\n    }\n  }, [apiContext?.connection, handleChangeStatus, handleInitial]);\n\n  const [allPendingOrder, setAllPendingOrders] = useState<Order[]>([]);\n  const [allPreparingOrder, setAllPreparingOrder] = useState<Order[]>([]);\n  const [allFinishedOrder, setAllFinishedOrder] = useState<Order[]>([]);\n\n  useEffect(() => {\n    var returnArrayPending: Order[] = [];\n    var returnArrayPreparing: Order[] = [];\n    var returnArrayFinished: Order[] = [];\n    tableOrdersRemastered.forEach((order, index) => {\n      order.forEach((order) => {\n        if (order.orderStatus === OrderStatus.InProgress) {\n          returnArrayPending.push(order);\n        } else if (order.orderStatus === OrderStatus.Preparing) {\n          returnArrayPreparing.push(order);\n        } else if (order.orderStatus === OrderStatus.Ready) {\n          returnArrayFinished.push(order);\n        }\n      });\n    });\n    setAllPendingOrders(returnArrayPending);\n    setAllPreparingOrder(returnArrayPreparing);\n    setAllFinishedOrder(returnArrayFinished);\n    console.log(returnArrayPending);\n    console.log(returnArrayPreparing);\n    console.log(returnArrayFinished);\n  }, [tableOrdersRemastered]);\n\n  return (\n    <Grid\n      templateRows=\"repeat(1, 1fr)\"\n      templateColumns=\"repeat(3, 1fr)\"\n      gap={4}\n    >\n      <GridItem colSpan={1} bg=\"tomato\">\n        <Center mx={1}>\n          <Text\n            my={3}\n            mx={3}\n            fontSize={\"2xl\"}\n            fontWeight={\"bold\"}\n            color={\"grey.700\"}\n          >\n            Pending orders\n          </Text>\n        </Center>\n        <SwipeableItem\n          children={(orderName, tableNum) => (\n            <DoneOrderCard\n              orderName={orderName}\n              tableNum={tableNum}\n              showTable={true}\n              fontSize={\"xl\"}\n            />\n          )}\n          trailingChild={<Text>PREPARING</Text>}\n          trailingIcon={<FaArrowRight />}\n          list={allPendingOrder}\n          onClick={function (orderAction: Order): void {\n            handleChangeStatusInvoke(orderAction, OrderStatus.Preparing);\n          }}\n        />\n      </GridItem>\n      <GridItem colSpan={1} bg=\"papayawhip\">\n        <Center mx={1}>\n          <Text\n            my={3}\n            mx={3}\n            fontSize={\"2xl\"}\n            fontWeight={\"bold\"}\n            color={\"grey.700\"}\n          >\n            Preparing\n          </Text>\n        </Center>\n        <SwipeableItem\n          children={(orderName, tableNum) => (\n            <DoneOrderCard\n              orderName={orderName}\n              tableNum={tableNum}\n              showTable={true}\n              fontSize={\"xl\"}\n            />\n          )}\n          trailingChild={<Text>FINISHED</Text>}\n          trailingIcon={<FaArrowRight />}\n          list={allPreparingOrder}\n          leadingChild={<Text>IN PROGRESS</Text>}\n          leadingIcon={<FaArrowLeft />}\n          onClick={function (orderAction: Order): void {\n            handleChangeStatusInvoke(orderAction, OrderStatus.Ready);\n          }}\n          onUndo={function (orderAction: Order): void {\n            handleChangeStatusInvoke(orderAction, OrderStatus.InProgress);\n          }}\n        />\n      </GridItem>\n      <GridItem colSpan={1} bg=\"green.300\">\n        <Center mx={1}>\n          <Text\n            my={3}\n            mx={3}\n            fontSize={\"2xl\"}\n            fontWeight={\"bold\"}\n            color={\"grey.700\"}\n          >\n            Finished orders\n          </Text>\n        </Center>\n        <SwipeableItem\n          children={(orderName, tableNum) => (\n            <DoneOrderCard\n              orderName={orderName}\n              tableNum={tableNum}\n              showTable={true}\n              fontSize={\"xl\"}\n            />\n          )}\n          trailingChild={<Text>PREPARING</Text>}\n          trailingIcon={<FaArrowLeft />}\n          list={allFinishedOrder}\n          onClick={function (orderAction: Order): void {\n            handleChangeStatusInvoke(orderAction, OrderStatus.Preparing);\n          }}\n        />\n      </GridItem>\n    </Grid>\n  );\n}\n","import { Box, Center, Flex } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nimport {\n  LeadingActions,\n  SwipeableList,\n  SwipeableListItem,\n  SwipeAction,\n  TrailingActions,\n  Type as ListType,\n} from \"react-swipeable-list\";\nimport \"react-swipeable-list/dist/styles.css\";\nimport { Order } from \"../../../models/order\";\n\ninterface Props {\n  children: (orderName: string, tableNum: number) => React.ReactNode;\n  trailingChild: React.ReactNode;\n  leadingChild?: React.ReactNode;\n  trailingIcon: React.ReactNode;\n  leadingIcon?: React.ReactNode;\n  list: Order[];\n  onClick: (orderAction: Order) => void;\n  onUndo?: (orderAction: Order) => void;\n}\n\nexport default function SwipeableItem(props: Props) {\n  const trailingActions = (\n    orderAction: Order,\n    onClick: (orderAction: Order) => void\n  ) => (\n    <TrailingActions>\n      <SwipeAction\n        destructive={true}\n        onClick={() => {\n          onClick(orderAction);\n        }}\n      >\n        <Box bg=\"red.200\">\n          <Center justifyContent=\"justify-center\" display=\"row\" d=\"flex\" px=\"1\">\n            {props.trailingIcon}\n            {props.trailingChild}\n          </Center>\n        </Box>\n      </SwipeAction>\n    </TrailingActions>\n  );\n\n  const leadingActions = (\n    orderAction: Order,\n    onClick: (orderAction: Order) => void\n  ) => (\n    <LeadingActions>\n      <SwipeAction\n        destructive={true}\n        onClick={() => {\n          onClick(orderAction);\n        }}\n      >\n        <Box bg=\"red.200\">\n          <Center justifyContent=\"justify-center\" display=\"row\" d=\"flex\" px=\"1\">\n            {props.leadingIcon}\n            {props.leadingChild}\n          </Center>\n        </Box>\n      </SwipeAction>\n    </LeadingActions>\n  );\n\n  return (\n    <Flex>\n      <SwipeableList\n        fullSwipe={true}\n        style={{ backgroundColor: \"orange.200\" }}\n        type={ListType.ANDROID}\n        threshold={0.5}\n      >\n        {props.list.map((order) => (\n          <SwipeableListItem\n            key={order.id}\n            trailingActions={trailingActions(order, props.onClick)}\n            leadingActions={\n              props.onUndo != null ? leadingActions(order, props.onUndo!) : null //TODO FIX\n            }\n          >\n            {props.children(order.name, order.table)}\n          </SwipeableListItem>\n        ))}\n      </SwipeableList>\n    </Flex>\n  );\n}\n","import { HStack, Tag, TagCloseButton, TagLabel } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nexport interface Props {\n  onClose: (id: number) => void;\n  title: string;\n  id: number;\n}\n\nexport default function AddedOrderItem(props: Props) {\n  return (\n    <HStack spacing={4}>\n      <Tag\n        size={\"md\"}\n        key={props.id}\n        borderRadius=\"full\"\n        variant=\"solid\"\n        colorScheme=\"orange\"\n      >\n        <TagLabel>{props.title}</TagLabel>\n        <TagCloseButton onClick={() => props.onClose(props.id)} />\n      </Tag>\n    </HStack>\n  );\n}\n","import React, { ChangeEvent, useEffect } from \"react\";\nimport { FaPlus } from \"react-icons/fa\";\nimport {\n  Box,\n  Button,\n  Text,\n  Center,\n  Popover,\n  PopoverArrow,\n  PopoverBody,\n  PopoverContent,\n  PopoverFooter,\n  PopoverTrigger,\n  Portal,\n  Divider,\n  VStack,\n  InputGroup,\n  InputLeftElement,\n  Input,\n  IconButton,\n  Wrap,\n  Badge,\n} from \"@chakra-ui/react\";\nimport { AddIcon, SearchIcon } from \"@chakra-ui/icons\";\n\nimport AddedOrderItem from \"./added_order_item\";\nimport { Order } from \"../../../models/order\";\nimport { FoodDrink } from \"../../../models/food_drink\";\nimport WaiterContext from \"../../../store/api_context\";\n\nexport interface AddOrderProps {\n  tableNum: number;\n  foodDrinks: FoodDrink[];\n  addNewOrders: (order: Order) => void;\n}\n\nvar availableMenus: FoodDrink[] = [];\n\nconst AddOrderCard = (props: AddOrderProps) => {\n  const waiterContext = React.useContext(WaiterContext);\n\n  const [selectedItems, setSelectedItems] = React.useState<FoodDrink[]>([]);\n\n  const [sortedMenus, setSortedMenus] = React.useState<FoodDrink[]>([]);\n\n  useEffect(() => {\n    availableMenus = props.foodDrinks;\n    setSortedMenus(props.foodDrinks);\n  }, [props.foodDrinks]);\n\n  const changeOrderQuantity = (id: number, change: number) => {\n    let findAddedItem = sortedMenus.findIndex((menu) => menu.id === id);\n\n    var currentStateOfItem = { ...sortedMenus[findAddedItem] };\n    currentStateOfItem.quantity = currentStateOfItem.quantity + change;\n    let modifiedList = sortedMenus;\n    modifiedList[findAddedItem] = currentStateOfItem;\n\n    setSortedMenus(modifiedList);\n  };\n\n  const handleOrderRemove = (id: number) => {\n    let findRemovedItem = selectedItems.findIndex((menu) => menu.id === id);\n    setSelectedItems(selectedItems.filter((_, idx) => idx !== findRemovedItem));\n\n    changeOrderQuantity(id, -1);\n  };\n\n  const handleOrderSelected = (item: FoodDrink) => {\n    setSelectedItems([...selectedItems, item]);\n\n    changeOrderQuantity(item.id, +1);\n  };\n\n  const handleOrderSearch = (event: ChangeEvent<HTMLInputElement>) => {\n    let text = event.target.value;\n    setSortedMenus(\n      sortedMenus.filter((item) =>\n        item.name.toLowerCase().includes(text.toLowerCase())\n      )\n    );\n\n    if (sortedMenus.length === 0 || text.trim().length === 0) {\n      setSortedMenus(availableMenus);\n    }\n  };\n\n  const clearOrders = () => {\n    setSelectedItems([]);\n    sortedMenus.map((menu) => (menu.quantity = +0));\n    setSortedMenus(sortedMenus);\n  };\n\n  const handleOrderAdd = () => {\n    //ITT KELLENE SZÓLNI SINGNALR AddNewOrders, és selectedItems helyett azon végigmenni\n\n    //connectiont meg a restaurantid-t megkapni contextből, és a tablenumot átadni még a paraméternek\n    //      elején useeffecetben feliratkoztatni:\n    //      connection.on(\"AddNewOrdersHandler\", (orders: Order[]) => {\n    //          handleAddNewOrders(orders);\n    //      });\n    //         connection.invoke(\"AddNewOrders\", { RestaurantId: 1, TableNum: props.tableNum, NewOrders: selectedItems});\n\n    //console.log(selectedItems);\n    console.log(sortedMenus);\n    waiterContext?.connection?.invoke(\"AddNewOrders\", {\n      TableNum: props.tableNum,\n      NewOrders: sortedMenus,\n    });\n    clearOrders();\n  };\n\n  return (\n    <Popover>\n      <PopoverTrigger>\n        <Button colorScheme=\"orange\" size=\"xs\">\n          <FaPlus />\n        </Button>\n      </PopoverTrigger>\n      <Portal>\n        <PopoverContent>\n          <PopoverArrow />\n          <PopoverBody>\n            <Wrap>\n              {selectedItems.map((item) => (\n                <AddedOrderItem\n                  key={item.id}\n                  title={item.name}\n                  id={item.id}\n                  onClose={handleOrderRemove}\n                />\n              ))}\n            </Wrap>\n            <Divider my={1} />\n            <Box>\n              <VStack>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    children={<SearchIcon color=\"gray.300\" />}\n                  />\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Search for orders...\"\n                    onChange={handleOrderSearch}\n                  />\n                </InputGroup>\n                <Button\n                  my={2}\n                  colorScheme={\"red\"}\n                  size={\"xs\"}\n                  onClick={clearOrders}\n                  variant={\"outline\"}\n                >\n                  REMOVE ALL ORDERS\n                </Button>\n                {sortedMenus.map((item) => (\n                  <Box\n                    key={item.id}\n                    w={\"full\"}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"space-between\"\n                  >\n                    <Text>{item.name}</Text>\n                    <Box zIndex={1}>\n                      <IconButton\n                        position=\"relative\"\n                        size={\"sm\"}\n                        onClick={() => handleOrderSelected(item)}\n                        aria-label=\"Add menu\"\n                        icon={\n                          <>\n                            <AddIcon />\n                            {item.quantity != null && item.quantity > 0 && (\n                              <Badge\n                                position={\"absolute\"}\n                                top={\"-5px\"}\n                                right={\"-5px\"}\n                                colorScheme=\"red\"\n                              >\n                                {item.quantity}\n                              </Badge>\n                            )}\n                          </>\n                        }\n                      />\n                    </Box>\n                  </Box>\n                ))}\n              </VStack>\n            </Box>\n          </PopoverBody>\n          <PopoverFooter>\n            <Center>\n              <Button\n                colorScheme=\"teal\"\n                variant=\"outline\"\n                onClick={handleOrderAdd}\n              >\n                ADD ORDERS\n              </Button>\n            </Center>\n          </PopoverFooter>\n        </PopoverContent>\n      </Portal>\n    </Popover>\n  );\n};\n\nexport default AddOrderCard;\n","import { Box } from \"@chakra-ui/layout\";\nimport {\n  HStack,\n  useRadio,\n  useRadioGroup,\n  UseRadioProps,\n} from \"@chakra-ui/react\";\nimport React, { FC } from \"react\";\nimport { PaymentOption } from \"../../../models/payment_option\";\n\nexport interface Props {\n  paymentOption: PaymentOption;\n  isSelected: boolean;\n}\n\ninterface RadioCardProps extends UseRadioProps {\n  label: string;\n  children: React.ReactNode;\n}\n// 1. Create a component that consumes the `useRadio` hook\nconst RadioCard: FC<RadioCardProps> = (props) => {\n  const { getInputProps, getCheckboxProps } = useRadio(props);\n\n  const input = getInputProps();\n  const checkbox = getCheckboxProps();\n\n  return (\n    <Box as=\"label\">\n      <input {...input} onClick={() => console.log(props.label)} />\n      <Box\n        {...checkbox}\n        cursor=\"pointer\"\n        borderWidth=\"1px\"\n        borderRadius=\"md\"\n        boxShadow=\"md\"\n        _checked={{\n          bg: \"teal.600\",\n          color: \"white\",\n          borderColor: \"teal.600\",\n        }}\n        _focus={{\n          boxShadow: \"outline\",\n        }}\n        px={5}\n        py={3}\n      >\n        {props.children}\n      </Box>\n    </Box>\n  );\n};\n\n// Step 2: Use the `useRadioGroup` hook to control a group of custom radios.\n//        {$enum(PaymentOption).map((paymentOpt) => {\n\nexport default function SelectPaymentOption() {\n  const options = [\"Cash\", \"BankCard\"];\n\n  const { getRootProps, getRadioProps } = useRadioGroup({\n    name: \"framework\",\n    defaultValue: \"react\",\n    onChange: console.log,\n  });\n\n  const group = getRootProps();\n\n  return (\n    <HStack {...group}>\n      {options.map((value) => {\n        const radio = getRadioProps({ value });\n        return (\n          <RadioCard label={value} key={value} {...radio}>\n            {value}\n          </RadioCard>\n        );\n      })}\n    </HStack>\n  );\n}\n","const formatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\n\nexport { formatter };\n","import React, { useState, useEffect, useReducer, useCallback } from \"react\";\n\nimport { Text, Wrap, Grid, GridItem, Center } from \"@chakra-ui/react\";\nimport TableCard from \"./components/table_card\";\nimport DoneOrderCard from \"./components/done_order_card\";\nimport { FaAngleDown, FaAngleUp, FaArrowAltCircleUp } from \"react-icons/fa\";\nimport SwipeableItem from \"./components/swipeable_item\";\nimport produce from \"immer\";\nimport { OrderStatus } from \"../../models/order_status\";\nimport { Order } from \"../../models/order\";\nimport { FoodDrink } from \"../../models/food_drink\";\nimport ApiContext from \"../../store/api_context\";\nimport { HubConnectionState } from \"@microsoft/signalr\";\n\nexport enum ActionTypes {\n  INITIAL = \"Initial\",\n  ORDER_STATUS_CHANGED = \"OrderStatusChanged\",\n  ADD_ORDER = \"AddOrder\",\n}\n\nexport type OrderAction = {\n  type: ActionTypes;\n  order?: Order;\n  orders?: Order[];\n};\n\nexport default function WaiterPage() {\n  const [restaurantFoodDrinks, setRestaurantFoodDrinks] = useState<FoodDrink[]>(\n    []\n  );\n\n  const [tableOrdersRemastered, tableOrdersRemasteredDispatch] = useReducer(\n    produce((draft: Map<number, Order[]>, action: OrderAction) => {\n      switch (action.type) {\n        case ActionTypes.INITIAL: {\n          if (action.orders !== undefined) {\n            action.orders.forEach((order: Order) => {\n              var table = draft.get(order.table);\n              if (table !== undefined) {\n                table.push(order);\n              } else {\n                draft.set(order.table, [order]);\n              }\n            });\n          }\n          break;\n        }\n        case ActionTypes.ORDER_STATUS_CHANGED: {\n          if (action.order !== undefined) {\n            var table = draft.get(action.order.table);\n            if (table !== undefined) {\n              var idx = table.findIndex((x) => x.id === action.order?.id);\n              table[idx] = action.order;\n            }\n          }\n          break;\n        }\n        case ActionTypes.ADD_ORDER: {\n          if (action.order !== undefined) {\n            table = draft.get(action.order.table);\n            if (table !== undefined) {\n              table.push(action.order);\n            }\n          }\n          break;\n        }\n      }\n    }),\n    new Map<number, Order[]>(),\n    undefined\n  );\n\n  const handleChangeStatus = useCallback((order: Order) => {\n    tableOrdersRemasteredDispatch({\n      type: ActionTypes.ORDER_STATUS_CHANGED,\n      order,\n    });\n  }, []);\n\n  const handleInitial = useCallback((allOrders: Order[]) => {\n    tableOrdersRemasteredDispatch({\n      type: ActionTypes.INITIAL,\n      orders: allOrders,\n    });\n  }, []);\n\n  const handleAllFoodDrink = useCallback((allFoodDrinks: FoodDrink[]) => {\n    setRestaurantFoodDrinks(allFoodDrinks);\n    console.log(allFoodDrinks);\n  }, []);\n\n  const handleAddOrder = useCallback((order: Order) => {\n    tableOrdersRemasteredDispatch({\n      type: ActionTypes.ADD_ORDER,\n      order: order,\n    });\n  }, []);\n\n  const handleAddNewOrders = useCallback(\n    (orders: Order[]) => {\n      console.log(\"visszajott a letrehozott\");\n      console.log(orders);\n\n      orders.forEach((item) => {\n        handleAddOrder(item);\n      });\n    },\n    [handleAddOrder]\n  );\n\n  const apiContext = React.useContext(ApiContext);\n\n  const handleChangeStatusInvoke = useCallback(\n    (order: Order, status: OrderStatus) => {\n      apiContext?.connection?.invoke(\"UpdateOrderStatus\", {\n        Id: order.id,\n        OrderStatus: status,\n      });\n    },\n    [apiContext]\n  );\n\n  useEffect(() => {\n    if (apiContext?.connection) {\n      if (apiContext?.connection.state !== HubConnectionState.Connected)\n        apiContext?.connection.start().then(() => {\n          apiContext?.connection?.invoke(\"GetAllOrders\");\n          apiContext?.connection?.invoke(\"GetAllFoodDrink\");\n        });\n\n      apiContext?.connection.on(\"AllOrders\", (orders: Order[]) => {\n        handleInitial(orders);\n      });\n\n      apiContext?.connection.on(\"OrderStatusUpdated\", (order: Order) => {\n        handleChangeStatus(order);\n      });\n\n      apiContext?.connection.on(\n        \"AllFoodDrinksHandler\",\n        (foodDrinks: FoodDrink[]) => {\n          handleAllFoodDrink(foodDrinks);\n        }\n      );\n\n      apiContext?.connection.on(\"AddNewOrdersHandler\", (orders: Order[]) => {\n        handleAddNewOrders(orders);\n      });\n\n      if (apiContext?.connection.state === HubConnectionState.Connected) {\n        apiContext?.connection.invoke(\"GetAllOrders\");\n        apiContext?.connection.invoke(\"GetAllFoodDrink\");\n      }\n    }\n  }, [\n    apiContext?.connection,\n    handleChangeStatus,\n    handleInitial,\n    handleAllFoodDrink,\n    handleAddNewOrders,\n  ]);\n\n  const [allPendingOrder, setAllPendingOrders] = useState<Order[]>([]);\n  const [isDescending, setIsDescending] = useState<boolean>(true);\n\n  const handleSortList = () => {\n    const retValue = isDescending ? 1 : -1;\n\n    const sortedList = allPendingOrder.sort((a, b) =>\n      a.table > b.table ? retValue : -1 * retValue\n    );\n\n    setIsDescending(!isDescending);\n    setAllPendingOrders(sortedList);\n  };\n\n  useEffect(() => {\n    var returnArray: Order[] = [];\n    tableOrdersRemastered.forEach(\n      (order, index) =>\n        (returnArray = returnArray.concat(\n          order.filter((x) => x.orderStatus === OrderStatus.Ready)\n        ))\n    );\n    setAllPendingOrders(returnArray);\n  }, [tableOrdersRemastered]);\n\n  return (\n    <Grid\n      templateRows=\"repeat(1, 1fr)\"\n      templateColumns=\"repeat(5, 1fr)\"\n      gap={4}\n    >\n      <GridItem colSpan={4} bg=\"papayawhip\" p={2}>\n        <Wrap>\n          {Array.from(tableOrdersRemastered).map((orders) => (\n            <TableCard\n              key={orders[0]}\n              table={orders[1]}\n              tableNumber={orders[0]}\n              foodDrinks={restaurantFoodDrinks}\n              addOrder={handleAddOrder}\n              changeStatus={handleChangeStatusInvoke}\n            />\n          ))}\n        </Wrap>\n      </GridItem>\n      <GridItem colSpan={1} bg=\"tomato\">\n        <Center mx={1}>\n          <Text\n            my={3}\n            mx={3}\n            fontSize={\"2xl\"}\n            fontWeight={\"bold\"}\n            color={\"grey.700\"}\n          >\n            Finished orders\n          </Text>\n          {isDescending && <FaAngleUp onClick={handleSortList} />}\n          {!isDescending && <FaAngleDown onClick={handleSortList} />}\n        </Center>\n        <SwipeableItem\n          children={(orderName, tableNum) => (\n            <DoneOrderCard\n              orderName={orderName}\n              tableNum={tableNum}\n              showTable={true}\n              fontSize={\"xl\"}\n            />\n          )}\n          trailingChild={<Text>DONE</Text>}\n          trailingIcon={<FaArrowAltCircleUp />}\n          list={allPendingOrder}\n          onClick={function (orderAction: Order): void {\n            handleChangeStatusInvoke(orderAction, OrderStatus.Served);\n          }}\n        />\n      </GridItem>\n    </Grid>\n  );\n}\n","import { Box, Text, Button } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Order } from \"../../../models/order\";\nimport { formatter } from \"../../../util/app_util\";\n\nexport interface Props {\n  orders: Order[];\n  moveOrder: (id: number) => void;\n  buttonText: string;\n  isSplitBill: boolean;\n}\n\nexport default function TableBillList(props: Props) {\n  return (\n    <Box>\n      {props.orders.map((table) => {\n        return (\n          <Box\n            key={table.id}\n            display={\"flex\"}\n            w={\"full\"}\n            justifyContent={\"space-between\"}\n            alignContent={\"center\"}\n            alignItems={\"center\"}\n            my={1}\n          >\n            <Box\n              display={\"flex\"}\n              w={\"full\"}\n              justifyContent={\"space-between\"}\n              mr={props.isSplitBill ? 3 : 0}\n            >\n              <Text>{table.name}</Text>\n              <Text>{formatter.format(table.price)}</Text>\n            </Box>\n            {props.isSplitBill && (\n              <Button\n                onClick={() => props.moveOrder(table.id)}\n                colorScheme={\"orange\"}\n                variant={\"outline\"}\n                size={\"sm\"}\n              >\n                {props.buttonText}\n              </Button>\n            )}\n          </Box>\n        );\n      })}\n      <Box\n        w={\"full\"}\n        border={1}\n        display={\"flex\"}\n        bg={\"green.300\"}\n        justifyContent={\"space-between\"}\n      >\n        <Text fontWeight={\"bold\"}>Total amount:</Text>\n        <Text fontWeight={\"extrabold\"}>\n          {formatter.format(props.orders.reduce((a, b) => +a + b.price, 0))}\n        </Text>\n      </Box>\n    </Box>\n  );\n}\n","import { Button, Text } from \"@chakra-ui/react\";\nimport { Box, Center, Grid, GridItem, VStack } from \"@chakra-ui/layout\";\nimport React, { useState } from \"react\";\nimport { FaPlus } from \"react-icons/fa\";\nimport SelectPaymentOption from \"./select_payment_option\";\nimport TableBillList from \"./table_bill_list\";\nimport { Order } from \"../../../models/order\";\n\nexport interface IProps {\n  table: Order[];\n}\n\nexport default function TablePayBill(props: IProps) {\n  const [isSplitBill, setIsSplitBill] = useState(false);\n\n  const [normalBill, setNormalBill] = useState(props.table);\n  const [splitBill, setSplitBill] = useState<Order[]>([]);\n\n  const toggleSplitBill = () => {\n    setIsSplitBill((prevSplitBill) => !prevSplitBill);\n\n    setNormalBill([...normalBill, ...splitBill]);\n    setSplitBill([]);\n  };\n\n  const moveOrderToSplit = (id: number) => {\n    const orderIdx = normalBill.findIndex((o) => o.id === id);\n    const order = normalBill[orderIdx];\n\n    setNormalBill(normalBill.filter((_, i) => i !== orderIdx));\n    setSplitBill([...splitBill, order]);\n\n    console.log(\"tosplit\");\n  };\n  const moveOrderToNormalBill = (id: number) => {\n    const orderIdx = splitBill.findIndex((o) => o.id === id);\n    const order = splitBill[orderIdx];\n    setSplitBill(splitBill.filter((_, i) => i !== orderIdx));\n    setNormalBill([...normalBill, order]);\n\n    console.log(\"tonormal\");\n  };\n\n  return (\n    <Grid\n      templateRows=\"repeat(1, 1fr)\"\n      templateColumns=\"repeat(3, 1fr)\"\n      gap={4}\n    >\n      <GridItem colSpan={1} bg=\"papayawhip\" p={2}>\n        <TableBillList\n          orders={normalBill}\n          moveOrder={moveOrderToSplit}\n          isSplitBill={isSplitBill}\n          buttonText={\"SPLIT\"}\n        />\n        {!isSplitBill && (\n          <Center>\n            <Button>PAY</Button>\n          </Center>\n        )}\n      </GridItem>\n      <GridItem colSpan={1} bg=\"papayawhip\" p={2}>\n        <Center>\n          <VStack display={\"flex\"} w={\"full\"}>\n            <Button\n              colorScheme=\"orange\"\n              size=\"xl\"\n              onClick={toggleSplitBill}\n              p={1}\n            >\n              {!isSplitBill && (\n                <Text mx={1}>Do you want to split the bill?</Text>\n              )}\n              {isSplitBill && <Text mx={1}>Back to only normal bill</Text>}\n              <FaPlus />\n            </Button>\n\n            {isSplitBill && (\n              <Box w={\"full\"} color={\"blue.800\"}>\n                <TableBillList\n                  orders={splitBill}\n                  moveOrder={moveOrderToNormalBill}\n                  isSplitBill={isSplitBill}\n                  buttonText={\"UNDO\"}\n                />\n                <Center>\n                  <Button>PAY</Button>\n                </Center>\n              </Box>\n            )}\n          </VStack>\n        </Center>\n      </GridItem>\n      <GridItem colSpan={1}>\n        <SelectPaymentOption />\n      </GridItem>\n    </Grid>\n  );\n}\n","import {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Order } from \"../../../models/order\";\nimport TablePayBill from \"./table_pay_bill\";\n\nexport interface IProps {\n  isOpen: boolean;\n  toggleOpen: () => void;\n  table: Order[];\n  tableNum: number;\n}\n\nexport default function TablePayModal(props: IProps) {\n  return (\n    <Modal onClose={props.toggleOpen} size={\"full\"} isOpen={props.isOpen}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Payment for TABLE{props.tableNum} </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <TablePayBill table={props.table} />\n        </ModalBody>\n        <ModalFooter>\n          <Button onClick={props.toggleOpen}>Close</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import {\n  Badge,\n  Box,\n  Grid,\n  VStack,\n  Text,\n  Divider,\n  Button,\n} from \"@chakra-ui/react\";\n\nimport \"react-swipeable-list/dist/styles.css\";\n\nimport { FaArrowAltCircleDown, FaArrowAltCircleUp } from \"react-icons/fa\";\nimport SwipeableItem from \"./swipeable_item\";\n\nimport React from \"react\";\nimport AddOrderCard from \"./add_order_card\";\nimport DoneOrderCard from \"./done_order_card\";\nimport TablePayModal from \"./table_pay_modal\";\nimport { OrderStatus } from \"../../../models/order_status\";\nimport { Order } from \"../../../models/order\";\nimport { FoodDrink } from \"../../../models/food_drink\";\n\ninterface Props {\n  table: Order[];\n  foodDrinks: FoodDrink[];\n  tableNumber: number;\n  addOrder: (order: Order) => void;\n  changeStatus: (order: Order, status: OrderStatus) => void;\n}\n\nexport default function TableCard(props: Props) {\n  const [isPayOpen, setIsPayOpen] = React.useState(false);\n\n  const toggleOpen = () => {\n    setIsPayOpen((prevPayOpen) => !prevPayOpen);\n  };\n\n  return (\n    <Box\n      maxW={\"270px\"}\n      w={\"full\"}\n      bg=\"whiteAlpha.900\"\n      boxShadow={\"2xl\"}\n      rounded={\"md\"}\n      overflow={\"hidden\"}\n      m=\"3\"\n      _hover={{\n        transform: \"scale(1.2)\",\n        boxShadow: \"lg\",\n        borderColor: \"grey.900\",\n      }}\n    >\n      <Box p={6}>\n        <VStack spacing=\"2px\">\n          <Grid templateColumns=\"repeat(3, 1fr)\" gap={6}>\n            <Box />\n            <Badge fontSize=\"md\" mb={1} mr={3}>\n              Table {props.tableNumber}\n            </Badge>\n            <AddOrderCard\n              addNewOrders={props.addOrder}\n              foodDrinks={props.foodDrinks}\n              tableNum={props.tableNumber}\n            />\n          </Grid>\n\n          <Box\n            w=\"100%\"\n            bg=\"orange.200\"\n            d=\"flex\"\n            display=\"table-column\"\n            justifyContent=\"justify-start\"\n          >\n            <SwipeableItem\n              children={(orderName, tableNum) => (\n                <DoneOrderCard\n                  fontSize={\"md\"}\n                  orderName={orderName}\n                  tableNum={tableNum}\n                  showTable={false}\n                />\n              )}\n              trailingChild={<Text>DONE</Text>}\n              trailingIcon={<FaArrowAltCircleDown />}\n              list={[\n                ...props.table.filter(\n                  (x) =>\n                    x.orderStatus === OrderStatus.InProgress ||\n                    x.orderStatus === OrderStatus.Preparing ||\n                    x.orderStatus === OrderStatus.Ready\n                ),\n              ]}\n              onClick={function (orderAction: Order): void {\n                props.changeStatus(orderAction, OrderStatus.Served);\n              }}\n            />\n          </Box>\n          <Divider variant=\"dashed\" />\n          <Box w=\"100%\" bg=\"green.200\">\n            <SwipeableItem\n              children={(orderName, tableNum) => (\n                <DoneOrderCard\n                  orderName={orderName}\n                  tableNum={tableNum}\n                  showTable={false}\n                  fontSize={\"md\"}\n                />\n              )}\n              trailingChild={<Text>BACK</Text>}\n              trailingIcon={<FaArrowAltCircleUp />}\n              list={[\n                ...props.table.filter(\n                  (x) => x.orderStatus === OrderStatus.Served\n                ),\n              ]}\n              onClick={function (orderAction: Order): void {\n                props.changeStatus(orderAction, OrderStatus.Ready);\n              }}\n            />\n          </Box>\n        </VStack>\n\n        <Button\n          w={\"full\"}\n          mt={4}\n          bg=\"gray.900\"\n          color={\"white\"}\n          onClick={toggleOpen}\n          rounded={\"md\"}\n          _hover={{\n            transform: \"translateY(-2px)\",\n            boxShadow: \"lg\",\n          }}\n        >\n          PAY\n        </Button>\n        <TablePayModal\n          isOpen={isPayOpen}\n          table={props.table}\n          toggleOpen={toggleOpen}\n          tableNum={props.tableNumber}\n        />\n      </Box>\n    </Box>\n  );\n}\n","import { useState } from \"react\";\nimport {\n  Flex,\n  Heading,\n  Input,\n  Button,\n  InputGroup,\n  Stack,\n  InputLeftElement,\n  chakra,\n  Box,\n  Link,\n  Avatar,\n  FormControl,\n  FormHelperText,\n  InputRightElement\n} from \"@chakra-ui/react\";\nimport { Formik, Form, Field, FieldProps } from \"formik\";\nimport { FaUserAlt, FaLock } from \"react-icons/fa\";\n\nimport { login } from '../../util/agent';\n\nconst CFaUserAlt = chakra(FaUserAlt);\nconst CFaLock = chakra(FaLock);\n\nconst App = () => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleShowClick = () => setShowPassword(!showPassword);\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      width=\"100wh\"\n      height=\"100vh\"\n      backgroundColor=\"gray.200\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Formik\n        initialValues={{email: '', password: ''}}\n        onSubmit={(values, action) => {\n          login(values);\n          action.setSubmitting(false);\n        }}\n      >\n        {({isSubmitting}) => (\n      <Stack\n        flexDir=\"column\"\n        mb=\"2\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Avatar bg=\"teal.500\" />\n        <Heading color=\"teal.400\">Welcome</Heading>\n        <Box minW={{ base: \"90%\", md: \"468px\" }}>\n          <Form>\n            <Stack\n              spacing={4}\n              p=\"1rem\"\n              backgroundColor=\"whiteAlpha.900\"\n              boxShadow=\"md\"\n            >\n              <Field name=\"email\">\n                {({ field }: FieldProps) => (\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    children={<CFaUserAlt color=\"gray.300\" />}\n                  />\n                  <Input {...field} type=\"email\" placeholder=\"email address\" />\n                </InputGroup>\n              </FormControl>\n              )}\n              </Field>\n              <Field name=\"password\">\n              {({ field }: FieldProps) => (\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    color=\"gray.300\"\n                    children={<CFaLock color=\"gray.300\" />}\n                  />\n                  <Input\n                    {...field}\n                    name=\"password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    placeholder=\"Password\"\n                  />\n                  <InputRightElement width=\"4.5rem\">\n                    <Button h=\"1.75rem\" size=\"sm\" onClick={handleShowClick}>\n                      {showPassword ? \"Hide\" : \"Show\"}\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n                <FormHelperText textAlign=\"right\">\n                  <Link>forgot password?</Link>\n                </FormHelperText>\n              </FormControl>\n              )}\n              </Field>\n              <Button\n                borderRadius={0}\n                type=\"submit\"\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                width=\"full\"\n                isLoading={isSubmitting}\n              >\n                Login\n              </Button>\n            </Stack>\n          </Form>\n        </Box>\n      </Stack>\n      )}\n      </Formik>\n      <Box>\n        New to us?{\" \"}\n        <Link color=\"teal.500\" href=\"/registration\">\n          Sign Up\n        </Link>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default App;\n","import { useState } from \"react\";\nimport {\n  Flex,\n  Heading,\n  Input,\n  Button,\n  InputGroup,\n  Stack,\n  InputLeftElement,\n  chakra,\n  Box,\n  Link,\n  Avatar,\n  FormControl,\n  InputRightElement\n} from \"@chakra-ui/react\";\nimport { BiRestaurant } from \"react-icons/bi\";\nimport { FaUserAlt, FaLock } from \"react-icons/fa\";\nimport { Formik, Form, Field, FieldProps } from \"formik\";\nimport { register } from '../../util/agent';\n\nconst CFaUserAlt = chakra(FaUserAlt);\nconst CFaLock = chakra(FaLock);\n\nconst App = () => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleShowClick = () => setShowPassword(!showPassword);\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      width=\"100wh\"\n      height=\"100vh\"\n      backgroundColor=\"gray.200\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Formik\n        initialValues={{restaurantName: '', email: '', password: ''}}\n        onSubmit={(values, action) => {\n          register(values);\n          console.log(values);\n          action.setSubmitting(false);\n        }}\n      >\n        {({isSubmitting}) => (\n      <Stack\n        flexDir=\"column\"\n        mb=\"2\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Avatar bg=\"teal.500\" />\n        <Heading color=\"teal.400\">Welcome</Heading>\n        <Box minW={{ base: \"90%\", md: \"468px\" }}>\n          <Form>\n            <Stack\n              spacing={4}\n              p=\"1rem\"\n              backgroundColor=\"whiteAlpha.900\"\n              boxShadow=\"md\"\n            >\n              <Field name=\"restaurantName\">\n              {({ field }: FieldProps) => (\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    color=\"gray.300\"\n                    children={<BiRestaurant color=\"gray.300\" />}\n                  />\n                  <Input {...field} type=\"text\" placeholder=\"Restaurant name\"/>\n                </InputGroup>\n              </FormControl>\n              )}\n              </Field>\n              <Field name=\"email\">\n              {({ field }: FieldProps) => (\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    children={<CFaUserAlt color=\"gray.300\" />}\n                  />\n                  <Input {...field} type=\"email\" placeholder=\"email address\" />\n                </InputGroup>\n              </FormControl>\n              )}\n              </Field>\n              <Field name=\"password\">\n              {({ field }: FieldProps) => (\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    color=\"gray.300\"\n                    children={<CFaLock color=\"gray.300\" />}\n                  />\n                  <Input\n                    {...field}\n                    type={showPassword ? \"text\" : \"password\"}\n                    placeholder=\"Password\"\n                  />\n                  <InputRightElement width=\"4.5rem\">\n                    <Button h=\"1.75rem\" size=\"sm\" onClick={handleShowClick}>\n                      {showPassword ? \"Hide\" : \"Show\"}\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n              </FormControl>\n              )}\n              </Field>\n              <Button\n                borderRadius={0}\n                type=\"submit\"\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                width=\"full\"\n                isLoading={isSubmitting}\n              >\n                Registration\n              </Button>\n            </Stack>\n          </Form>\n        </Box>\n      </Stack>\n      )}\n      </Formik>\n      <Box>\n        Already have an account?{\" \"}\n        <Link color=\"teal.500\" href=\"/login\">\n          Login\n        </Link>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default App;\n","const Routes = {\n  HOME: \"/\",\n  RESTAURANT: \"/restaurant\",\n  MANAGEMENT: \"/management\",\n  WAITER: \"/waiter\",\n  KITCHEN: \"/kitchen\",\n  LOGIN: \"/login\",\n  REGISTRATION: \"/registration\"\n};\n\nexport { Routes };\n","import React, { ReactNode } from \"react\";\nimport {\n  IconButton,\n  Box,\n  CloseButton,\n  Flex,\n  Icon,\n  useColorModeValue,\n  Drawer,\n  DrawerContent,\n  Text,\n  useDisclosure,\n  BoxProps,\n  FlexProps,\n} from \"@chakra-ui/react\";\nimport { RiRestaurantFill } from \"react-icons/ri\";\nimport { FiMenu } from \"react-icons/fi\";\nimport { BiFoodMenu } from \"react-icons/bi\";\nimport { GrRestaurant, GrUserManager } from \"react-icons/gr\";\nimport { IconType } from \"react-icons\";\nimport { ReactText } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Routes } from \"../../util/constants\";\n\ninterface LinkItemProps {\n  name: string;\n  icon: IconType;\n  link: string;\n}\nconst LinkItems: Array<LinkItemProps> = [\n  { name: \"Home\", icon: RiRestaurantFill, link: Routes.RESTAURANT },\n  { name: \"Management\", icon: GrUserManager, link: Routes.MANAGEMENT },\n  { name: \"Waiter\", icon: BiFoodMenu, link: Routes.WAITER },\n  { name: \"Kitchen\", icon: GrRestaurant, link: Routes.KITCHEN },\n];\n\nexport default function SimpleSidebar({ children }: { children: ReactNode }) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <Box minH=\"100vh\" bg={useColorModeValue(\"gray.100\", \"gray.900\")}>\n      <SidebarContent\n        onClose={() => onClose}\n        display={{ base: \"none\", md: \"block\" }}\n      />\n      <Drawer\n        autoFocus={false}\n        isOpen={isOpen}\n        placement=\"left\"\n        onClose={onClose}\n        returnFocusOnClose={false}\n        onOverlayClick={onClose}\n        size=\"full\"\n      >\n        <DrawerContent>\n          <SidebarContent onClose={onClose} />\n        </DrawerContent>\n      </Drawer>\n      {/* mobilenav */}\n      <MobileNav display={{ base: \"flex\", md: \"none\" }} onOpen={onOpen} />\n      <Box ml={{ base: 0, md: 60 }} p=\"4\">\n        {children}\n      </Box>\n    </Box>\n  );\n}\n\ninterface SidebarProps extends BoxProps {\n  onClose: () => void;\n}\n\nconst SidebarContent = ({ onClose, ...rest }: SidebarProps) => {\n  return (\n    <Box\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderRight=\"1px\"\n      borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      w={{ base: \"full\", md: 60 }}\n      pos=\"fixed\"\n      h=\"full\"\n      {...rest}\n    >\n      <Flex h=\"20\" alignItems=\"center\" mx=\"8\" justifyContent=\"space-between\">\n        <Text fontSize=\"2xl\" fontFamily=\"monospace\" fontWeight=\"bold\">\n          Logo\n        </Text>\n        <CloseButton display={{ base: \"flex\", md: \"none\" }} onClick={onClose} />\n      </Flex>\n      {LinkItems.map((link) => (\n        <NavItem key={link.name} icon={link.icon} link={link.link}>\n          {link.name}\n        </NavItem>\n      ))}\n    </Box>\n  );\n};\n\ninterface NavItemProps extends FlexProps {\n  icon: IconType;\n  children: ReactText;\n  link: string;\n}\nconst NavItem = ({ icon, children, link, ...rest }: NavItemProps) => {\n  return (\n    <NavLink to={link} style={{ textDecoration: \"none\" }}>\n      <Flex\n        align=\"center\"\n        p=\"4\"\n        mx=\"4\"\n        borderRadius=\"lg\"\n        role=\"group\"\n        cursor=\"pointer\"\n        _hover={{\n          bg: \"cyan.400\",\n          color: \"white\",\n        }}\n        {...rest}\n      >\n        {icon && (\n          <Icon\n            mr=\"4\"\n            fontSize=\"16\"\n            _groupHover={{\n              color: \"white\",\n            }}\n            as={icon}\n          />\n        )}\n        {children}\n      </Flex>\n    </NavLink>\n  );\n};\n\ninterface MobileProps extends FlexProps {\n  onOpen: () => void;\n}\nconst MobileNav = ({ onOpen, ...rest }: MobileProps) => {\n  return (\n    <Flex\n      ml={{ base: 0, md: 60 }}\n      px={{ base: 4, md: 24 }}\n      height=\"20\"\n      alignItems=\"center\"\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderBottomWidth=\"1px\"\n      borderBottomColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      justifyContent=\"flex-start\"\n      {...rest}\n    >\n      <IconButton\n        variant=\"outline\"\n        onClick={onOpen}\n        aria-label=\"open menu\"\n        icon={<FiMenu />}\n      />\n\n      <Text fontSize=\"2xl\" ml=\"8\" fontFamily=\"monospace\" fontWeight=\"bold\">\n        Logo\n      </Text>\n    </Flex>\n  );\n};\n","import { Fragment } from \"react\";\nimport SimpleSidebar from \"./chakra_nav\";\n\ninterface ParentCompProps {\n  childComp?: React.ReactNode;\n}\n\nconst Layout: React.FC<ParentCompProps> = (props) => {\n  return (\n    <Fragment>\n      <SimpleSidebar children={props.children} />\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport RestaurantPage from \"../../pages/restaurant/restaurant_page\";\nimport ManagementPage from \"../../pages/management/management_page\";\nimport KitchenPage from \"../../pages/kitchen/kitchen_page\";\nimport WaiterPage from \"../../pages/waiter/waiter_page\";\nimport LoginPage from \"../../pages/login/login_page\";\nimport RegistrationPage from \"../../pages/registration/registration_page\";\nimport Layout from \"./Layout\";\nimport { Routes } from \"../../util/constants\";\nimport { HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\nimport ApiContext, { ApiContextInterface } from \"../../store/api_context\";\nimport { getToken } from \"../../util/agent\";\n\nfunction CommonNavigator() {\n  const apiContext: ApiContextInterface = {\n    restaurantId: 1,\n    connection: new HubConnectionBuilder()\n      .withUrl(\"http://localhost:5000/restauranthub\", {\n        accessTokenFactory: () => getToken()!.toString(),\n      })\n      .withAutomaticReconnect()\n      .configureLogging(LogLevel.Debug)\n      .build(),\n  };\n\n  return (\n    <ApiContext.Provider value={apiContext}>\n      <Layout>\n        <Switch>\n          <Route path={Routes.HOME} exact>\n            <Redirect to={Routes.RESTAURANT} />\n          </Route>\n          <Route path={Routes.RESTAURANT} exact>\n            <RestaurantPage />\n          </Route>\n          <Route\n            path={Routes.MANAGEMENT}\n            render={(props) =>\n              getToken() !== null ? (\n                <ManagementPage />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route\n            path={Routes.KITCHEN}\n            render={(props) =>\n              getToken() !== null ? <KitchenPage /> : <Redirect to=\"/login\" />\n            }\n          />\n          <Route\n            path={Routes.WAITER}\n            render={(props) =>\n              getToken() !== null ? <WaiterPage /> : <Redirect to=\"/login\" />\n            }\n          />\n          <Route path={Routes.LOGIN}>\n            <LoginPage />\n          </Route>\n          <Route path={Routes.REGISTRATION}>\n            <RegistrationPage />\n          </Route>\n          <Route path=\"*\">\n            <div>NOTHING TO SEE HERE PAGE</div>\n          </Route>\n        </Switch>\n      </Layout>\n    </ApiContext.Provider>\n  );\n}\n\nexport default CommonNavigator;\n","import React from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { Router } from \"react-router-dom\";\nimport {createBrowserHistory} from 'history';\nimport CommonNavigator from \"./common/navigation/common_navigator\";\n\nimport { enableMapSet } from \"immer\";\n\nenableMapSet();\n\nexport const history = createBrowserHistory();\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <Router history={history}>\n        <CommonNavigator />\n      </Router>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}