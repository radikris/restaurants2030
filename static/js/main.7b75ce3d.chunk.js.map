{"version":3,"sources":["pages/restaurant/restaurant_page.tsx","pages/management/management_page.tsx","pages/kitchen/kitchen_page.tsx","pages/waiter/components/swipeable_item.tsx","pages/waiter/components/add_order_card.tsx","pages/waiter/components/done_order_card.tsx","pages/waiter/components/table_card.tsx","pages/waiter/waiter_page.tsx","util/constants.js","common/navigation/chakra_nav.tsx","common/navigation/Layout.tsx","common/navigation/common_navigator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RestaurantPage","ManagementPage","KitchenPage","SwipeableItem","props","fullSwipe","style","backgroundColor","type","ListType","ANDROID","threshold","list","map","order","key","trailingActions","orderAction","onClick","destructive","bg","justifyContent","display","d","px","icon","swipeChild","children","title","table","countries","value","label","AddOrderCard","React","useState","pickerItems","setPickerItems","selectedItems","setSelectedItems","colorScheme","size","placeholder","onCreateItem","item","curr","itemRenderer","selected","spacing","items","onSelectedItemsChange","changes","console","log","handleSelectedItemsChange","variant","forEach","addNewOrders","id","tableNum","price","DoneOrderCard","flexGrow","mx","fontSize","fontWeight","orderName","showTable","my","TableCard","maxW","w","boxShadow","rounded","overflow","m","_hover","transform","borderColor","p","templateColumns","gap","mb","mr","addToPending","pending","addToFinished","finished","mt","color","ActionTypes","WaiterPage","useReducer","produce","draft","action","idx","findIndex","x","mod","ADD_TO_PENDING","push","splice","ADD_TO_FINISHED","INITIAL","undefined","allOrders","index","tableOrders","tableOrdersDispatch","allPendingOrder","setAllPendingOrders","isDescending","setIsDescending","handleSortList","retValue","sortedList","sort","a","b","useEffect","returnArray","concat","handleAddToPending","useCallback","handleAddToFinished","fetch","then","res","json","data","templateRows","colSpan","Routes","LinkItems","name","RiRestaurantFill","link","GrUserManager","BiFoodMenu","GrRestaurant","SimpleSidebar","useDisclosure","isOpen","onOpen","onClose","minH","useColorModeValue","base","md","autoFocus","placement","returnFocusOnClose","onOverlayClick","ml","SidebarContent","rest","borderRight","borderRightColor","pos","h","alignItems","fontFamily","NavItem","to","textDecoration","align","borderRadius","role","cursor","_groupHover","as","MobileNav","height","borderBottomWidth","borderBottomColor","Layout","CommonNavigator","path","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b75ce3d.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function RestaurantPage() {\n    return (\n        <div>\n            RESTAURANT NÉZET\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function ManagementPage() {\n    return (\n        <div>\n            MANAGEMENT NÉZET\n        </div>\n    )\n}\n","import React from \"react\";\n\nexport default function KitchenPage() {\n  return <div>KITCHEN NÉZET</div>;\n}\n","import { Box, Center, Flex } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nimport {\n  SwipeableList,\n  SwipeableListItem,\n  SwipeAction,\n  TrailingActions,\n  Type as ListType,\n} from \"react-swipeable-list\";\nimport \"react-swipeable-list/dist/styles.css\";\nimport { OrderModel } from \"../../../models/order\";\n\ninterface Props {\n  children: (orderName: string, tableNum: number) => React.ReactNode;\n  swipeChild: React.ReactNode;\n  icon: React.ReactNode;\n  id: string;\n  list: OrderModel[];\n  onClick: (orderAction: OrderModel) => void;\n}\n\nexport default function SwipeableItem(props: Props) {\n  const trailingActions = (\n    orderAction: OrderModel,\n    onClick: (orderAction: OrderModel) => void\n  ) => (\n    <TrailingActions>\n      <SwipeAction\n        destructive={true}\n        onClick={() => {\n          onClick(orderAction);\n        }}\n      >\n        <Box bg=\"red.200\">\n          <Center justifyContent=\"justify-center\" display=\"row\" d=\"flex\" px=\"1\">\n            {props.icon}\n            {props.swipeChild}\n          </Center>\n        </Box>\n      </SwipeAction>\n    </TrailingActions>\n  );\n\n  return (\n    <Flex>\n      <SwipeableList\n        fullSwipe={true}\n        style={{ backgroundColor: \"orange.200\" }}\n        type={ListType.ANDROID}\n        threshold={0.5}\n      >\n        {props.list.map((order, key) => (\n          <SwipeableListItem\n            key={order.title}\n            trailingActions={trailingActions(order, props.onClick)}\n          >\n            {props.children(order.title, order.table)}\n          </SwipeableListItem>\n        ))}\n      </SwipeableList>\n    </Flex>\n  );\n}\n","import {\n  Box,\n  Button,\n  Text,\n  Center,\n  Flex,\n  Popover,\n  PopoverArrow,\n  PopoverBody,\n  PopoverCloseButton,\n  PopoverContent,\n  PopoverFooter,\n  Spacer,\n  PopoverTrigger,\n  Portal,\n} from \"@chakra-ui/react\";\nimport { CUIAutoComplete } from \"chakra-ui-autocomplete\";\nimport React from \"react\";\nimport { FaPlus } from \"react-icons/fa\";\nimport { OrderModel } from \"../../../models/order\";\n\nexport interface Item {\n  label: string;\n  value: string;\n}\nconst countries = [\n  { value: \"Order1\", label: \"Order1\" },\n  { value: \"Order2\", label: \"Order2\" },\n  { value: \"Order3\", label: \"Order3\" },\n  { value: \"Order4\", label: \"Order4\" },\n  { value: \"Order5\", label: \"Order5\" },\n  { value: \"Order6\", label: \"Order6\" },\n  { value: \"Order7\", label: \"Order7\" },\n  { value: \"Order8\", label: \"Order8\" },\n  { value: \"Order9\", label: \"Order9\" },\n  { value: \"Order10\", label: \"Order10\" },\n];\n\nexport interface AddOrderProps {\n  tableNum: number;\n  addNewOrders: (order: OrderModel) => void;\n}\n\nconst AddOrderCard = (props: AddOrderProps) => {\n  const [pickerItems, setPickerItems] = React.useState(countries);\n  const [selectedItems, setSelectedItems] = React.useState<Item[]>([]);\n\n  const handleCreateItem = (item: Item) => {\n    setPickerItems((curr) => [...curr, item]);\n    setSelectedItems((curr) => [...curr, item]);\n  };\n\n  const handleSelectedItemsChange = (selectedItems?: Item[]) => {\n    if (selectedItems) {\n      console.log(selectedItems!);\n      setSelectedItems(selectedItems);\n    }\n  };\n\n  const handleOrderAdd = () => {\n    selectedItems.forEach((item) => {\n      props.addNewOrders({\n        id: item.value,\n        table: props.tableNum,\n        title: item.label,\n        price: 12,\n      });\n    });\n\n    setSelectedItems([]);\n  };\n\n  const customRender = (selected: Item) => {\n    return (\n      <Flex spacing={5} justifyContent=\"space-between\">\n        <Text>{selected.label}</Text>\n        <Spacer />\n        <Box></Box>\n      </Flex>\n    );\n  };\n\n  return (\n    <Popover>\n      <PopoverTrigger>\n        <Button colorScheme=\"orange\" size=\"xs\">\n          <FaPlus />\n        </Button>\n      </PopoverTrigger>\n      <Portal>\n        <PopoverContent>\n          <PopoverArrow />\n          <PopoverCloseButton />\n          <PopoverBody>\n            <CUIAutoComplete\n              label=\"Search your order or click dropdown\"\n              placeholder=\"Order name\"\n              onCreateItem={handleCreateItem}\n              selectedItems={selectedItems}\n              itemRenderer={customRender}\n              items={pickerItems}\n              onSelectedItemsChange={(changes) => {\n                handleSelectedItemsChange(changes.selectedItems);\n              }}\n            />\n          </PopoverBody>\n          <PopoverFooter>\n            <Center>\n              <Button\n                colorScheme=\"teal\"\n                variant=\"outline\"\n                onClick={handleOrderAdd}\n              >\n                ADD ORDERS\n              </Button>\n            </Center>\n          </PopoverFooter>\n        </PopoverContent>\n      </Portal>\n    </Popover>\n  );\n};\n\nexport default AddOrderCard;\n","import { Badge, Box, Divider, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nexport interface Props {\n  orderName: string;\n  tableNum: number;\n  showTable: boolean;\n  fontSize: string;\n}\n\nexport default function DoneOrderCard(props: Props) {\n  return (\n    <Box flexGrow={1} mx={2}>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Text fontSize={props.fontSize} fontWeight=\"bold\">\n          {props.orderName}\n        </Text>\n        {props.showTable && (\n          <Badge my=\"1\" fontSize=\"0.8em\" colorScheme=\"green\" variant=\"solid\">\n            TABLE {props.tableNum}\n          </Badge>\n        )}\n      </Box>\n      <Divider />\n    </Box>\n  );\n}\n","import {\n  Badge,\n  Box,\n  Grid,\n  VStack,\n  Text,\n  Divider,\n  Button,\n} from \"@chakra-ui/react\";\n\nimport \"react-swipeable-list/dist/styles.css\";\n\nimport { FaArrowAltCircleDown, FaArrowAltCircleUp } from \"react-icons/fa\";\nimport SwipeableItem from \"./swipeable_item\";\nimport { OrderModel } from \"../../../models/order\";\nimport { TableOrderModel } from \"../../../models/tableorder\";\n\nimport AddOrderCard from \"./add_order_card\";\nimport DoneOrderCard from \"./done_order_card\";\n\ninterface Props {\n  table: TableOrderModel;\n  addToPending: (order: OrderModel) => void;\n  addToFinished: (order: OrderModel) => void;\n}\n\nexport default function TableCard(props: Props) {\n  return (\n    <Box\n      maxW={\"270px\"}\n      w={\"full\"}\n      bg=\"whiteAlpha.900\"\n      boxShadow={\"2xl\"}\n      rounded={\"md\"}\n      overflow={\"hidden\"}\n      m=\"3\"\n      _hover={{\n        transform: \"scale(1.2)\",\n        boxShadow: \"lg\",\n        borderColor: \"grey.900\",\n      }}\n    >\n      <Box p={6}>\n        <VStack spacing=\"2px\">\n          <Grid templateColumns=\"repeat(3, 1fr)\" gap={6}>\n            <Box />\n            <Badge fontSize=\"md\" mb={1} mr={3}>\n              Table {props.table.table}\n            </Badge>\n            <AddOrderCard\n              addNewOrders={props.addToPending}\n              tableNum={props.table.table}\n            />\n          </Grid>\n\n          <Box\n            w=\"100%\"\n            bg=\"orange.200\"\n            d=\"flex\"\n            display=\"table-column\"\n            justifyContent=\"justify-start\"\n          >\n            <SwipeableItem\n              children={(orderName, tableNum) => (\n                <DoneOrderCard\n                  fontSize={\"md\"}\n                  orderName={orderName}\n                  tableNum={tableNum}\n                  showTable={false}\n                />\n              )}\n              swipeChild={<Text>DONE</Text>}\n              icon={<FaArrowAltCircleDown />}\n              id=\"1\"\n              list={props.table.pending}\n              onClick={function (orderAction: OrderModel): void {\n                props.addToFinished(orderAction);\n              }}\n            />\n          </Box>\n          <Divider variant=\"dashed\" />\n          <Box w=\"100%\" bg=\"green.200\">\n            <SwipeableItem\n              children={(orderName, tableNum) => (\n                <DoneOrderCard\n                  orderName={orderName}\n                  tableNum={tableNum}\n                  showTable={false}\n                  fontSize={\"md\"}\n                />\n              )}\n              swipeChild={<Text>BACK</Text>}\n              icon={<FaArrowAltCircleUp />}\n              id=\"1\"\n              list={props.table.finished}\n              onClick={function (orderAction: OrderModel): void {\n                props.addToPending(orderAction);\n              }}\n            />\n          </Box>\n        </VStack>\n\n        <Button\n          w={\"full\"}\n          mt={4}\n          bg=\"gray.900\"\n          color={\"white\"}\n          rounded={\"md\"}\n          _hover={{\n            transform: \"translateY(-2px)\",\n            boxShadow: \"lg\",\n          }}\n        >\n          PAY\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState, useEffect, useReducer, useCallback } from \"react\";\n\nimport \"react-multi-carousel/lib/styles.css\";\nimport { Text, Wrap, Grid, GridItem, Center } from \"@chakra-ui/react\";\nimport TableCard from \"./components/table_card\";\nimport DoneOrderCard from \"./components/done_order_card\";\nimport { FaArrowAltCircleUp, FaAngleDown, FaAngleUp } from \"react-icons/fa\";\nimport SwipeableItem from \"./components/swipeable_item\";\nimport { OrderModel } from \"../../models/order\";\nimport { TableOrderModel } from \"../../models/tableorder\";\nimport produce from \"immer\";\n\nenum ActionTypes {\n  ADD_TO_FINISHED = \"AddToFinished\",\n  ADD_TO_PENDING = \"AddToPending\",\n  INITIAL = \"Initial\",\n}\n\ntype Action = {\n  type: ActionTypes;\n  order: OrderModel;\n  allOrders?: TableOrderModel[];\n};\n\nexport default function WaiterPage() {\n  const [tableOrders, tableOrdersDispatch] = useReducer(\n    produce((draft: TableOrderModel[], action: Action) => {\n      const idx = draft.findIndex((x) => x.table === action.order.table);\n      var mod = draft[idx];\n      switch (action.type) {\n        case ActionTypes.ADD_TO_PENDING: {\n          mod.pending.push(action.order);\n          let idx = mod.finished.findIndex((x) => x.id === action.order.id);\n          if (idx !== -1) mod.finished.splice(idx, 1);\n          break;\n        }\n        case ActionTypes.ADD_TO_FINISHED: {\n          mod.finished.push(action.order);\n          let idx = mod.pending.findIndex((x) => x.id === action.order.id);\n          if (idx !== -1) mod.pending.splice(idx, 1);\n          break;\n        }\n        case ActionTypes.INITIAL: {\n          if (action.allOrders !== undefined) {\n            action.allOrders.forEach((value, index) => draft.push(value));\n          }\n          break;\n        }\n      }\n    }),\n    [],\n    undefined\n  );\n\n  const [allPendingOrder, setAllPendingOrders] = useState<OrderModel[]>([]);\n  const [isDescending, setIsDescending] = useState<boolean>(true);\n\n  const handleSortList = () => {\n    const retValue = isDescending ? 1 : -1;\n\n    const sortedList = allPendingOrder.sort((a, b) =>\n      a.table > b.table ? retValue : -1 * retValue\n    );\n\n    console.log(isDescending);\n    setIsDescending(!isDescending);\n    setAllPendingOrders(sortedList);\n  };\n\n  useEffect(() => {\n    var returnArray: OrderModel[] = [];\n    tableOrders.forEach(\n      (order, index) => (returnArray = returnArray.concat(order.pending))\n    );\n    setAllPendingOrders(returnArray);\n  }, [tableOrders]);\n\n  const handleAddToPending = useCallback((order: OrderModel) => {\n    tableOrdersDispatch({ type: ActionTypes.ADD_TO_PENDING, order: order });\n  }, []);\n\n  const handleAddToFinished = useCallback((order: OrderModel) => {\n    tableOrdersDispatch({ type: ActionTypes.ADD_TO_FINISHED, order: order });\n  }, []);\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/allTableOrders\")\n      .then((res) => res.json())\n      .then((data: TableOrderModel[]) => {\n        tableOrdersDispatch({\n          type: ActionTypes.INITIAL,\n          order: { title: \"\", price: -1, id: \"-1\", table: -1 },\n          allOrders: data,\n        });\n      });\n  }, []);\n\n  return (\n    <Grid\n      templateRows=\"repeat(1, 1fr)\"\n      templateColumns=\"repeat(5, 1fr)\"\n      gap={4}\n    >\n      <GridItem colSpan={4} bg=\"yellow.50\" p={2}>\n        <Center mx={1}>\n          <Text my={3} fontSize={\"2xl\"} fontWeight={\"bold\"} color={\"grey.700\"}>\n            Restaurant's tables\n          </Text>\n        </Center>\n        <Wrap>\n          {tableOrders.map((item, index) => (\n            <TableCard\n              key={index}\n              table={item}\n              addToFinished={handleAddToFinished}\n              addToPending={handleAddToPending}\n            />\n          ))}\n        </Wrap>\n      </GridItem>\n      <GridItem colSpan={1} bg=\"red.200\">\n        <Center mx={1}>\n          <Text\n            my={3}\n            mx={3}\n            fontSize={\"2xl\"}\n            fontWeight={\"bold\"}\n            color={\"grey.700\"}\n          >\n            Finished orders\n          </Text>\n          {isDescending && <FaAngleUp onClick={handleSortList} />}\n          {!isDescending && <FaAngleDown onClick={handleSortList} />}\n        </Center>\n        <SwipeableItem\n          children={(orderName, tableNum) => (\n            <DoneOrderCard\n              orderName={orderName}\n              tableNum={tableNum}\n              showTable={true}\n              fontSize={\"xl\"}\n            />\n          )}\n          swipeChild={<Text>DONE</Text>}\n          icon={<FaArrowAltCircleUp />}\n          id=\"1\"\n          list={allPendingOrder}\n          onClick={function (orderAction: OrderModel): void {\n            handleAddToFinished(orderAction);\n          }}\n        />\n      </GridItem>\n    </Grid>\n  );\n}\n","const Routes = {\n  HOME: \"/\",\n  RESTAURANT: \"/restaurant\",\n  MANAGEMENT: \"/management\",\n  WAITER: \"/waiter\",\n  KITCHEN: \"/kitchen\",\n};\n\nexport { Routes };\n","import React, { ReactNode } from \"react\";\nimport {\n  IconButton,\n  Box,\n  CloseButton,\n  Flex,\n  Icon,\n  useColorModeValue,\n  Drawer,\n  DrawerContent,\n  Text,\n  useDisclosure,\n  BoxProps,\n  FlexProps,\n} from \"@chakra-ui/react\";\nimport { RiRestaurantFill } from \"react-icons/ri\";\nimport { FiMenu } from \"react-icons/fi\";\nimport { BiFoodMenu } from \"react-icons/bi\";\nimport { GrRestaurant, GrUserManager } from \"react-icons/gr\";\nimport { IconType } from \"react-icons\";\nimport { ReactText } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Routes } from \"../../util/constants\";\n\ninterface LinkItemProps {\n  name: string;\n  icon: IconType;\n  link: string;\n}\nconst LinkItems: Array<LinkItemProps> = [\n  { name: \"Home\", icon: RiRestaurantFill, link: Routes.RESTAURANT },\n  { name: \"Management\", icon: GrUserManager, link: Routes.MANAGEMENT },\n  { name: \"Waiter\", icon: BiFoodMenu, link: Routes.WAITER },\n  { name: \"Kitchen\", icon: GrRestaurant, link: Routes.KITCHEN },\n];\n\nexport default function SimpleSidebar({ children }: { children: ReactNode }) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <Box minH=\"100vh\" bg={useColorModeValue(\"gray.100\", \"gray.900\")}>\n      <SidebarContent\n        onClose={() => onClose}\n        display={{ base: \"none\", md: \"block\" }}\n      />\n      <Drawer\n        autoFocus={false}\n        isOpen={isOpen}\n        placement=\"left\"\n        onClose={onClose}\n        returnFocusOnClose={false}\n        onOverlayClick={onClose}\n        size=\"full\"\n      >\n        <DrawerContent>\n          <SidebarContent onClose={onClose} />\n        </DrawerContent>\n      </Drawer>\n      {/* mobilenav */}\n      <MobileNav display={{ base: \"flex\", md: \"none\" }} onOpen={onOpen} />\n      <Box ml={{ base: 0, md: 60 }} p=\"4\">\n        {children}\n      </Box>\n    </Box>\n  );\n}\n\ninterface SidebarProps extends BoxProps {\n  onClose: () => void;\n}\n\nconst SidebarContent = ({ onClose, ...rest }: SidebarProps) => {\n  return (\n    <Box\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderRight=\"1px\"\n      borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      w={{ base: \"full\", md: 60 }}\n      pos=\"fixed\"\n      h=\"full\"\n      {...rest}\n    >\n      <Flex h=\"20\" alignItems=\"center\" mx=\"8\" justifyContent=\"space-between\">\n        <Text fontSize=\"2xl\" fontFamily=\"monospace\" fontWeight=\"bold\">\n          Logo\n        </Text>\n        <CloseButton display={{ base: \"flex\", md: \"none\" }} onClick={onClose} />\n      </Flex>\n      {LinkItems.map((link) => (\n        <NavItem key={link.name} icon={link.icon} link={link.link}>\n          {link.name}\n        </NavItem>\n      ))}\n    </Box>\n  );\n};\n\ninterface NavItemProps extends FlexProps {\n  icon: IconType;\n  children: ReactText;\n  link: string;\n}\nconst NavItem = ({ icon, children, link, ...rest }: NavItemProps) => {\n  return (\n    <NavLink to={link} style={{ textDecoration: \"none\" }}>\n      <Flex\n        align=\"center\"\n        p=\"4\"\n        mx=\"4\"\n        borderRadius=\"lg\"\n        role=\"group\"\n        cursor=\"pointer\"\n        _hover={{\n          bg: \"cyan.400\",\n          color: \"white\",\n        }}\n        {...rest}\n      >\n        {icon && (\n          <Icon\n            mr=\"4\"\n            fontSize=\"16\"\n            _groupHover={{\n              color: \"white\",\n            }}\n            as={icon}\n          />\n        )}\n        {children}\n      </Flex>\n    </NavLink>\n  );\n};\n\ninterface MobileProps extends FlexProps {\n  onOpen: () => void;\n}\nconst MobileNav = ({ onOpen, ...rest }: MobileProps) => {\n  return (\n    <Flex\n      ml={{ base: 0, md: 60 }}\n      px={{ base: 4, md: 24 }}\n      height=\"20\"\n      alignItems=\"center\"\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderBottomWidth=\"1px\"\n      borderBottomColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      justifyContent=\"flex-start\"\n      {...rest}\n    >\n      <IconButton\n        variant=\"outline\"\n        onClick={onOpen}\n        aria-label=\"open menu\"\n        icon={<FiMenu />}\n      />\n\n      <Text fontSize=\"2xl\" ml=\"8\" fontFamily=\"monospace\" fontWeight=\"bold\">\n        Logo\n      </Text>\n    </Flex>\n  );\n};\n","import { Fragment } from \"react\";\nimport SimpleSidebar from \"./chakra_nav\";\n\ninterface ParentCompProps {\n  childComp?: React.ReactNode;\n}\n\nconst Layout: React.FC<ParentCompProps> = (props) => {\n  return (\n    <Fragment>\n      <SimpleSidebar children={props.children} />\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport RestaurantPage from \"../../pages/restaurant/restaurant_page\";\nimport ManagementPage from \"../../pages/management/management_page\";\nimport KitchenPage from \"../../pages/kitchen/kitchen_page\";\nimport WaiterPage from \"../../pages/waiter/waiter_page\";\nimport Layout from \"./Layout\";\nimport { Routes } from \"../../util/constants\";\n\nfunction CommonNavigator() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path={Routes.HOME} exact>\n          <Redirect to={Routes.RESTAURANT} />\n        </Route>\n        <Route path={Routes.RESTAURANT} exact>\n          <RestaurantPage />\n        </Route>\n        <Route path={Routes.MANAGEMENT}>\n          <ManagementPage />\n        </Route>\n        <Route path={Routes.KITCHEN}>\n          <KitchenPage />\n        </Route>\n        <Route path={Routes.WAITER}>\n          <WaiterPage />\n        </Route>\n        <Route path=\"*\">\n          <div>NOTHING TO SEE HERE PAGE</div>\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default CommonNavigator;\n","import React from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport CommonNavigator from \"./common/navigation/common_navigator\";\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <BrowserRouter>\n        <CommonNavigator />\n      </BrowserRouter>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}